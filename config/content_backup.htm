<h1>About</h1>
<p>這裡是國立虎尾科技大學機械設計工程系大二的電腦輔助設計實習課程網頁.</p>
<h4>何謂電腦輔助(機械)設計實習?</h4>
<p>電腦其實只擅長兩件事, 能夠高速計算, 並且儲存各階段計算所得到的結果.</p>
<p>輔助指從旁支撐協助, 藉以提升主體功能.</p>
<p>設計是一種安排, 而且應該是竭盡全力, 希望達到盡善盡美的一種安排.</p>
<p>機械是一種器物, 而且是各零組件精巧配置運行下, 可以達成特定任務, 發揮設計功能的一種器物.</p>
<p>實習包括實驗與練習, 實驗是實際體驗, 而練習則是透過重複操作進行學習.</p>
<p>所以該如定義電腦輔助設計實習?</p>
<h4>課程設計理念</h4>
<p style="padding-left: 30px;"></p>
<p style="padding-left: 30px;">電腦輔助設計牽涉如何利用計算機系統相關技術, 以協助產品設計的多元探索, 快速創建, 便捷修改, 合理分析和最佳化, 其目的在建構出精確的新產品數位模型.</p>
<p style="padding-left: 30px;">產品設計的創建牽涉利用參數式繪圖套件建立 3D 零件與組立, 而設計修改可以採人工或程式方法進行, 至於本課程所牽涉的設計分析僅止於將機電系統輸入 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 進行 <a href="https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm">Kinematic</a> 與 <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">Dynamic</a> 分析模擬.</p>
<p style="padding-left: 30px;">從 3D 零組件的創建並轉進 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a>, 若能採程式方法配合參數化尺寸與組態修改, 並且將資料改版過程採用 Git (<a href="https://github.com/">Github</a>) 或 <a href="https://fossil-scm.org/">Fossil SCM</a> 進行分散式版次管理, 或者更近一步設法搭建網際系統以提高設計效能, 將可在分組團隊中採取最佳化同步設計.</p>
<h4>課程使用工具</h4>
<p style="padding-left: 30px;">CAD2020 將在 <a href="https://kaggle.com">https://kaggle.com</a>, <a href="https://colab.research.google.com">https://colab.research.google.com</a> 以及可攜程式系統上編寫與 <a href="https://flask.palletsprojects.com">Flask</a> 網際程式, 目的是利用 <a href="https://www.onshape.com/">Onshape</a>, <a href="https://blogs.sw.siemens.com/nx-design/">NX</a>12, <a href="https://www.solidworks.com/">Solidworks</a> 2017 與 <a href="https://www.autodesk.com/products/inventor/">AutoDesk Inventor</a> 2019 設計機電資整合系統所需的零組件後, 可結合 <a href="https://flutter.dev">Flutter </a>手機程式與網際 <a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">Python Remote API</a> 程式控制 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 環境中的<a href="https://github.com/CoppeliaRobotics/models">虛擬系統</a>.</p>
<p>以下是 CAD2020 課程進行流程:</p>
<p style="padding-left: 30px;">W1 學員填寫基本資料</p>
<p style="padding-left: 30px;">W1 告知將利用 <a href="https://gitter.im/">Gitter</a> 與 <a href="https://www.discourse.org/">Discourse</a> 進行課程議題討論</p>
<p style="padding-left: 60px;"><a href="https://gitter.im/mdecourse/cad2020">https://gitter.im/mdecourse/cad2020</a> </p>
<p style="padding-left: 60px;"><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a> </p>
<p style="padding-left: 30px;">W1 就電腦軟硬體與網路環境的使用進行介紹</p>
<p style="padding-left: 30px;">W2 學員建立 <a href="https://github.com/">Github</a>, <a href="https://gitlab.com">Gitlab,</a> <a href="https://www.heroku.com/">Heroku</a>, <a href="https://www.onshape.com/">Onshape</a> 與 <a href="https://www.authorea.com/">Authorea</a> 帳號</p>
<p style="padding-left: 30px;">Ｗ2 學員利用 Github Pages 與 CMSiMDE 建立個人網頁</p>
<p style="padding-left: 30px;">W2 學員學習如何利用 Git 與 Github 維護個人網頁</p>
<p style="padding-left: 30px;">Ｗ3 統整 W1 與 W2 教材內容至各學員個人網頁</p>
<p style="padding-left: 30px;">Ｗ3 完成亂數分組,  每班分成四組</p>
<p style="padding-left: 30px;">W4 - W6 Flask on Heroku 與 CoppeliaSim Remote API 程式編寫</p>
<p style="padding-left: 30px;">W7-W9 建立 <a href="https://github.com/mdecourse/vrep-api-python">https://github.com/mdecourse/vrep-api-python</a> 所需零組件</p>
<p style="padding-left: 30px;">Ｗ10 - W14 分組電腦輔助設計專案</p>
<p style="padding-left: 30px;">Ｗ15 - W18 分組總結報告</p>
<h4>電腦輔助設計室與協同設計室行事曆</h4>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>評分</h2>
<p><a href="https://docs.google.com/forms/d/e/1FAIpQLSe_9DoEZOnxBTyMaW0W_W_-jqCk6IaiO7waiLvQUqfFzuU3ig/viewform?usp=sf_link">電腦輔助設計實習自評與互評表單</a> (每週課程結束後, 請登入 @gm 後填寫)</p>
<p><img alt="" height="379" src="/images/feedback loop student-teacher interaction.png" width="800"/></p>
<p>(上圖取自 <a href="https://link.springer.com/book/10.1007/978-3-642-03446-6">https://link.springer.com/book/10.1007/978-3-642-03446-6</a>)</p>
<p>本課程的評分標準:</p>
<ol>
<li>從未遲到者得 10%</li>
<li>從未缺席且從未無正當理由離席超過 15 分鐘者得 20%</li>
<li>從未缺交各週作業且從未抄襲他人作業且從未不當引用網路資料者得 30%</li>
<li>作業與報告內容充實, 每一項課程內容都拍攝具參考價值之教學影片者得 20%</li>
<li>完成具體且創新之課程內容改進項目, 並能積極協助組員解決各種難題者得 10%</li>
<li>個人之倉儲內容, 網頁, 網誌與簡報內容均令人嘆為觀止者得 10%</li>
</ol>
<p>根據上述課程評分標準, 由組員之自評成績決定課程期中成績, 視為本課程之學員期望成績, 期中考後, 則依據各週之組員自評成績, 組員互評成績與教師評分成績, 按照下列流程計算學員之學期成績.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
根據評分表單中的 自評分數, 互評得分, 教師評分, 計算學員課程成績
'''
# diff 函式傳回兩輸入分數的絕對差值 
def diff(分數1, 分數2):
    return abs(分數1 - 分數2)
     
# getHigh函式傳回兩分數中較高者
def getHigh(分數1, 分數2):
    if  分數1 &gt; 分數2:
        return 分數1
    else:
        return 分數2

# getLow 函式傳回兩分數中較低者
def getLow(分數1, 分數2):
    if  分數1 &lt; 分數2:
        return 分數1
    else:
        return 分數2

# 分組評分函式取自評與教師評分比較, 若差距大於 5 分取其低者
# 否則依自評 40%, 教師 60% 計算
def 分組評分(自評分數, 教師評分):
    return getLow(自評分數, 教師評分)
    if diff(自評分數, 教師評分) &gt; 5:
        return getLow(自評分數, 教師評分)
    else:
        return int(自評分數*0.4 + 教師評分*0.6)

# 全班比分函式取互評與分組評分比較, 若差距小於 5 分取其高者
# 否則依互評得分 40%, 分組評分 60% 計算     
def 全班比分(互評得分, 分組評分):
    if diff(互評得分, 分組評分) &lt; 5:
        學員成績 = getHigh(互評得分, 分組評分)
    else:
        學員成績 = int(互評得分*0.4 + 分組評分*0.6)
    return 學員成績

# 學員之學期成績依照上述分組評分與全班比分函式計算 
def 學員成績(自評分數, 互評得分, 教師評分):
    學員課程成績 = 全班比分(互評得分, 分組評分(自評分數, 教師評分))
    return 學員課程成績

# 利用迴圈從 50 起每次增量 5 分, 分別列出各評分組合下的成績計算結果    
for i in range(10):
    self_score = 50 + i*5
    for j in range(10):
        peer_score = 50 + j*5
        for k in range(10):
            teacher_score = 50 + k*5
            print(self_score, peer_score, teacher_score, "=", 學員成績(self_score, peer_score, teacher_score))</pre><h2>討論區</h2>
<p><a href="https://gitter.im/mdecourse/cad2020">https://gitter.im/mdecourse/cad2020</a> (與電腦輔助設計實習相關)</p>
<p><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a> (其他議題討論)</p><h2>分組</h2>
<h4>修課人員名單:</h4>
<p>四技二甲電腦輔助設計實習:</p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0788">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0788</a></p>
<p>四技二乙電腦輔助設計實習:</p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0801">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0801</a></p>
<h2>Python</h2>
<p><a href="https://swcarpentry.github.io/python-second-language/">https://swcarpentry.github.io/python-second-language/</a></p>
<p><a href="https://vpython.org/">https://vpython.org/</a> </p>
<p><a href="https://github.com/IKMLab/course_material">https://github.com/IKMLab/course_material</a> </p><h1>Open Tech</h1>
<p>CMU Open Learning Initiative: <a href="https://oli.cmu.edu/?s=pathway+open+and+free&amp;post_type=product">https://oli.cmu.edu/?s=pathway+open+and+free&amp;post_type=product</a></p>
<p><a href="https://community.oli.cmu.edu/jcourse/webui/guest/join.do?section=electvehicle">https://community.oli.cmu.edu/jcourse/webui/guest/join.do?section=electvehicle</a>  (50703199 At mde)</p>
<p><img alt="" class="add_border" height="576" src="/images/oli_cmu_stem.png" width="800"/></p>
<p>P-Tech: <a href="https://www.ptech.org/open-p-tech/">https://www.ptech.org/open-p-tech/</a> </p>
<p><a href="/downloads/The FAIR Guiding Principles for Scientiric data management and stewardship.pdf">The FAIR Guiding Principles for Scientiric data management and stewardship.pdf</a></p><h2>Mechatronics</h2>
<p><a href="https://oli.cmu.edu/courses/mechatronics-technology-nsc-stem-pathways-copy/">https://oli.cmu.edu/courses/mechatronics-technology-nsc-stem-pathways-copy/</a></p>
<p><a href="http://cmra.rec.ri.cmu.edu/products/cortex_video_trainer/">http://cmra.rec.ri.cmu.edu/products/cortex_video_trainer/</a></p><h3>PICsimlab</h3>
<p><a href="https://lcgamboa.github.io/">https://lcgamboa.github.io/</a></p>
<p><a href="https://github.com/mdecourse/picsimlab">https://github.com/mdecourse/picsimlab</a></p>
<h3>UnoArduSim</h3>
<p><a href="https://www.sites.google.com/site/unoardusim/services">https://www.sites.google.com/site/unoardusim/services</a></p><h2>Cyber Tech</h2>
<p><a href="https://oli.cmu.edu/courses/cyber-technology-nsc-stem-pathways-open-free/">https://oli.cmu.edu/courses/cyber-technology-nsc-stem-pathways-open-free/</a> </p>
<h2>E-vehicle</h2>
<p><a href="https://oli.cmu.edu/courses/electric-vehicle-technology-nsc-stem-pathways-open-free/">https://oli.cmu.edu/courses/electric-vehicle-technology-nsc-stem-pathways-open-free/</a> </p>
<h2>Composite Tech</h2>
<p><a href="https://oli.cmu.edu/courses/composites-technology-nsc-stem-pathways-open-free/">https://oli.cmu.edu/courses/composites-technology-nsc-stem-pathways-open-free/</a> </p><h1>Topics</h1>
<p>課程助教:</p>
<p style="padding-left: 30px;">40723150 (lead), 40723110, 40723115, 40723138, 40723148</p>
<p style="padding-left: 30px;">40723145 (lead), 40723102, 40723103, 40723153, 40723245</p>
<p style="padding-left: 30px;">40723212 (lead), 40723216, 40723223, 40723246</p>
<p>負責事項:</p>
<p>電腦輔助設計室電腦第三磁區系統維護</p>
<p>每週四 19:00 - 21:00 在電腦輔助設計室為操作實習與助教協助回答問題時間</p><h2>Video</h2>
<p>本課程所有學員都必須熟悉利用下列工具製作電腦操作過程錄影並協同進行線上直播與錄影:</p>
<h4 style="padding-left: 30px;"><a href="https://github.com/ShareX/ShareX/releases">ShareX</a></h4>
<p style="padding-left: 60px;">課程進行中的所有操作細節都會利用 <a href="https://github.com/ShareX/ShareX/releases">ShareX</a> 進行錄影, 並將 mp4 影片檔案放入 <a href="https://drive.google.com/drive/folders/1LO3o1OpR0KF4SxDScOSa9EQNa_kGsFzs?usp=sharing">cad2020 課程線上教學影片區</a>, 各學員可以直接利用電腦或手機觀看.</p>
<h4 style="padding-left: 30px;"><a href="https://meet.google.com/">Google Meet</a></h4>
<p style="padding-left: 60px;"><a href="https://meet.google.com/">https://meet.google.com/</a> 允許 @gm 用戶進行線上串流對談, 分享電腦操作畫面, 文字留言以及串流影音錄影等功能, 各分組學員必須熟悉如何操作並且在分組後每單數週, 利用 <a href="https://meet.google.com/">Google Meet</a> 進行線上會議討論與錄影存證.</p>
<h4 style="padding-left: 30px;"><a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a></h4>
<p style="padding-left: 60px;"><a href="https://obsproject.com/">OBS</a> 支援多元的電腦影音來源組合功能, 配合 <a href="https://www.youtube.com/">Youtube</a> 的線上串流直播與錄影功能, 可以讓不參與會議者以文字留言板進行互動或在線上觀看直播. <span>各分組學員必須熟悉如何操作並且在分組後每雙數週, 利用 <a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a> 進行線上會議討論與錄影存證.</span></p>
<h4 style="padding-left: 30px;"><a href="https://www.debugmode.com/wink/download.htm">Wink</a></h4>
<p style="padding-left: 60px;"><a href="https://www.debugmode.com/wink/download.htm">Wink</a> 是一套用來製作電腦操作流程說明用的工具, 之前 2.0 版本的輸出檔案為 Flash swf 檔案格式, 但因各瀏覽器將在 <a href="https://www.blog.google/products/chrome/saying-goodbye-flash-chrome/">2020 年底停止支援 Flash 播放功能</a>, 因此目前作者正在測試能夠透過 <a href="https://ffmpeg.org/">FFMPEG</a> 輸出 mp4 檔案的版本, 待其正式推出後將可用於課程教學中.</p><h3>W1Video</h3>
<p><a href="https://drive.google.com/file/d/18YyeilcMnHPkOq7Ek3aAVk_radWYOMXN/view?usp=sharing">1aw1cad_intro.mp4</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/ShareX/ShareX/releases">ShareX</a> 操作設定介紹</p>
<p style="padding-left: 30px;">上課操作影片擷取方式說明</p>
<p style="padding-left: 30px;">說明每位學員都必須建立 cad2020 課程倉儲與網站</p>
<p style="padding-left: 30px;">第一版的可攜環境只有 Python 3.8 尚未安裝模組</p>
<p style="padding-left: 30px;">利用 pip list 檢查所安裝的模組</p>
<p><a href="https://drive.google.com/file/d/1MyIuCqMR6fyiS6yxd_22QDfqvznJ92D2/view?usp=sharing">2aw1cad_portablegit.mp4</a></p>
<p style="padding-left: 30px;">說明仍使用 <a href="https://git-scm.com/download/win">Portablegit</a> 進行 git 操作</p>
<p style="padding-left: 30px;">說明如何利用 git config 設定身分與代理主機</p>
<p><a href="https://drive.google.com/file/d/1pxsixh6OcC6CynQaYGzrD0rlzCxnzF4J/view?usp=sharing">3aw1cad_grouping.mp4</a></p>
<p style="padding-left: 30px;">說明如何在 <a href="https://github.com/">github</a> 建立 cad2020 倉儲</p>
<p style="padding-left: 30px;">說明如何在 cad2020 倉儲中以 <a href="https://github.com/mdecourse/cmsimde">cmsimde</a> 建立動態與靜態網站</p>
<p style="padding-left: 30px;">利用<a href="http://mde.tw/cp2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html">線上亂數分組程式</a>完成 2a 分組</p>
<p><a href="https://drive.google.com/file/d/1pet-VL-9Zy-YEBDCQu1l7T9DVaLtOOAs/view?usp=sharing">4bw1cad_cmsimde_intro.mp4</a></p>
<p style="padding-left: 30px;"><span>說明如何在</span><span><span> </span></span><a href="https://github.com/">github</a><span><span> </span>建立 cad2020 倉儲</span></p>
<p style="padding-left: 30px;"><span>說明 <a href="https://github.com/mdecourse/cmsimde">cmsimde</a><span><span> 所需的模組為 flask flask_cors lxml bs4 markdown pelican leo</span></span></span></p>
<p style="padding-left: 30px;"><span><span><span>說明如何在 <a href="https://github.com/mdecourse/cmsimde">cmsimde</a><span><span> 動態系統中編輯網頁, 如何轉為靜態網頁</span></span></span></span></span></p>
<p style="padding-left: 30px;"><span><span><span><span><span>說明 git config 有無 --global 的差別</span></span></span></span></span></p>
<p style="padding-left: 30px;"><span><span><span><span><span>說明零組件完成後可以透過 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 進行模擬</span></span></span></span></span></p><h3>W2Video</h3>
<p><a href="https://drive.google.com/file/d/1_J3VU7bU_uwKO3RWk5Be_GTqKTvzOGfe/view?usp=sharing">5bw2cad_cmsime_upstream.mp4</a></p>
<p style="padding-left: 30px;">說明如何在 <a href="https://github.com/">Github</a> 建立空倉儲後, 利用 <a href="https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes">git remote add</a> 與 <a href="https://git-scm.com/docs/git-push">git push -u</a> 將近端倉儲與遠端倉儲進行綁定</p>
<p style="padding-left: 30px;">說明如何利用 <a href="https://git-scm.com/docs/git-init">git init</a> 啟動空倉儲</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-add">git add</a> 用法</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-log">git log</a> 用法</p>
<p style="padding-left: 30px;">說明 <a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/echo">echo</a> 回應指令用法</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules">git submodule add</a> 用法</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes">git remote add</a> 可以透過 <a href="https://docs.github.com/en/free-pro-team@latest/github/using-git/which-remote-url-should-i-use">https 或 ssh</a> 協定與遠端伺服器進行網路資料交換</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-status">git status</a> 用法</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-commit">git commit</a> 用法</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-push">git push</a> 用法</p>
<p style="padding-left: 30px;">說明將靜態網頁資料送往 <a href="https://pages.github.com/">Github Pages</a> 後必須配合倉儲中分支設定, 才會進入靜態網頁轉檔</p>
<p style="padding-left: 30px;"></p><h3>W4Video</h3>
<p><a href="https://drive.google.com/file/d/16WtRHPa2gkHrxMasHXvRDhiRPVSm5KiE/view?usp=sharing">6aw4_nx_and_mde.mp4</a></p>
<p style="padding-left: 30px;">回顧電腦的網路設定</p>
<p style="padding-left: 30px;">說明如何下載 NX12</p>
<p style="padding-left: 30px;">要求每一組要至少使用兩種不同的 MCAD 系統繪製 HW1 的所有零件</p>
<p style="padding-left: 30px;">說明利用參數繪圖軟體完成零組件後, 希望可以透過將零件倉儲透過程式進行改變</p>
<p style="padding-left: 30px;">本週起每週上課之前要完成各組學員的自評與互評</p>
<p style="padding-left: 30px;">說明將利用 <a href="https://www.debugmode.com/wink/download.htm">Wink3</a> 製作電腦操作 mp4 影片</p>
<p style="padding-left: 30px;">說明本課程的高端機械電腦輔助設計套件將採用 2017 年的 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_help/#uid:index">NX12</a></p>
<p style="padding-left: 30px;">要求各學員自行觀看與 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_help/#uid:index">NX12</a> 相關的影片</p>
<p style="padding-left: 30px;">說明 <a href="https://en.wikipedia.org/wiki/Topology_optimization#:~:text=Topology%20optimization%20(TO)%20is%20a,the%20performance%20of%20the%20system.">Topology Optimization Design</a> 流程需要透過程式進行數學最佳化演算</p>
<p style="padding-left: 30px;">提及 <a href="http://mde.tw/cad2020/downloads/The%20A-Design%20Invention%20Machine.pdf">The A-Design Invention Machine.pdf</a> 的設計理論, 將使得未來產品的開發更依賴電腦執行最佳化自動設計</p>
<p><a href="https://drive.google.com/file/d/1PbqzjOCl9IP37gX_HTyd_Z8-vt8ADWiB/view?usp=sharing">7aw4_nx_mechanical_design.mp4</a></p>
<p style="padding-left: 30px;">說明在電腦輔助設計室可以直接透過隨身系統的 start_nx12.bat 設定啟動 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_help/#uid:index">NX12</a></p>
<p style="padding-left: 30px;">說明在系上網路可以透過 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> 下載可攜環境的第一與第二版</p>
<p style="padding-left: 30px;">所謂可攜環境的 -1 版使用 Python 3.6.8 與 V-rep 3.6.1 版主要目的是配合 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_help/#uid:index">NX12</a> 的 NXOpen Python 二次開發, 並配合未來可能需要在舊硬體上的 Ubuntu 20.04 上執行 V-rep 3.6.1</p>
<p style="padding-left: 30px;">說明 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_help/#uid:index">NX12</a> 主要功能介紹</p>
<p style="padding-left: 30px;">說明電腦輔助設計流程必須在零組件的繪圖之外, 透過電腦運算, 分散式版次有效管理或網際系統的整合對產品設計加值</p>
<p style="padding-left: 30px;">說明在不同 MCAD 套件進行零組件設計時, 必須要關注該以哪種格式轉檔, 且是否能夠完整轉檔</p>
<p style="padding-left: 30px;">說明 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_help/#uid:index">NX12</a><span> 同時提供參數設計與直接建模等兩種主要方式</span></p>
<p style="padding-left: 30px;"><span>說明何謂 <a href="https://en.wikipedia.org/wiki/Digital_mockup">digital mockup</a></span></p>
<p style="padding-left: 30px;"><span>要求各組員針對 <a href="http://mde.tw/cad2020/downloads/NX_for_Mechanical_Design.pdf">NX_for_Mechanical_Design.pdf</a> 整理出重點與心得</span></p>
<p><a href="https://drive.google.com/file/d/190eNYhslXIb1MBF5w21nj29Fku8APRui/view?usp=sharing">8aw4_wink_intro.mp4</a></p>
<p style="padding-left: 30px;">介紹 <a href="https://www.debugmode.com/wink/download.htm">Wink3</a><span><span> 基本用法</span></span></p>
<p style="padding-left: 30px;"><a href="https://www.debugmode.com/wink/download.htm">Wink3</a> 與 Zoomit 放大顯示工具合用時必須注意要在 Ctrl + 1 按下後直接取畫面, 若在滑鼠左鍵點擊後再取畫面, 可能會造成 <a href="https://www.debugmode.com/wink/download.htm">Wink3</a><span> 操作異常</span></p>
<h3>W5Video</h3>
<p><a href="https://drive.google.com/file/d/1F3sC-NkCaeXxLfrw9nEkVlkiWOH7GHOm/view?usp=sharing">9aw5_github_account_and_nx_license.mp4</a></p>
<p style="padding-left: 30px;">說明如何利用程式方法修改 <a href="http://mde.tw/cad2020/content/W3.html">W3 頁面</a>中的學員連結資料</p>
<p style="padding-left: 30px;">電腦輔助設計流程必須思考如何以程式因應設計流程中的改變</p>
<p style="padding-left: 30px;">Python 程式提供 <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">bs4</a> 模組, 可以用來解讀網頁內容, 從中解讀出相關資料</p>
<p style="padding-left: 30px;">後續將利用零件參數的排列組合變化產生零件, 並設法利用 API 程式取出與零件有關的資料</p>
<p style="padding-left: 30px;">繪製零件之前必須要在操作影片拍攝之前, 列出所使用的套件與 kernel 版本</p>
<p style="padding-left: 30px;">展示 <a href="https://github.com/solvespace/solvespace">Solvespace</a> 程式的編譯過程</p>
<p><a href="https://drive.google.com/file/d/1Q9MZaM3SFb6fFzrYd2mXoWOtRXhsL7-a/view?usp=sharing">10aw5_python_correct_2a_w3_grouping_data.mp4</a></p>
<p style="padding-left: 30px;"><span>說明如何利用程式方法修改 </span><a href="http://mde.tw/cad2020/content/W3.html">W3 頁面</a><span>中的學員連結資料</span></p>
<p><a href="https://drive.google.com/file/d/1mmP5yMDNSqo5XPd8GVlZ9DtmDLldpBzC/view?usp=sharing">11aw5_nxopen_journal_bring_up_HW2.mp4</a></p>
<p style="padding-left: 30px;">透過 Menu -&gt; Preferences -&gt; User Interface -&gt; Tools -&gt; Journal</p>
<p style="padding-left: 30px;">NX 可以透過 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_api/#uid:index">NXOpen</a> 進行 API 程式開發</p>
<p style="padding-left: 30px;">Solidworks 可以透過 <a href="https://pypi.org/project/pySW/">PySW</a> 執行 API 程式</p>
<p><a href="https://drive.google.com/file/d/1rF4ptsvA_dpLw1_9cjTg7OjcqGIjCmpd/view?usp=sharing">12bw5_kaggle_and_nx_onlin_offline_python.mp4</a></p>
<p style="padding-left: 30px;"><span>說明如何利用程式方法修改 </span><a href="http://mde.tw/cad2020/content/W3.html">W3 頁面</a><span>中的學員連結資料</span></p>
<p style="padding-left: 30px;"><span>說明如何透過 Menu -&gt; Preferences -&gt; User Interface -&gt; Tools -&gt; Journal 使用 Python 錄製</span></p>
<p style="padding-left: 30px;"><a href="http://nxjournaling.com/">http://nxjournaling.com/</a> 參考 (<a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/NXOpen.UF.Disp.html">NXOpen Python</a>)</p>
<p style="padding-left: 30px;">展示利用 run_journal.exe 執行 <a href="https://raw.githubusercontent.com/mdecourse/cad2020/master/downloads/nx12/cube_offline.py">cube_offline.py</a></p>
<p style="padding-left: 30px;">NX 可以透過 Menu -&gt; Help -&gt; About NX -&gt; System Information 看到版本為 12.0.2.9 Parasolid 為 30.1 版</p>
<p><a href="https://drive.google.com/file/d/1TvkSOMRAUaGE4xL2b_5xOb4xbm8O_pi0/view?usp=sharing">13bw5_fix_wrong_cmsimde_submodule.mp4</a></p>
<p style="padding-left: 30px;">說明如何修正 cmsimde 子模組無法連結的問題, 將有問題的子模組刪除後, 重新建立 cmsimde 子模組</p>
<p style="padding-left: 30px;">參考: <a href="https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule">https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule</a> </p>
<p>To remove a submodule you need to:</p>
<ol>
<li>Delete the relevant section from the .gitmodules file.</li>
<li>Stage the .gitmodules changes:<br/>    git add .gitmodules</li>
<li>Delete the relevant section from .git/config.</li>
<li>Remove the submodule files from the working tree and index:<br/>    git rm --cached path_to_submodule (no trailing slash).</li>
<li>Remove the submodule's .git directory:<br/>    rm -rf .git/modules/path_to_submodule</li>
<li>Commit the changes:<br/>    git commit -m "Removed submodule &lt;name&gt;"</li>
<li>Delete the now untracked submodule files:<br/>    rm -rf path_to_submodule</li>
</ol>
<h3>W6Video</h3>
<p><a href="https://drive.google.com/file/d/1mFs3v3pP0CYsyxlgRKaGqtisfAZR2605/view?usp=sharing">14aw6_solidworks_31_python_api_demo.mp4</a></p>
<p style="padding-left: 30px;">說明如何利用 Python 3.8 透過 API 變更<a href="http://mde.tw/cad2020/content/HW1.html">練習1</a>中的第 31 個零件的特定尺寸.</p>
<p><a href="https://drive.google.com/file/d/1JbWuaoP321VLS3wo7jcCKu_4MQJRreWQ/view?usp=sharing">15aw6_SWapi_generated_html.mp4</a></p>
<p style="padding-left: 30px;">利用 Python 以 API 迴圈建立多個零件後, 同時產品展示零件下載, 零件等角視圖與體積的表列 html 檔案.</p>
<p><a href="https://drive.google.com/file/d/1VtLP9lj73VNv2WAVBxhmOtmlhFj-4rI-/view?usp=sharing">16aw6_tcc_setup.mp4</a></p>
<p style="padding-left: 30px;">說明如何在可攜程式環境中加入 Tiny C ANSI compiler 執行環境</p>
<p style="padding-left: 30px;"><a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> </p>
<h3>W7Video</h3>
<p><a href="https://drive.google.com/file/d/1p_CsGg5wYFDMNF0RCzoifO7I-_rQ08dL/view?usp=sharing">17aw7_engineer_engineering.mp4</a></p>
<p style="padding-left: 30px;">說明 engineer 的兩個基本特性: 1) 具創造性, 2) 能夠聰明, 精巧, 準確地進行工作.</p>
<p style="padding-left: 30px;">工程產品開發流程包含: requirements development, conceptual design, detailed design 與 production 等四個階段, 而機械設計工程師則主要從事 detailed design 相關工作.</p>
<p><a href="https://drive.google.com/file/d/19QVaCumTfbYHrWR2zQQFxCiyyKfu3thv/view?usp=sharing">19aw7_how_to_self_compile_tinyC.mp4</a></p>
<p style="padding-left: 30px;">說明只要從 <a href="http://download.savannah.gnu.org/releases/tinycc/">http://download.savannah.gnu.org/releases/tinycc/</a> 下載 tcc 原始碼, 並且在 win32 目錄下從 <a href="http://mde.tw/cad2020/downloads/tcc/win32/tools/tiny_impdef.c">http://mde.tw/cad2020/downloads/tcc/win32/tools/tiny_impdef.c</a> 與 <a href="http://mde.tw/cad2020/downloads/tcc/win32/tools/tiny_libmaker.c">http://mde.tw/cad2020/downloads/tcc/win32/tools/tiny_libmaker.c</a> 取下兩個 .c 並且放到 win32/tools 目錄下. (或從 <a href="https://github.com/LuaDist/tcc/tree/master/win32/tools">https://github.com/LuaDist/tcc/tree/master/win32/tools</a> 下載), 並且手動執行</p>
<p style="padding-left: 30px;">tiny_impdef libtcc.dll -o libtcc.def</p>
<p style="padding-left: 30px;">後將 libtcc.def 放入 libtcc 目錄中, 就可以順利以舊版的 Tiny C 編譯出新版的 Tiny C.</p><h2>W1</h2>
<p>Notice: </p>
<p style="padding-left: 30px;">四設二乙將在 <span>2020-09-25 (週五) </span></p>
<p style="padding-left: 30px;"><span>下午4:20 – 下午7:10 </span>補 10/2 中秋節連假課程時段</p>
<p>W1 學員登入學校配發的 @gm 郵件帳號後,<span> </span><a href="https://forms.gle/3hfnf6D2QCemdDQn9">填寫基本資料</a></p>
<p>W1 告知將利用<span> </span><a href="https://gitter.im/mdecourse/cad2020">Gitter</a><span> </span>進行課程議題討論 (其餘各種問題可以至<span> </span><a href="https://forum.eng.nfu.edu.tw/">discourse</a><span> </span>討論)</p>
<p>W1 回想一下與電腦輔助設計室有關的電腦軟硬體架構配置, 以及如何在純 IPv6 環境中設定網路.</p>
<p style="padding-left: 30px;">可以參考大一的課程內容: <a href="http://mde.tw/cp2020/content/W2.html">http://mde.tw/cp2020/content/W2.html</a></p>
<p>W1 準備在個人的電腦, 筆電或電腦輔助設計室中的電腦 (每班按照學號使用固定電腦, 若電腦故障則必須在一週內負責告知助教, 並將電腦第三磁區複製回原始狀態, 若電腦硬體故障則需回報給助教設法請廠商進行維護, 期間則至使用最後一列備用電腦) 製作合用的可攜程式系統.</p>
<h4>NX 高端電腦輔助機械設計套件</h4>
<p style="padding-left: 30px;">登入 @gm 帳號, <a href="https://drive.google.com/file/d/1tiuq-KGeoCNA63IEkEWhGzSTFgdQUVM_/view?usp=sharing">下載 NX12 可攜版</a> (949MB)</p>
<p style="padding-left: 30px;">NX 12.0.2 官方手冊 <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12.0.2/nx_help">https://docs.plm.automation.siemens.com/tdoc/nx/12.0.2/nx_help</a></p>
<p style="padding-left: 30px;">NX 12.0.2 系統自帶的 Python 版本為 <a href="https://www.python.org/downloads/release/python-361/">3.6.1</a>, 或許可以相容 <a href="https://www.python.org/downloads/release/python-368/">3.6.8</a></p>
<p style="padding-left: 30px;">NXOpen for Python <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12.0.2/nx_help#uid:tools_jrn_create_ht">參考1</a>, <a href="https://docs.plm.automation.siemens.com/tdoc/nx/12.0.2/nx_help#uid:xid280763">參考2</a></p>
<h4>Solidworks 中端電腦輔助機械設計套件</h4>
<p style="padding-left: 30px;"><span>登入 @gm 帳號, </span><a href="https://drive.google.com/file/d/1KPpXzumzBIvMCovZdBYh0s468uFO277k/view">下載 SolidWorks 2017 SP2 安裝光碟</a> (12GB)</p>
<p style="padding-left: 60px;"><a href="/downloads/solidworks_basics.pdf">Solidworks basics.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/SolidWorks_Tutorial08_BearingPuller_English_08_LR.pdf">SolidWorks_Tutorial08_BearingPuller_English_08_LR.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://pypi.org/project/pySW/">https://pypi.org/project/pySW/</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/thunderbirdtr/SWPyMacros">https://github.com/thunderbirdtr/SWPyMacros</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/sw2014">https://github.com/mdecourse/sw2014</a> </p>
<h4><span>AutoDesk Inventor 與 Fusion 360 中端電腦輔助機械設計套件</span></h4>
<p><span>以下連結必須在校園網路、使用學校代理主機或 <a href="https://nfucc.nfu.edu.tw/zh/download/download-network/ssl-vpn">vpn</a> 模式下才可下載</span></p>
<p style="padding-left: 30px;"><a href="https://software.nfu.edu.tw/Autodesk/autodesk.iso">AutoDesk PDSU</a><span> (Product Design Suite Ultimate edition) 包含:</span><br/><br/><span>Autodesk Inventor Professional</span><br/><span>AutoCAD Mechanical</span><br/><span>AutoCAD Electrical</span><br/><span>AutoCAD</span><br/><span>Navisworks Simulate</span><br/><span>AutoCAD Raster Design</span><br/><span>Autodesk Recap</span><br/><span>Autodesk Vault Basic</span><br/><span>Autodesk Fusion 360</span><br/><span>Navisworks Manage</span><br/><br/><a href="https://software.nfu.edu.tw/files/AUTODESK%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8.pdf">AutoDesk 安裝教學.pdf</a></p>
<p style="padding-left: 30px;">登入 @gm 帳號, <a href="https://drive.google.com/file/d/1slpY1EhMCVJcXiKqqn79swSWHWUnd9jU/view?usp=sharing">下載 2017_Book_LearnAutodeskInventor2018Basic.pdf</a></p>
<p style="padding-left: 30px;"><a href="http://jtdz-solenoids.com/stackoverflow_/questions/47443621/extracting-parameters-from-autodesk-inventor-with-python">http://jtdz-solenoids.com/stackoverflow_/questions/47443621/extracting-parameters-from-autodesk-inventor-with-python</a></p>
<h4>Onshape 雲端電腦輔助機械設計系統</h4>
<p style="padding-left: 30px;">至 <a href="https://onshape.com">https://onshape.com</a> 以 @gm 電子郵箱註冊教育帳號</p>
<p style="padding-left: 30px;"><a href="https://cad.onshape.com/help/Content/Primer/onshape_primer.htm">https://cad.onshape.com/help/Content/Primer/onshape_primer.htm</a></p>
<h4>Solvespace 開源參數式電腦輔助設計套件</h4>
<p style="padding-left: 30px;">至 <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a> 下載原始碼, 自行利用 <a href="https://www.msys2.org/">https://www.msys2.org/</a> 編譯使用</p>
<p style="padding-left: 30px;"><a href="http://solvespace.com/tutorial.pl">http://solvespace.com/tutorial.pl</a></p>
<p style="padding-left: 30px;"><a href="http://www.farwire.net/SolveSpace-LearningGuide.htm">http://www.farwire.net/SolveSpace-LearningGuide.htm</a></p>
<h4>問題:</h4>
<p style="padding-left: 30px;">1. 從 NX 至開源的 Solvespace, 每一套各有不同的用法與特色, 為什麼需要從高端套件到開源套件下載這麼多資料?</p>
<p style="padding-left: 30px;">2. 電腦輔助設計實習應該要練習零組件繪圖還是利用電腦執行機電產品設計開發? 還是要深入了解各電腦輔助設計套件的共同原理, 設法從中創造價值?</p>
<p style="padding-left: 30px;">3. 各分組能夠利用 NX, Solidworks, Inventor, Onshape 與 Solvespace 建立下列的所有零件檔案, 並以表格列出各零件的體積嗎?</p>
<p style="padding-left: 60px;"><a href="/downloads/Solidworks 零件繪圖練習1.pdf">Solidworks 零件繪圖練習1.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Solidworks 零件繪圖練習2.pdf">Solidworks 零件繪圖練習2.pdf</a></p>
<p style="padding-left: 30px;">4. 在產品開發過程, 初步的零組件設計完成後, 需不需要進行工程分析? 假如已知 <a href="https://github.com/Range-Software/range3">https://github.com/Range-Software/range3</a> 與 <a href="https://github.com/NGSolve/ngsolve">https://github.com/NGSolve/ngsolve</a> 等兩套開源 CAE, 我們可以設法分別編譯使用, 並嘗試將分析結果與 Ansys 及 Comsol 進行比較?</p><h3>HW1</h3>
<p>請各分組分別利用 NX, Solidworks, Inventor, Onshape 與 Solvespace 建立下列的所有零件檔案, 並以表格列出各零件的體積.</p>
<p style="padding-left: 30px;"><a href="/downloads/Solidworks 零件繪圖練習1.pdf">Solidworks 零件繪圖練習1.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Solidworks 零件繪圖練習2.pdf">Solidworks 零件繪圖練習2.pdf</a></p>
<h3>HW1_SW</h3>
<p>1. 先確定圖檔與下載連結在動態網頁所需的 html 格式</p>
<p><img alt="" class="add_border" src="/downloads/sw_macro/html/31_1.jpg" width="300"/></p>
<p>上述圖檔的 html 為:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;img src="/downloads/sw_macro/html/31_1.jpg" alt="" width="300" &gt;</pre>
<p>而下載零件的 anchor 為:</p>
<p><a href="/downloads/sw_macro/block.SLDPRT">block.SLDPRT</a></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;a href="/downloads/sw_macro/block.SLDPRT"&gt;block.SLDPRT&lt;/a&gt;</pre>
<p>2. 因此 Python API 程式在依據使用者尺寸輸入與重複迴圈繪圖次數後, 將可依據上述 img 與 anchor 格式, 產生以下所需的動態網頁內容. 更棒的結果是零件繪圖程式結束後, 會自動定位 config/content.htm 中的 HW1_API 頁面, 自動將零件下載, 等角視圖檔, 以及各零件的體積資料等插入既定的位置.</p>
<p>3. 上述所完成的 html 表格如下:</p>
<p></p>
<p>以下零件採 SolidWorks 2017 SP 2.0 教育版繪製:<br/><br/></p>
<table border="1" cellpadding="5">
<tbody>
<tr>
<th>Number</th>
<th>Part</th>
<th>Jpg</th>
<th>Width</th>
<th>Volume</th>
</tr>
<tr>
<td>1</td>
<td><a href="/downloads/sw_macro/html/31_1.SLDPRT">31_1.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_1.jpg" width="300"/></td>
<td>2.0 mm</td>
<td>49289.528 mm*3</td>
</tr>
<tr>
<td>2</td>
<td><a href="/downloads/sw_macro/html/31_2.SLDPRT">31_2.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_2.jpg" width="300"/></td>
<td>4.0 mm</td>
<td>50222.861 mm*3</td>
</tr>
<tr>
<td>3</td>
<td><a href="/downloads/sw_macro/html/31_3.SLDPRT">31_3.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_3.jpg" width="300"/></td>
<td>6.0 mm</td>
<td>51156.194 mm*3</td>
</tr>
<tr>
<td>4</td>
<td><a href="/downloads/sw_macro/html/31_4.SLDPRT">31_4.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_4.jpg" width="300"/></td>
<td>8.0 mm</td>
<td>52089.528 mm*3</td>
</tr>
<tr>
<td>5</td>
<td><a href="/downloads/sw_macro/html/31_5.SLDPRT">31_5.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_5.jpg" width="300"/></td>
<td>10.0 mm</td>
<td>53022.861 mm*3</td>
</tr>
<tr>
<td>6</td>
<td><a href="/downloads/sw_macro/html/31_6.SLDPRT">31_6.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_6.jpg" width="300"/></td>
<td>12.0 mm</td>
<td>53956.194 mm*3</td>
</tr>
<tr>
<td>7</td>
<td><a href="/downloads/sw_macro/html/31_7.SLDPRT">31_7.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_7.jpg" width="300"/></td>
<td>14.0 mm</td>
<td>54889.528 mm*3</td>
</tr>
<tr>
<td>8</td>
<td><a href="/downloads/sw_macro/html/31_8.SLDPRT">31_8.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_8.jpg" width="300"/></td>
<td>16.0 mm</td>
<td>55822.861 mm*3</td>
</tr>
<tr>
<td>9</td>
<td><a href="/downloads/sw_macro/html/31_9.SLDPRT">31_9.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_9.jpg" width="300"/></td>
<td>18.0 mm</td>
<td>56756.194 mm*3</td>
</tr>
<tr>
<td>10</td>
<td><a href="/downloads/sw_macro/html/31_10.SLDPRT">31_10.SLDPRT</a></td>
<td><img src="/downloads/sw_macro/html/31_10.jpg" width="300"/></td>
<td>20.0 mm</td>
<td>57689.528 mm*3</td>
</tr>
</tbody>
</table>
<p>產生零件與上列 html 的程式碼:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import pythoncom
import win32com.client
import win32api
import os

os.system("taskkill /IM sldworks.exe /F")
os.system("taskkill /IM sldworks_fs.exe /F")

'''
About DispatchEx and Dispatch Methods:
https://stackoverflow.com/questions/18648933/using-pywin32-what-is-the-difference-between-dispatch-and-dispatchex
Source code:
http://pywin32.hg.sourceforge.net/hgweb/pywin32/pywin32/file/0db1b26904d5/com/win32com/src/PyIDispatch.cpp
Doc:
https://docs.microsoft.com/en-us/dotnet/standard/native-interop/com-callable-wrapper

IDispatch: Provides a mechanism for late binding to type.
IDispatchEx:
    Interface supplied by the runtime if the class implements IExpando. The IDispatchEx interface is an extension of the IDispatch interface that, unlike IDispatch, enables enumeration, addition, deletion, and case-sensitive calling of members.
'''
app = win32com.client.DispatchEx("SldWorks.Application")
#app=win32com.client.Dispatch("SldWorks.Application")

# define var to convert variables
def var(type, value):
    # type needs to be string
    # use builtin getattr() to return pythoncom.type
    pytype = getattr(pythoncom, type)
    return win32com.client.VARIANT(pytype, value)

# for two-type variable convert
# is there any three-type variant?
def var2(type1, type2, value):
    pytype1 = getattr(pythoncom, type1)
    pytype2 = getattr(pythoncom, type2)
    return win32com.client.VARIANT(pytype1|pytype2, value)
    
def part(app, fileName, sketchName, dimName, newDim, newFileName):
    arg1 = var("VT_I4", 1)
    # GetMassProperties( ((3, 1), (16387, 3)))
    #arg1 = win32com.client.VARIANT(pythoncom.VT_I4, 1)
    arg2 = var("VT_I4", -1)

    # 0. need the most important obj app
    #app=win32com.client.Dispatch("SldWorks.Application")
    # use relative directory to open part
    # 1. open part file, need the path of the part file (need the file name)
    #doc=app.OpenDoc(".\\block2.SLDPRT", 1)
    doc=app.OpenDoc(os.path.join(os.getcwd(), fileName), 1)
    # save part as binary stl
    # can we save part as ASCII stl as well?
    #doc.SaveAs2(".\\block2.stl", 0, True, False)
    # the parameter VARIANT list for SelectByID2
    # can we automate the VARIANT conversion?
    # 2. use the sketch to select the SKETCH (need the sketch name)
    #SelectByID2((8, 1), (8, 1), (5, 1), (5, 1), (5, 1), (11, 1), (3, 1), (9, 1), (3, 1))
    #arg3 = var("VT_BSTR", "Sketch1")
    arg3 = var("VT_BSTR", sketchName)
    arg4 = var("VT_BSTR", "SKETCH")
    arg5 = var("VT_R8", 0)
    arg6 = var("VT_R8", 0)
    arg7 = var("VT_R8", 0)
    arg8 = var("VT_BOOL", False)
    arg9 = var("VT_I4", 0)
    arg10 = var("VT_DISPATCH", None)
    arg11 = var("VT_I4", 0)
    # select Sketch1 first
    status = doc.Extension.SelectByID2(arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
    # select DIMENSION to to modify
    # 3. use the dimension name @ sketch name @ part file name
    # to select the DIMENSION to modify
    #arg12 = var("VT_BSTR", "Width@Sketch1@block2.SLDPRT")
    arg12 = var("VT_BSTR", dimName+"@"+sketchName+"@"+fileName)
    arg13 = var("VT_BSTR", "DIMENSION")
    status = doc.Extension.SelectByID2(arg12, arg13, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
    #Dim swDimension As SldWorks.Dimension
    # 4. to bring out the parameter to modify, need the dimension name and 
    # sketch name
    #swDimension = doc.Parameter("Width@Sketch1")
    swDimension = doc.Parameter(dimName+"@"+sketchName)
    # the dimension unit is in meter
    # 5. need the new value of the parameter
    #swDimension.SystemValue = 0.50
    swDimension.SystemValue = newDim
    # 6. do the final house keeping process, clear selection and rebuild the part
    sel = doc.ClearSelection2 
    sel = True
    status = doc.EditRebuild()
    arg31 = var("VT_I4", 1)
    arg32 = var2("VT_I4", "VT_BYREF", 3)
    # 7. get the volume of the new part
    volumn = doc.Extension.GetMassProperties(arg31, arg32)
    #print(volumn[3]*1E9, "mm*3")
    # 8. save the new part (need the new part file name)
    #doc.SaveAs2(".\\block3.SLDPRT", 0, True, False)
    doc.SaveAs2(os.path.join(os.getcwd(), "html/" + newFileName + ".SLDPRT"), 0, True, False)
    # save jpg of part
    doc.EditRebuild()
    arg33 = var("VT_BSTR", "Isometric")
    doc.ShowNamedView(arg33)
    doc.ViewZoomtofit2()
    doc.SaveAs3(os.path.join(os.getcwd(), "html/" + newFileName + ".jpg"), 0, 0)
    # mm*3
    return str(round(volumn[3]*1E9, 3)) + " mm*3"
html = "以下零件採 SolidWorks 2017 SP 2.0 教育版繪製:&lt;br /&gt;&lt;br /&gt;&lt;table border='1' cellpadding='5'&gt;&lt;tr&gt;&lt;th&gt;Number&lt;/th&gt;&lt;th&gt;Part&lt;/th&gt;&lt;th&gt;Jpg&lt;/th&gt;&lt;th&gt;Width&lt;/th&gt;&lt;th&gt;Volume&lt;/th&gt;&lt;/tr&gt;"
index = 0
for i in range(1, 11):
    dim = i*0.002
    blockVolume = part(app, "31_step.SLDPRT", "Sketch1", "Width", dim, "31_" + str(i))
    print("31_" + str(i) + ".SLDPRT, dim= " + str(round(dim, 3)) +", volume= " + blockVolume)
    index += 1
    newFileName = "31_" + str(i)
    html += '''&lt;tr&gt;
    &lt;td&gt;''' + str(index) +'''&lt;/td&gt;
    &lt;td&gt;&lt;a href="/downloads/sw_macro/html/''' + newFileName + '''.SLDPRT"&gt;''' + newFileName + '''.SLDPRT&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;img width="300" src="/downloads/sw_macro/html/''' + newFileName + '''.jpg"&gt;&lt;/img&gt;&lt;/td&gt;
    &lt;td&gt;''' + str(round(dim*1000, 2)) + ''' mm &lt;/td&gt;
    &lt;td&gt;''' + blockVolume + '''&lt;/td&gt;
    &lt;/tr&gt;
    '''
html += "&lt;/table&gt;"
# save part.html
with open("./html/part.html", "w", encoding="utf-8") as f:
     f.write(html)
     
'''
for assembly
        swModelDocExt.SelectByID2("", "EDGE", -0.439825991092107, 7.07350481263802E-02, 0.40982045578545, true, 2, null, 0);
        swModelDocExt.SelectByID2("", "EDGE", -0.219003008311574, 0.073085842475507, 0.549481823985616, true, 4, null, 0);
        swModelDocExt.SelectByID2("Part-3@AssemModel", "COMPONENT", 0, 0, 0, true, 1, null, 0);
        swFeature = (Feature)swFeatureManager.FeatureLinearPattern2(3, 40 / 1000, 0, 0, false, true, "NULL", "NULL", false);
        assemblyModel.ClearSelection2(true);
'''
os.system("taskkill /IM sldworks.exe /F")
os.system("taskkill /IM sldworks_fs.exe /F")
# now the SolidWorks is embedding
</pre>
<h3>HW1_INV</h3>
<p>針對 HW1 使用 AutoDesk Inventor 2019 教育版繪零件圖者, 可以利用下列 Python 程式修改零件參數, 取零件影像圖並計算零件體積:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import pythoncom
import win32com.client
import win32api
import os

# Open Inventor
invApp = win32com.client.Dispatch("Inventor.Application")
#print(invApp)
invApp.Visible = True

invApp.SilentOperation = True

# Set location of assembly
partName = 'C:/tmp/Part1.ipt'

# Open the model
oDoc = invApp.Documents.Open(partName)
# use UserParameters to access the user parameters
#oUserParams = oDoc.ComponentDefinition.Parameters.UserParameters
#oNewParam = oUserParams.AddByExpression("x", "9", "mm")
# use Item() to get the model parameter named "d0"
d0 = oDoc.ComponentDefinition.Parameters.Item("d0")
# Expression can add dimension unit
#d0.Expression = "2 cm"
# Value use the default system unit: cm
d0.Value = 2
# use Update() method to get the new part volume
oDoc.Update()
# fit the active view and save the part image
invApp.ActiveView.Fit(True)
oDoc.SaveAs("C:/tmp/Part1.png", True)
print(oDoc.ComponentDefinition.MassProperties.Volume)
#invApp.Quit()</pre>
<p></p><h2>W2</h2>
<p>所有學員各自利用 @gm 電子郵箱建立<span> </span><a href="https://github.com/">Github</a>,<span> </span><a href="https://gitlab.com">Gitlab,</a><span> </span><a href="https://www.heroku.com/">Heroku</a>,<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>與<span> </span><a href="https://www.authorea.com/">Authorea</a><span> </span>帳號</p>
<p style="padding-left: 30px;">Github: 各學員在學號帳號下建立 cad2020 倉儲.</p>
<p style="padding-left: 30px;">Gitlab: 各學員將 Github 倉儲 cad2020 同步至 Gitlab 同名倉儲.</p>
<p style="padding-left: 30px;">Heroku: 用來部署 cad2020 倉儲中的動態程式或靜態網頁的雲端應用程式服務系統.</p>
<p style="padding-left: 30px;">Authorea: 用來建立各組的協同期末專案報告 pdf 檔案.</p>
<p>所有學員利用 <a href="https://pages.github.com/">Github Pages</a> 與 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 建立個人網頁, 倉儲名稱為 cad2020</p>
<p>所有學員學習如何利用 <a href="https://git-scm.com/download/win">Git</a> 與 <a href="https://github.com/">Github</a> 維護個人網頁 (以 SSH push 版本請參考<a href="http://mde.tw/cp2020/content/SSH.html">這裡</a>)</p>
<h4>NX12 二次開發</h4>
<p style="padding-left: 30px;"><a href="/downloads/nx_python_examples.pdf">nxopen_getting_started_v12.pdf</a></p>
<p style="padding-left: 30px;">由於 NX12.0.2 中的 NXOpen for Python 綁定 3.6.1 版本, 因此為了進行 NX12.0.2 的網際二次程式開發, 特別製作一個可攜的 Python 3.6.8 版本系統, 可以登入 @gm 帳號後, <a href="https://drive.google.com/file/d/1OKWszzg9zWT6OjaDNDakEHKhH4fR7238/view?usp=sharing">下載 fall2020_v-1.7z</a>. 或在系上網段直接從 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> 中下載.</p>
<p style="padding-left: 30px;">各組則由負責建立 Ubuntu 20.04 虛擬主機的組員登入 @gm 帳號後, <a href="https://drive.google.com/file/d/1ZqbkqS6XWOSGw9dDyIKcw29GlVxSdz1w/view?usp=sharing">下載 Ub2004.vdi</a>. <span>或在系上網段直接從 </span><a href="http://a.kmol.info:88">http://a.kmol.info:88</a><span> 中下載.</span></p><h2>W3</h2>
<p>統整 W1 與 W2 教材內容至各學員個人網頁</p>
<p>完成<a href="http://mde.tw/cp2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html">亂數分組</a>,  每班分成五組</p>
<h4>2a:</h4>
<p>group 1:<br/><br/> Repository: <a href="https://github.com/40523148/cad2020">40523148</a> | Site: <a href="https://40523148.github.io/cad2020">40523148</a><br/> Repository: <a href="https://github.com/s40723136/cad2020">40723136</a> | Site: <a href="https://s40723136.github.io/cad2020">40723136</a><br/> Repository: <a href="https://github.com/s40723151/cad2020">40723151</a> | Site: <a href="https://s40723151.github.io/cad2020">40723151</a><br/> Repository: <a href="https://github.com/40732331/cad2020">40732331</a> | Site: <a href="https://40732331.github.io/cad2020">40732331</a><br/> Repository: <a href="https://github.com/40823114/cad2020">40823114</a> | Site: <a href="https://40823114.github.io/cad2020">40823114</a><br/> Repository: <a href="https://github.com/40823116/cad2020">40823116</a> | Site: <a href="https://40823116.github.io/cad2020">40823116</a><br/> Repository: <a href="https://github.com/40823119/cad2020">40823119</a> | Site: <a href="https://40823119.github.io/cad2020">40823119</a><br/> Repository: <a href="https://github.com/40823121/cad2020">40823121</a> | Site: <a href="https://40823121.github.io/cad2020">40823121</a><br/> Repository: <a href="https://github.com/40823124/cad2020">40823124</a> | Site: <a href="https://40823124.github.io/cad2020">40823124</a><br/> Repository: <a href="https://github.com/40823128/cad2020">40823128</a> | Site: <a href="https://40823128.github.io/cad2020">40823128</a><br/> Repository: <a href="https://github.com/40823129/cad2020">40823129</a> | Site: <a href="https://40823129.github.io/cad2020">40823129</a><br/> Repository: <a href="https://github.com/40823145/cad2020">40823145</a> | Site: <a href="https://40823145.github.io/cad2020">40823145</a><br/> Repository: <a href="https://github.com/40823150/cad2020">40823150</a> | Site: <a href="https://40823150.github.io/cad2020">40823150</a><br/> Repository: <a href="https://github.com/40823154/cad2020">40823154</a> | Site: <a href="https://40823154.github.io/cad2020">40823154</a><br/> <br/><br/> ============================== <br/><br/> group 2:<br/><br/> Repository: <a href="https://github.com/40723153/cad2020">40723153</a> | Site: <a href="https://40723153.github.io/cad2020">40723153</a><br/> Repository: <a href="https://github.com/s40723225/cad2020">40723225</a> | Site: <a href="https://s40723225.github.io/cad2020">40723225</a><br/> Repository: <a href="https://github.com/40823109/cad2020">40823109</a> | Site: <a href="https://40823109.github.io/cad2020">40823109</a><br/> Repository: <a href="https://github.com/40823110/cad2020">40823110</a> | Site: <a href="https://40823110.github.io/cad2020">40823110</a><br/> Repository: <a href="https://github.com/40823111/cad2020">40823111</a> | Site: <a href="https://40823111.github.io/cad2020">40823111</a><br/> Repository: <a href="https://github.com/40823117/cad2020">40823117</a> | Site: <a href="https://40823117.github.io/cad2020">40823117</a><br/> Repository: <a href="https://github.com/40823118/cad2020">40823118</a> | Site: <a href="https://40823118.github.io/cad2020">40823118</a><br/> Repository: <a href="https://github.com/40823123/cad2020">40823123</a> | Site: <a href="https://40823123.github.io/cad2020">40823123</a><br/> Repository: <a href="https://github.com/40823126/cad2020">40823126</a> | Site: <a href="https://40823126.github.io/cad2020">40823126</a><br/> Repository: <a href="https://github.com/40823139/cad2020">40823139</a> | Site: <a href="https://40823139.github.io/cad2020">40823139</a><br/> Repository: <a href="https://github.com/40823144/cad2020">40823144</a> | Site: <a href="https://40823144.github.io/cad2020">40823144</a><br/> Repository: <a href="https://github.com/40823153/cad2020">40823153</a> | Site: <a href="https://40823153.github.io/cad2020">40823153</a><br/> Repository: <a href="https://github.com/40871106/cad2020">40871106</a> | Site: <a href="https://40871106.github.io/cad2020">40871106</a><br/> <br/><br/> ============================== <br/><br/> group 3:<br/><br/> Repository: <a href="https://github.com/40823101/cad2020">40823101</a> | Site: <a href="https://40823101.github.io/cad2020">40823101</a><br/> Repository: <a href="https://github.com/40823103/cad2020">40823103</a> | Site: <a href="https://40823103.github.io/cad2020">40823103</a><br/> Repository: <a href="https://github.com/40823104/cad2020">40823104</a> | Site: <a href="https://40823104.github.io/cad2020">40823104</a><br/> Repository: <a href="https://github.com/40823107/cad2020">40823107</a> | Site: <a href="https://40823107.github.io/cad2020">40823107</a><br/> Repository: <a href="https://github.com/40823122/cad2020">40823122</a> | Site: <a href="https://40823122.github.io/cad2020">40823122</a><br/> Repository: <a href="https://github.com/40823125/cad2020">40823125</a> | Site: <a href="https://40823125.github.io/cad2020">40823125</a><br/> Repository: <a href="https://github.com/40823127/cad2020">40823127</a> | Site: <a href="https://40823127.github.io/cad2020">40823127</a><br/> Repository: <a href="https://github.com/40823131/cad2020">40823131</a> | Site: <a href="https://40823131.github.io/cad2020">40823131</a><br/> Repository: <a href="https://github.com/40823132/cad2020">40823132</a> | Site: <a href="https://40823132.github.io/cad2020">40823132</a><br/> Repository: <a href="https://github.com/40823136/cad2020">40823136</a> | Site: <a href="https://40823136.github.io/cad2020">40823136</a><br/> Repository: <a href="https://github.com/40823149/cad2020">40823149</a> | Site: <a href="https://40823149.github.io/cad2020">40823149</a><br/> Repository: <a href="https://github.com/40823152/cad2020">40823152</a> | Site: <a href="https://40823152.github.io/cad2020">40823152</a><br/> <br/><br/> ============================== <br/><br/> group 4:<br/><br/> Repository: <a href="https://github.com/40823102/cad2020">40823102</a> | Site: <a href="https://40823102.github.io/cad2020">40823102</a><br/> Repository: <a href="https://github.com/40823106/cad2020">40823106</a> | Site: <a href="https://40823106.github.io/cad2020">40823106</a><br/> Repository: <a href="https://github.com/40823108/cad2020">40823108</a> | Site: <a href="https://40823108.github.io/cad2020">40823108</a><br/> Repository: <a href="https://github.com/a40823112/cad2020">40823112</a> | Site: <a href="https://a40823112.github.io/cad2020">40823112</a><br/> Repository: <a href="https://github.com/40823115/cad2020">40823115</a> | Site: <a href="https://40823115.github.io/cad2020">40823115</a><br/> Repository: <a href="https://github.com/40823120/cad2020">40823120</a> | Site: <a href="https://40823120.github.io/cad2020">40823120</a><br/> Repository: <a href="https://github.com/40823135/cad2020">40823135</a> | Site: <a href="https://40823135.github.io/cad2020">40823135</a><br/> Repository: <a href="https://github.com/40823140/cad2020">40823140</a> | Site: <a href="https://40823140.github.io/cad2020">40823140</a><br/> Repository: <a href="https://github.com/40823142/cad2020">40823142</a> | Site: <a href="https://40823142.github.io/cad2020">40823142</a><br/> Repository: <a href="https://github.com/40823146/cad2020">40823146</a> | Site: <a href="https://40823146.github.io/cad2020">40823146</a><br/> Repository: <a href="https://github.com/40823148/cad2020">40823148</a> | Site: <a href="https://40823148.github.io/cad2020">40823148</a><br/> Repository: <a href="https://github.com/40823151/cad2020">40823151</a> | Site: <a href="https://40823151.github.io/cad2020">40823151</a></p>
<p>2a unordered grouping list:</p>
<p>[[40523148, 40723136, 40723151, 40732331, 40823114, 40823116, 40823119, 40823121, 40823124, 40823128, 40823129, 40823145, 40823150, 40823154], [40723153, 40723225, 40823109, 40823110, 40823111, 40823117, 40823118, 40823123, 40823126, 40823139, 40823144, 40823153, 40871106], [40823101, 40823103, 40823104, 40823107, 40823122, 40823125, 40823127, 40823131, 40823132, 40823136, 40823149, 40823152], [40823102, 40823106, 40823108, 40823112, 40823115, 40823120, 40823135, 40823140, 40823142, 40823146, 40823148, 40823151]]</p>
<p>2b</p>
<p><br/>group 1 <br/>Repository: <a href="https://github.com/s40723224/cad2020">40723224</a> | Site: <a href="https://s40723224.github.io/cad2020">40723224</a><br/>Repository: <a href="https://github.com/40823204/cad2020">40823204</a> | Site: <a href="https://40823204.github.io/cad2020">40823204</a><br/>Repository: <a href="https://github.com/40823212/cad2020">40823212</a> | Site: <a href="https://40823212.github.io/cad2020">40823212</a><br/>Repository: <a href="https://github.com/40823215/cad2020">40823215</a> | Site: <a href="https://40823215.github.io/cad2020">40823215</a><br/>Repository: <a href="https://github.com/40823219/cad2020">40823219</a> | Site: <a href="https://40823219.github.io/cad2020">40823219</a><br/>Repository: <a href="https://github.com/40823225/cad2020">40823225</a> | Site: <a href="https://40823225.github.io/cad2020">40823225</a><br/>Repository: <a href="https://github.com/40823226/cad2020">40823226</a> | Site: <a href="https://40823226.github.io/cad2020">40823226</a><br/>Repository: <a href="https://github.com/40823234/cad2020">40823234</a> | Site: <a href="https://40823234.github.io/cad2020">40823234</a><br/>Repository: <a href="https://github.com/40823250/cad2020">40823250</a> | Site: <a href="https://40823250.github.io/cad2020">40823250</a><br/>Repository: <a href="https://github.com/40823251/cad2020">40823251</a> | Site: <a href="https://40823251.github.io/cad2020">40823251</a><br/>Repository: <a href="https://github.com/40832244/cad2020">40832244</a> | Site: <a href="https://40832244.github.io/cad2020">40832244</a><br/> ==============================<br/>group 2 <br/>Repository: <a href="https://github.com/40823211/cad2020">40823211</a> | Site: <a href="https://40823211.github.io/cad2020">40823211</a><br/>Repository: <a href="https://github.com/40823213/cad2020">40823213</a> | Site: <a href="https://40823213.github.io/cad2020">40823213</a><br/>Repository: <a href="https://github.com/40823214/cad2020">40823214</a> | Site: <a href="https://40823214.github.io/cad2020">40823214</a><br/>Repository: <a href="https://github.com/40823222/cad2020">40823222</a> | Site: <a href="https://40823222.github.io/cad2020">40823222</a><br/>Repository: <a href="https://github.com/40823229/cad2020">40823229</a> | Site: <a href="https://40823229.github.io/cad2020">40823229</a><br/>Repository: <a href="https://github.com/40823230/cad2020">40823230</a> | Site: <a href="https://40823230.github.io/cad2020">40823230</a><br/>Repository: <a href="https://github.com/40823231-2/cad2020">40823231</a> | Site: <a href="https://40823231-2.github.io/cad2020">40823231</a><br/>Repository: <a href="https://github.com/40823236/cad2020">40823236</a> | Site: <a href="https://40823236.github.io/cad2020">40823236</a><br/>Repository: <a href="https://github.com/40823242/cad2020">40823242</a> | Site: <a href="https://40823242.github.io/cad2020">40823242</a><br/>Repository: <a href="https://github.com/40823245/cad2020">40823245</a> | Site: <a href="https://40823245.github.io/cad2020">40823245</a><br/> ==============================<br/>group 3 <br/>Repository: <a href="https://github.com/s40723135/cad2020">40723135</a> | Site: <a href="https://s40723135.github.io/cad2020">40723135</a><br/>Repository: <a href="https://github.com/s40723215/cad2020">40723215</a> | Site: <a href="https://s40723215.github.io/cad2020">40723215</a><br/>Repository: <a href="https://github.com/40823201/cad2020">40823201</a> | Site: <a href="https://40823201.github.io/cad2020">40823201</a><br/>Repository: <a href="https://github.com/40823203/cad2020">40823203</a> | Site: <a href="https://40823203.github.io/cad2020">40823203</a><br/>Repository: <a href="https://github.com/40823205/cad2020">40823205</a> | Site: <a href="https://40823205.github.io/cad2020">40823205</a><br/>Repository: <a href="https://github.com/40823206/cad2020">40823206</a> | Site: <a href="https://40823206.github.io/cad2020">40823206</a><br/>Repository: <a href="https://github.com/40823210/cad2020">40823210</a> | Site: <a href="https://40823210.github.io/cad2020">40823210</a><br/>Repository: <a href="https://github.com/40823217/cad2020">40823217</a> | Site: <a href="https://40823217.github.io/cad2020">40823217</a><br/>Repository: <a href="https://github.com/40823227/cad2020">40823227</a> | Site: <a href="https://40823227.github.io/cad2020">40823227</a><br/>Repository: <a href="https://github.com/40823248/cad2020">40823248</a> | Site: <a href="https://40823248.github.io/cad2020">40823248</a><br/> ==============================<br/>group 4 <br/>Repository: <a href="https://github.com/40823207/cad2020">40823207</a> | Site: <a href="https://40823207.github.io/cad2020">40823207</a><br/>Repository: <a href="https://github.com/40823208/cad2020">40823208</a> | Site: <a href="https://40823208.github.io/cad2020">40823208</a><br/>Repository: <a href="https://github.com/40823216/cad2020">40823216</a> | Site: <a href="https://40823216.github.io/cad2020">40823216</a><br/>Repository: <a href="https://github.com/40823218/cad2020">40823218</a> | Site: <a href="https://40823218.github.io/cad2020">40823218</a><br/>Repository: <a href="https://github.com/40823220/cad2020">40823220</a> | Site: <a href="https://40823220.github.io/cad2020">40823220</a><br/>Repository: <a href="https://github.com/40823224/cad2020">40823224</a> | Site: <a href="https://40823224.github.io/cad2020">40823224</a><br/>Repository: <a href="https://github.com/40823228/cad2020">40823228</a> | Site: <a href="https://40823228.github.io/cad2020">40823228</a><br/>Repository: <a href="https://github.com/40823238/cad2020">40823238</a> | Site: <a href="https://40823238.github.io/cad2020">40823238</a><br/>Repository: <a href="https://github.com/40823244/cad2020">40823244</a> | Site: <a href="https://40823244.github.io/cad2020">40823244</a><br/>Repository: <a href="https://github.com/40823246/cad2020">40823246</a> | Site: <a href="https://40823246.github.io/cad2020">40823246</a><br/> ==============================<br/>group 5 <br/>Repository: <a href="https://github.com/40823202/cad2020">40823202</a> | Site: <a href="https://40823202.github.io/cad2020">40823202</a><br/>Repository: <a href="https://github.com/40823221/cad2020">40823221</a> | Site: <a href="https://40823221.github.io/cad2020">40823221</a><br/>Repository: <a href="https://github.com/40823223/cad2020">40823223</a> | Site: <a href="https://40823223.github.io/cad2020">40823223</a><br/>Repository: <a href="https://github.com/40823232/cad2020">40823232</a> | Site: <a href="https://40823232.github.io/cad2020">40823232</a><br/>Repository: <a href="https://github.com/40823233/cad2020">40823233</a> | Site: <a href="https://40823233.github.io/cad2020">40823233</a><br/>Repository: <a href="https://github.com/40823235/cad2020">40823235</a> | Site: <a href="https://40823235.github.io/cad2020">40823235</a><br/>Repository: <a href="https://github.com/40823237/cad2020">40823237</a> | Site: <a href="https://40823237.github.io/cad2020">40823237</a><br/>Repository: <a href="https://github.com/40823239/cad2020">40823239</a> | Site: <a href="https://40823239.github.io/cad2020">40823239</a><br/>Repository: <a href="https://github.com/40823241/cad2020">40823241</a> | Site: <a href="https://40823241.github.io/cad2020">40823241</a><br/>Repository: <a href="https://github.com/40823247/cad2020">40823247</a> | Site: <a href="https://40823247.github.io/cad2020">40823247</a></p>
<p>2b unordered list:</p>
<p>[[40723224, 40823204, 40823212, 40823215, 40823219, 40823225, 40823226, 40823234, 40823250, 40823251, 40832244], [40823211, 40823213, 40823214, 40823222, 40823229, 40823230, 40823231, 40823236, 40823242, 40823245], [40723135, 40723215, 40823201, 40823203, 40823205, 40823206, 40823210, 40823217, 40823227, 40823248], [40823207, 40823208, 40823216, 40823218, 40823220, 40823224, 40823228, 40823238, 40823244, 40823246], [40823202, 40823221, 40823223, 40823232, 40823233, 40823235, 40823237, 40823239, 40823241, 40823247]]</p>
<h4>有關作業一:</h4>
<p style="padding-left: 30px;">工程師利用電腦輔助設計方法在進行新產品開發的過程, 若能透過參數繪圖軟體的特性, 利用產品設計參數的組合進行最佳化設計, 將可有效提升設計效益, 但該如何透過產品的設計參數來調整控制 2D 工程圖與 3D 零組件圖檔?</p>
<p style="padding-left: 30px;">研究一下, 何謂 <a href="https://en.wikipedia.org/wiki/API">API</a>?</p>
<p style="padding-left: 30px;">NX12, Solidworks 2017, Inventor 2020, Onshape 與 Solvespace 有沒有 API?</p>
<p style="padding-left: 60px;">NX: </p>
<p style="padding-left: 90px;"><a href="https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_api/">https://docs.plm.automation.siemens.com/tdoc/nx/12/nx_api/</a> </p>
<p style="padding-left: 60px;">SolidWorks: </p>
<p style="padding-left: 90px;"><a href="http://help.solidworks.com/2017/english/SolidWorks/sldworks/c_solidworks_api.htm">http://help.solidworks.com/2017/english/SolidWorks/sldworks/c_solidworks_api.htm</a> </p>
<p style="padding-left: 60px;">Inventor: </p>
<p style="padding-left: 90px;"><a href="https://www.autodesk.com/autodesk-university/class/Introduction-Inventor-API-Automation-Where-Should-You-Start-2016">https://www.autodesk.com/autodesk-university/class/Introduction-Inventor-API-Automation-Where-Should-You-Start-2016</a> </p>
<p style="padding-left: 60px;">Onshape:</p>
<p style="padding-left: 90px;"><a href="https://forum.onshape.com/discussion/4030/where-can-i-find-the-apis-and-api-documentation-for-onshape-how-much-functionality-the-apis-cover">https://forum.onshape.com/discussion/4030/where-can-i-find-the-apis-and-api-documentation-for-onshape-how-much-functionality-the-apis-cover</a> </p>
<p style="padding-left: 60px;">Solvespace:</p>
<p style="padding-left: 90px;"><a href="https://pyslvs-ui.readthedocs.io/en/stable/python-solvespace-api/">https://pyslvs-ui.readthedocs.io/en/stable/python-solvespace-api/</a> </p>
<p></p>
<p>HW1 (Due W9 各班上課之前):</p>
<p>請各分組分別利用 NX, Solidworks, Inventor, Onshape 與 Solvespace 建立下列的所有零件檔案, 並以表格列出各零件的體積.</p>
<p style="padding-left: 30px;"><a href="/downloads/Solidworks 零件繪圖練習1.pdf">Solidworks 零件繪圖練習1.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Solidworks 零件繪圖練習2.pdf">Solidworks 零件繪圖練習2.pdf</a></p>
<h4>圖書館電子書選讀:</h4>
<p style="padding-left: 30px;">Genetic Algorithms for Applied CAD Problems:</p>
<p style="padding-left: 60px;"><a href="https://link.springer.com/book/10.1007/978-3-540-85281-0">https://link.springer.com/book/10.1007/978-3-540-85281-0</a> (2009)</p>
<p style="padding-left: 30px;">Introduction to Genetic Algorithms:</p>
<p style="padding-left: 60px;"><a href="https://link.springer.com/book/10.1007/978-3-540-73190-0">https://link.springer.com/book/10.1007/978-3-540-73190-0</a> (2008)</p>
<h4>處理程式:</h4>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/mdecourse/cad2020-w5">https://www.kaggle.com/mdecourse/cad2020-w5</a> (利用<a href="http://mde.tw/cad2020/downloads/w5/cada_github_account.txt">學號與 Github 帳號對應資料</a>修改產生正倔的網頁資料)</p>
<p style="padding-left: 60px;"></p><h2>W4-W6</h2>
<p>個人網站參考: <a href="https://sookrajcreations.weebly.com/">https://sookrajcreations.weebly.com/</a> </p>
<p><a href="https://drive.google.com/file/d/1BriLqVdlevBRRpGvJA23UsoCWjFSDOr5/view?usp=sharing">2018_Robot_Design_for_Everyone.pdf</a></p>
<p><a href="/downloads/Kinematic analysis and synthesis of four-bar mechanisms for straight line coupler curves.pdf">Kinematic analysis and synthesis of four-bar mechanisms for straight line coupler curves.pdf</a></p>
<p><span>利用</span><span><span> </span></span><a href="https://www.debugmode.com/wink/">Wink3</a><span><span> </span>建立電腦操作流程導引影片. 下載</span><span><span> </span></span><a href="https://drive.google.com/file/d/1JI4i_gtMiMbALBZhiGVqqe9VM4cHt8U7/view?usp=sharing">Wink3.7z</a></p>
<p><a href="/downloads/NX_for_Mechanical_Design.pdf">NX_for_Mechanical_Design.pdf</a></p>
<p><a href="/downloads/2013_web_based_customized Design.pdf">2013 Web based Customized Design.pdf</a></p>
<p><a href="/downloads/2014_Automatic Offline Program Generation for a Robotic Spot Welding Assembly Line.pdf">2014_Automatic Offline Program Generation for a Robotic Spot Welding Assembly Line.pdf</a></p>
<p><a href="/downloads/2019_Custom Design and Analysis of Modular High Voltage DC Generator.pdf">2019_Custom Design and Analysis of Modular High Voltage DC Generator.pdf</a> (<a href="https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2623213">來源</a>)</p>
<p><a href="/downloads/2020_Design of a KBE system for automatic weld path definition in CAD.pdf">2020_Design of a KBE system for automatic weld path definition in CAD.pdf</a></p>
<p>登入 @gm 擷取 <a href="https://drive.google.com/drive/folders/1XToLcxBbWmdClSDMmbCj6oDjhec5kQM_?usp=sharing">NX Tutorial Video</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/cL8RSB-dvxU" width="560"></iframe></p>
<p style="padding-left: 30px;">說明之後的版本都將稱為 NX 不會有 NX13</p>
<p style="padding-left: 30px;">之後每個月都會有更新, 每半年會有一個大更新, 類似 Windows 10</p>
<p style="padding-left: 30px;">當採特定 Schema 大更新之後所建立的零組件將無法用先前的舊版本開啟</p>
<p style="padding-left: 30px;">零組件可以透過 nx12\NXBIN\part_security.exe 設定密碼保護</p>
<p style="padding-left: 60px;">part_security -encrypt -p=test safe.txt safe.psf</p>
<p style="padding-left: 90px;">將 safe.txt 以 test 密碼保護存為 safe.psf</p>
<p style="padding-left: 60px;">part_security -genkeys -public=NX_public.key -private=NX_private.key</p>
<p style="padding-left: 90px;">建立公鑰與私鑰</p>
<p style="padding-left: 60px;">part_security -recover -private=NX_private.key -part=model1.part</p>
<p style="padding-left: 30px;">利用新版 NX 開啟舊零組件後, 可以使用 renew feature 重建特徵</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/_RVVpawiWzY" width="560"></iframe></p>
<p style="padding-left: 30px;">N12 功能介紹:</p>
<p style="padding-left: 60px;">Variable offset face</p>
<p style="padding-left: 60px;">Combine</p>
<p style="padding-left: 60px;">Flattening and Forming</p>
<p style="padding-left: 60px;">Latitce enhancements</p>
<p style="padding-left: 60px;">Delete child features enhancements</p>
<p style="padding-left: 60px;">Analyze pocket/Blend pocket enhancements</p>
<p style="padding-left: 60px;">Sheet metal Tab/Flange enhancements</p>
<p style="padding-left: 60px;">Layout/Animation Designer</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/l9Lq3D4AMAQ" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0ZITvDSfKac" width="560"></iframe></p>
<p><a href="https://github.com/mdecourse/Siemens-NXOpen-API">https://github.com/mdecourse/Siemens-NXOpen-API</a> </p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/jS9nY9rHLMk" width="560"></iframe></p>
<p style="padding-left: 30px;"><a href="https://github.com/williamhunter/topy">https://github.com/williamhunter/topy</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/ISosnovik/top">https://github.com/ISosnovik/top</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/zfergus/topopt">https://github.com/zfergus/topopt</a> </p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/8_qayHIfn-I" width="560"></iframe></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Siemens-NXOpen-API">https://github.com/mdecourse/Siemens-NXOpen-API</a> </p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/HSZ0kjAF-NU" width="560"></iframe></p>
<p><a href="/downloads/Synthesis and Analysis of a Novel Linkage Mechanism with the Helical Motion of the End-Effector.pdf">Synthesis and Analysis of a Novel Linkage Mechanism with the Helical Motion of the End-Effector.pdf</a></p>
<p><a href="/downloads/The A-Design Invention Machine.pdf">The A-Design Invention Machine.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/BondGraphTools">https://github.com/mdecourse/BondGraphTools</a></p>
<p style="padding-left: 60px;"><a href="https://bondgraphtools.readthedocs.io/">https://bondgraphtools.readthedocs.io/</a> </p>
<p style="padding-left: 30px;"><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=4140745">Bond Graph Modeling</a></p>
<p style="padding-left: 30px;"><a href="https://www.gawthrop.net/Books/GawSmi96.pdf">Metamodeling.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2017_BOND_GRAPH_ANALYSIS_IN_ROBUST_ENGINEERING_DESIGN.pdf">2017_BOND_GRAPH_ANALYSIS_IN_ROBUST_ENGINEERING_DESIGN.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2014_A Bond Graph Approach for Modelling Systems of Rigid Bodies in Spatial Motion.pdf">2014_A Bond Graph Approach for Modelling Systems of Rigid Bodies in Spatial Motion.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://openmodelica.org/doc/OpenModelicaUsersGuide/latest/ompython.html">https://openmodelica.org/doc/OpenModelicaUsersGuide/latest/ompython.html</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/pymoca/pymoca">https://github.com/pymoca/pymoca</a> </p>
<p><a href="https://www.eidos.ic.i.u-tokyo.ac.jp/~tau/lecture/computational_physics/docs/computational_physics.pdf">Computational Physics - problem solving with computer.pdf</a></p>
<p><a href="http://www.fizika.unios.hr/rf/wp-content/uploads/sites/67/2011/02/CPwP.pdf">Computational Physics with Python.pdf</a></p>
<p><span><a href="https://flask.palletsprojects.com/en/1.1.x/">Flask</a> on <a href="https://www.heroku.com/">Heroku</a> 與 <a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">CoppeliaSim Remote API</a> 程式編寫</span></p>
<p style="padding-left: 30px;">製作可攜 CoppeliaSim for Windows 10 (登入 @gm 下載 <a href="https://drive.google.com/file/d/1sXn_SwXLc9ZHp_TWC2KxoxFiXy7d75t4/view?usp=sharing">CoppeliaSim 4.1.0 rev1.7z</a>)</p>
<p style="padding-left: 30px;">假如要在 Ubuntu 20.04 實體伺服器上執行, 則必須使用 <a href="https://drive.google.com/file/d/1kQrPpvmjXWl_BAUNBWwqNOIOdiPKTPwH/view?usp=sharing">V-REP_PRO_EDU_3.6.1.7z</a> (Windows 10 64 位元版), <a href="https://drive.google.com/file/d/14xyOXc157XIOtQoxxtu5VKd_JnY1_1nm/view?usp=sharing">V-REP_PRO_EDU_V3_6_1_Ubuntu18_04.tar.xz</a> (for @gm users only)</p>
<p style="padding-left: 30px;"><a href="/downloads/introduction_to_vrep.pdf">Introduction to V-rep.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://www.tutorialspoint.com/essentials_of_unix_operating_system/index.asp">Linux 教學影片</a></p>
<p style="padding-left: 30px;">登入 @gm<span> </span><a href="https://drive.google.com/file/d/1itKaIPSdIRZQ-qiLkUpxEPOLzSpP3eNY/view?usp=sharing">下載 Heroku cli 可攜.7z</a>, 解開壓縮檔案後, 在 start.bat 中將 Heroku bin 設定指令搜尋路徑, 重新啟動後, 以 heroku version 確定指令可以正常執行後, heroku login 成功後, 登入帳號密碼會存入 home/_netrc 中. 之後便可直接透過 heroku cli 指令直接對遠端主機下命令.</p>
<p><a href="/downloads/web_vrep2">web_vrep2.7z</a> (Flask 網際程式控制 CoppeliaSim 中的二輪車)</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/">https://www.coppeliarobotics.com/helpFiles/</a> </p>
<p><a href="https://www.twblogs.net/u/5d3f8d75bd9eee51fbf9311d">https://www.twblogs.net/u/5d3f8d75bd9eee51fbf9311d</a> </p>
<p><a href="https://github.com/mdecourse/good_robot">https://github.com/mdecourse/good_robot</a> </p>
<p><a href="https://github.com/mdecourse/BaxterHello_V-REP">https://github.com/mdecourse/BaxterHello_V-REP</a> </p>
<p><a href="https://github.com/mdecourse/v-rep-robotics">https://github.com/mdecourse/v-rep-robotics</a> </p>
<p><a href="https://github.com/mdecourse/DDPG_Grasping">https://github.com/mdecourse/DDPG_Grasping</a> </p>
<p><a href="https://github.com/mdecourse/vrep-raven2">https://github.com/mdecourse/vrep-raven2</a> </p>
<p><a href="https://github.com/mdecourse/arm-suction-sim">https://github.com/mdecourse/arm-suction-sim</a> </p>
<p><a href="https://github.com/mdecourse/mc907-mobile-robotics">https://github.com/mdecourse/mc907-mobile-robotics</a> </p>
<p><a href="https://github.com/mdecourse/vrep-example">https://github.com/mdecourse/vrep-example</a> (C++)</p>
<h4>FreeCAD: </h4>
<p style="padding-left: 30px;">登入 @gm 後<a href="https://drive.google.com/file/d/1-4B06Dm6qW8w8Cz-3h7t2pf3dOctqgD9/view?usp=sharing">下載 FreeCAD_0.18.4_portable.7z</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/FreeCAD/FreeCAD">https://github.com/FreeCAD/FreeCAD</a> </p>
<p style="padding-left: 30px;">參考: <a href="https://github.com/mdecourse/wcms2018/issues/9">https://github.com/mdecourse/wcms2018/issues/9</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/2020_Interactive Programming for Parametric CAD.pdf">2020_Interactive Programming for Parametric CAD.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://gist.github.com/EvoYash">https://gist.github.com/EvoYash</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Retr3d">https://github.com/mdecourse/Retr3d</a> (需要更新為 Python3 與 FreeCAD 0.18.4 相容)</p>
<p style="padding-left: 30px;"><a href="https://python.hotexamples.com/examples/-/FreeCAD/-/python-freecad-class-examples.html">其他參考程式</a></p>
<p style="padding-left: 30px;">開啟 Freecad, File -&gt; New 開啟一個空檔案, 之後以下拉式功能表 View -&gt; Panels -&gt; Python Console 開啟程式輸入視窗, 然後在 Python Console 區貼入下列程式碼後按下 Enter, 可以在工作視窗中建立一個實體模型, 同時按下滑鼠中鍵與右鍵可以旋轉視窗畫面:</p>
<p style="padding-left: 30px;">Desk:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import FreeCAD, Part, PartGui
from FreeCAD import Base

ac_doc = FreeCAD.ActiveDocument

def make_box(name,length,width,height,base_vector,base_rotation):
    ac_doc = FreeCAD.ActiveDocument
    ac_doc.addObject("Part::Box",name)
    getattr(ac_doc, name).Length = length
    getattr(ac_doc, name).Width = width
    getattr(ac_doc, name).Height= height
    getattr(ac_doc, name).Placement=Base.Placement(Base.Vector(base_vector[0],base_vector[1],base_vector[2]),Base.Rotation(base_rotation[0],base_rotation[1],base_rotation[2],base_rotation[3]))

def make_cylinder(name,radius,height,base_vector,base_rotation):
    ac_doc = FreeCAD.ActiveDocument
    ac_doc.addObject("Part::Cylinder",name)
    getattr(ac_doc, name).Radius = radius
    getattr(ac_doc, name).Height= height
    getattr(ac_doc, name).Placement=Base.Placement(Base.Vector(base_vector[0],base_vector[1],base_vector[2]),Base.Rotation(base_rotation[0],base_rotation[1],base_rotation[2],base_rotation[3]))

make_box("Cube",100,100,10,[0,0,1],[0.00,0.00,0.00,1.00])

make_cylinder("cylinder",2,100,[3,3,-90],[0.00,0.00,0.00,1.00])

make_cylinder("cylinder1",2,100,[97,97,-90],[0.00,0.00,0.00,1.00])

make_cylinder("cylinder2",2,100,[3,97,-90],[0.00,0.00,0.00,1.00])

make_cylinder("cylinder3",2,100,[97,3,-90],[0.00,0.00,0.00,1.00])

FreeCAD.Gui.SendMsgToActiveView("ViewFit")
FreeCAD.Gui.activeDocument().activeView().viewAxometric()</pre>
<p style="padding-left: 30px;">Helix Gear:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import Part, FreeCAD, PartGui, FreeCADGui
import InvoluteGearFeature
from fcgear import involute, fcgear
from math import pi, tan

numTeeth = 20
height = 20 #mm
module = 3.5 #mm
pressureAngle = 25.0 # degrees
helixAngle = 25 # degrees
highPrecision = False

# First, draw an involute gear profile
w = fcgear.FCWireBuilder()
involute.CreateExternalGear(w, module, numTeeth, pressureAngle, highPrecision)
invBaseWire = Part.Wire([o.toShape() for o in w.wire])

# Make a helix to serve as the rotation vector
helix = App.ActiveDocument.addObject("Part::Helix", "Helix")
helix.Pitch = numTeeth * pi * module / tan(helixAngle * pi / 180.0)
helix.Height = height
helix.LocalCoord = 1 # 0 = "right handed", 1 = "Left Handed"
helix.Style = 1

# Path for axis of gear
centralEdge = Part.makeLine((0, 0, 0), (0, 0, height))
centralWire = Part.Wire([centralEdge])

# Extrude+twist to make helix
shell = Part.BRepOffsetAPI.MakePipeShell(centralWire)
shell.setAuxiliarySpine(helix.Shape, True, False)
shell.add(invBaseWire)
shell.build()
shell.makeSolid()

# Add gear to document
rotorObject = App.ActiveDocument.addObject("Part::Feature", "Helical Spur Gear")
rotorObject.Shape = shell.shape()

# Cleanup - TODO: Don't call addObject to make the helix in the first place
App.ActiveDocument.removeObject(helix.Name)</pre>
<p style="padding-left: 30px;"></p><h3>Engineering</h3>
<p><a href="https://en.wikipedia.org/wiki/Engineer">Engineer </a></p>
<p style="padding-left: 30px;">Engineers, as practitioners of engineering, are professionals who invent, design, analyze, build and test machines, complex systems, structures, gadgets and materials to fulfill functional objectives and requirements while considering the limitations imposed by practicality, regulation, safety and cost.</p>
<p style="padding-left: 30px;">The word engineer (Latin ingeniator) is derived from the Latin words ingeniare ("to create, generate, contrive, devise") and ingenium ("cleverness"). The foundational qualifications of an engineer typically include a four-year bachelor's degree in an engineering discipline, or in some jurisdictions, a master's degree in an engineering discipline plus four to six years of peer-reviewed professional practice (culminating in a project report or thesis) and passage of engineering board examinations.<br/><br/>The work of engineers forms the link between scientific discoveries and their subsequent applications to human and business needs and quality of life.</p>
<p>The following paragraph cited from "An Introduction to Mechanical Engineering, Third Edition Jonathan Wickert and Kemper E. Lewis", pp. 4-5, 2013</p>
<p style="padding-left: 30px;">The word "engineering" derives from the Latin root ingeniere, meaning to design or to devise, which also forms the basis of the word "ingenious."</p>
<p style="padding-left: 30px;">Those meanings are quite appropriate summaries of the traits of a good engineer.</p>
<p style="padding-left: 30px;">At the most fundamental level, engineers apply their knowledge of mathematics, science, and materials—as well as their skills in communications and business—to develop new and better technologies.</p>
<p style="padding-left: 30px;">Rather than experiment solely through trial and error, engineers are educated to use mathematics, scientific principles, and computer simulations as tools to create faster, more accurate, and more economical designs.</p>
<p style="padding-left: 30px;">In that sense, the work of an engineer differs from that of a scientist, who would normally emphasize the discovery of physical laws rather than apply those phenomena to develop new products. Engineering is essentially a bridge between scientific discovery and product applications.</p>
<p style="padding-left: 30px;">Engineering does not exist for the sake of furthering or applying mathematics, science, and computation by themselves. Rather, engineering is a driver of social and economic growth and an integral part of the business cycle. With that perspective, the U.S. Department of Labor summarizes the engineering profession as follows:</p>
<p style="padding-left: 30px;">Engineers apply the theories and principles of science and mathematics to research and develop economical solutions to technical problems. Their work is the link between perceived social needs and commercial applications.</p>
<p style="padding-left: 30px;">Engineers design products, machinery to build those products, plants in which those products are made, and the systems that ensure the quality of the products and the efficiency of the workforce and manufacturing process.</p>
<p style="padding-left: 30px;">Engineers design, plan, and supervise the construction of buildings, highways, and transit systems. They develop and implement improved ways to extract, process, and use raw materials, such as petroleum and natural gas. They develop new materials that both improve the performance of products and take advantage of advances in technology.</p>
<p style="padding-left: 30px;">They harness the power of the sun, the Earth, atoms, and electricity for use in supplying the Nation’s power needs, and create millions of products using power. They analyze the impact of the products they develop or the systems they design on the environment and on people using them. Engineering knowledge is applied to improving many things, including the quality of healthcare, the safety of food products, and the operation of financial systems.</p>
<p style="padding-left: 30px;"><img class="add_border" height="431" src="/images/flowchart_of_the_prototyypical_mechanical_design_process.png" width="600"/></p>
<p style="padding-left: 30px;">cited from Figure 2.4 - Flowchart of the prototypical mechanical design process (<span>"An Introduction to Mechanical Engineering, Third Edition Jonathan Wickert and Kemper E. Lewis", pp. 41, 2013)</span></p>
<h4><span>Terminology:</span></h4>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Entrepreneurship">Entrepreneurship</a></p>
<p style="padding-left: 60px;"><a href="http://acqnotes.com/acqnote/tasks/requirements-development-steps">Requirements Development</a> (<a href="/downloads/Requirements DevelopmentRequirements Development Steps.pdf">Requirements DevelopmentRequirements Development Steps.pdf</a>)</p>
<p style="padding-left: 90px;"><img alt="" height="564" src="/images/Systems-Engineering-Process-Overview.png" width="600"/></p>
<p style="padding-left: 90px; text-align: center;">(<a href="http://acqnotes.com/acqnote/careerfields/systems-engineering-process-overview">System Engineering Process Overiew</a>)</p>
<p style="padding-left: 90px;">Recognize needs</p>
<p style="padding-left: 120px;"><br/>Recognizing the Need for Information (<a href="https://www.muskegoncc.edu/library/information-literacy-modules/module-i-understanding-information-literacy/recognizing-the-need-for-information/">source</a>)<br/><br/>Education requires the ability to adapt, problem solve, and think critically about challenges that arise in your classes and career. An educated person can recognize an opportunity to learn and make the most of it.<br/><br/>An important skill to acquire is the ability to acknowledge when you don’t know something and decide what to do about it. In other words, it’s valuable to approach an assignment by asking,<br/><br/>    “What do I already know about this?”<br/>    “What do I want to know?”<br/>    “How do I find the information I need?”<br/><br/>Beyond that, you’ll be able to ask,<br/><br/>    “Where will I find the best information to fit my needs?”<br/>    “How will I know it when I see it?”<br/>    “What do I do with it once I have it?”<br/><br/>All of these questions together are a part of a concept called “Information Literacy,” which you’ll learn about, practice, and apply as you work through these six modules. In this first module, you’ll learn how to recognize the need for information and how to plan for a successful inquiry. Understanding these concepts will prepare you to approach later modules – about finding and using information – with a clear sense of purpose.</p>
<p style="padding-left: 90px;"><a href="https://www.skillsyouneed.com/ips/problem-solving2.html">Identify problems</a></p>
<p style="padding-left: 90px;">Define requirements</p>
<p style="padding-left: 60px;">Conceptual Design</p>
<p style="padding-left: 90px;">Generate innovative concepts</p>
<p style="padding-left: 120px;">Brainstorming</p>
<p style="padding-left: 150px;">The 5W+H methods (What, Why, When, Who, Where + How)</p>
<p style="padding-left: 120px;">Reverse thinking</p>
<p style="padding-left: 120px;">Using analogies</p>
<p style="padding-left: 120px;">Social Listening</p>
<p style="padding-left: 120px;">Role playing</p>
<p style="padding-left: 120px;">Mind mapping</p>
<p style="padding-left: 120px;"><a href="/downloads/techniques-to-enhance-concept-generation-and-develop-creativity.pdf">Concept generating</a></p>
<p style="padding-left: 120px;"><a href="https://en.wikipedia.org/wiki/TRIZ">TRIZ</a> (Teoriya Resheniya Izobretatelskikh Zadatch, Theory of Inventive Problem Solving)</p>
<p style="padding-left: 90px;">Select best concepts</p>
<p style="padding-left: 60px;">Detailed Design</p>
<p style="padding-left: 90px;"><a href="https://en.wikipedia.org/wiki/Product_layout">Prduct layout</a>: A product layout is where the equipment, tools, and machines are located according to how a product is made.</p>
<p style="padding-left: 90px;">Material selection</p>
<p style="padding-left: 90px;">System simulation</p>
<p style="padding-left: 90px;">Prototype and tesing</p>
<p style="padding-left: 90px;">Design documentation</p>
<p style="padding-left: 60px;">Production</p>
<p style="padding-left: 90px;">Type of Manufacturing</p>
<p style="padding-left: 90px;">Production volume</p>
<p style="padding-left: 90px;">Supplier selection</p>
<p><a href="/downloads/Intro_to_engineering.pdf">Intro_to_engineering.pdf</a></p>
<p><a href="/downloads/Kinematics_ kinetics_dynamics_inertia.pdf">Kinematics_ kinetics_dynamics_inertia.pdf</a></p>
<p><a href="/downloads/Intro_to_mechanics.pdf">Intro_to_mechanics.pdf</a></p>
<p><a href="/downloads/engineering_mechanics.pdf">engineering_mechanics.pdf</a></p>
<p><a href="/downloads/Intro_to_kinematics_and_dynamics.pdf">Intro_to_kinematics_and_dynamics.pdf</a></p>
<p>Engineering (工程)</p>
<p style="padding-left: 30px;">involves the design and analysis of machines</p>
<p style="padding-left: 30px;">Engineering (工程): 牽涉機器的設計與分析</p>
<p>Machine (機器)</p>
<p style="padding-left: 30px;">deal with the conversion of energy from one source to another using the basic principles of science</p>
<p style="padding-left: 30px;"><span>Machine (機器): </span>牽涉運用科學基本原理將能量從源頭轉化為另一種(作用)</p>
<p>Mechanics (力學)</p>
<p style="padding-left: 30px;"><span>a branch of physical science that deals with energy and forces and their effect on bodies (Merriam-Webster Dictionary)</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text"><span lang="zh-TW">    <span>Mechanics(力學): </span>物理學的一個分支, 牽涉(研究)能量及作用力對物體所造成的影響</span></pre>
<p style="padding-left: 30px;">contains three major subbranches: kinematics, statics, and kinetics</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text" style="padding-left: 30px;"><span lang="zh-TW"><span>Mechanics</span></span>(力學): 包括三個主要分支- 運動學, 靜力學與動理學</pre>
<p>Kinematics (運動學)</p>
<p style="padding-left: 30px;">deals with the study of relative motion</p>
<p style="padding-left: 30px;"><span>Kinematics(運動學): </span>涉及相對運動的研究</p>
<p style="padding-left: 30px;"><span>a branch of dynamics that deals with aspects of motion apart from considerations of mass and force (Merriam-Webster Dictionary)</span></p>
<p style="padding-left: 30px;"><span>Kinematics (運動學): 動力學的一個分支, 涉及運動有關的探討, <span style="background-color: #ffff00;">但並不涉及質量與力</span></span></p>
<p>Statics (靜力學)</p>
<p style="padding-left: 30px;"><span>Statics(靜力學): </span>study of forces and moments apart from motion</p>
<p style="padding-left: 30px;"><span>Statics (靜力學): </span>研究力, 力矩與運動(之間的關係)</p>
<p>Kinetics (動理學)</p>
<p style="padding-left: 30px;"><span>Kinetics (動理學): </span>deals with the result of forces and moments on bodies</p>
<p style="padding-left: 30px;"><span>Kinetics (動理學): </span>研究力與力矩對物體造成的結果</p>
<p style="padding-left: 30px;"><span>a branch of science that deals with the effects of forces upon the motions of material bodies or with changes in a physical or chemical system (Merriam-Webster Dictionary)</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text" style="padding-left: 30px;"><span lang="zh-TW"><span>Kinetics(動理學): </span>科學的一個分支, 涉及力對物質運動以及物理或化學系統變化所造成的影響</span></pre>
<p><span style="background-color: #ffff00;">Dynamics (動力學) = Kinematics (運動學) + Kinetics (動理學)</span></p>
<p style="padding-left: 30px;"><span>Dynamics(動力學): </span>deals with the study of motion caused by forces and torque</p>
<p style="padding-left: 30px;"><span>Dynamics(動力學): </span>研究力與扭矩所造成的運動</p>
<p style="padding-left: 30px;"><span>a branch of mechanics </span><span>that deals with forces and their relation primarily to the motion but sometimes also to the equilibrium </span><span>of bodies (Merriam-Webster Dictionary)</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text" style="padding-left: 30px;"><span lang="zh-TW"><span>Dynamics(動力學): </span>力學的一個分支, 主要處理力及其與運動的關係, 有時並涉及物體的平衡</span></pre>
<p>Mechanism design (機構設計)</p>
<p style="padding-left: 30px;">the desired motion is known and the task is to determine the type of mechanism along with the required forces and torques to produce the desired motion</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text" style="padding-left: 30px;"><span lang="zh-TW">已知所需的運動, (設計)任務是確定機構的類型以及所需的力和扭矩得以產生所需的運動</span></pre><h2>W7-W9</h2>
<p><span>建立 </span><a href="https://github.com/mdecourse/vrep-api-python">https://github.com/mdecourse/vrep-api-python</a><span><span> </span>所需零組件</span></p>
<p><span><a href="https://drive.google.com/file/d/1x476TUUI3iUZBD4FE6DSyVXITK1KhtPm/view?usp=sharing">6-axis Robot Simulator download</a><span><span> </span></span><span>(for @gm users only)</span></span></p>
<p style="padding-left: 30px;"><span><span><a href="https://drive.google.com/file/d/11_gmCPvnmmWElHINiVThpfGrh3RQhsSH/view?usp=sharing">KUKA-KR-16 SolidWorks 2017.7z</a> (970 MB for @gm users only)</span></span></p>
<p style="padding-left: 30px;"><span><span><a href="https://drive.google.com/file/d/1uc8y1Kqb5NQ0kpJfoX6CcG1vEX9f18DE/view?usp=sharing">ANSI C, Python, V-rep, Robot and Mechanism.7z</a> (for @gm users only)</span></span></p>
<p style="padding-left: 60px;">包含自我編譯 Tiny C 編譯器</p>
<p style="padding-left: 60px;"><a href="https://en.wikipedia.org/wiki/Differential_evolution">差分演化</a>運算應用</p>
<p style="padding-left: 60px;">Symbolic Python 在平面機構應用</p>
<p style="padding-left: 60px;">Solvespace 應用範例</p>
<p style="padding-left: 60px;">V-rep 應用範例</p>
<p style="padding-left: 60px;">平面四連桿系統模擬</p>
<p style="padding-left: 60px;">Jansen's 八連桿行走機構模擬</p>
<p style="padding-left: 30px;"><span><a href="https://github.com/mdecourse/Kuka-KR-16">https://github.com/mdecourse/Kuka-KR-16</a> </span></p>
<p style="padding-left: 30px;"><a href="https://wiki.freecadweb.org/Robot_6-Axis">https://wiki.freecadweb.org/Robot_6-Axis</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/scarysim">https://github.com/mdecourse/scarysim</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/qt-stl">https://github.com/mdecourse/qt-stl</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/ADMeshGUI">https://github.com/mdecourse/ADMeshGUI</a> </p>
<p>Robotics related scenes: <a href="https://github.com/CoppeliaRobotics/scenes">https://github.com/CoppeliaRobotics/scenes</a> </p>
<p><a href="/downloads/Slider – Crank Mechanism for demostration and experimentation.pdf">Slider – Crank Mechanism for demostration and experimentation.pdf</a></p>
<p><a href="/downloads/2016_kinematical analysis of crank slider mechanism with graphical method and by computer simulation.pdf">2016_kinematical analysis of crank slider mechanism with graphical method and by computer simulation.pdf</a></p><h3>HW2</h3>
<h4>前言:</h4>
<p style="padding-left: 30px;">在這個作業中, 我們將針對 SolidWorks, Inventor 與 NX 所建立的零組件檔案加以延伸, 進入電腦輔助設計實習課程的第二個主題: 零件修改.</p>
<p style="padding-left: 30px;">假如機械設計工程師能夠利用程式方法操控所設計的零組件, 除了可以省下許多手動修改零組件尺寸與配置的時間外, 還可在後續透過其他設計分析方法後, 由各 MCAD 套件的 API 程式介面, 自動建立所需的零組件檔案連結, BOM 表並展示各零件的物理資料.</p>
<p style="padding-left: 30px;">1980 年代興起的 Matlab, 自 2000 之後部分 Matlab 運算已經逐步被 Python 與 C 的結合所取代, 而自 2012 年起 Julia 出現後, 未來將會有更多高階數值分析運算轉而使用 Julia + Python +R.</p>
<p style="padding-left: 30px;">在以下的練習, 將嘗試利用 Python 透過 COM 設定零組件的變數尺寸, 並利用平面機構合成設計分析為工程分析範例, 以 Python 與 Julia 取代 Matlab 執行所需的分析運算.</p>
<h4>電腦輔助設計繪圖修改練習:</h4>
<p style="padding-left: 30px;">請各班每位學員依照分組順序從 <a href="/downloads/Solidworks 零件繪圖練習1.pdf">Solidworks 零件繪圖練習1.pdf</a> 各取出一個零件原始尺寸後, 自行從中選擇三個關鍵參數尺寸, 以每個尺寸在合理範圍內, 分別 -10%, -5%, +5%, +10% 的尺寸差異作為組合依據, 分別產生 64 個不同尺寸組合的零件, 以 Solidworks, Inventor 或 NX12 繪圖後, 將各組合的零件工程圖, 體積與零件圖檔列表後呈現.</p>
<h4>平面機構連桿組件設計分析與繪圖:</h4>
<p style="padding-left: 30px;">還記得<a href="http://mde.tw/cad2020/content/Engineering.html">工程與工程師</a>的兩個特質嗎? "to create" 以及 "cleverness", 也就是"聰明地創造", 因此只要是憑藉著個人的聰明才智進行創造性的工作, 就可以歸類是在進行一項工程.</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2020/content/HW1.html">作業一</a>的零組件繪圖, 主要是根據 pdf 檔案中已經設計好尺寸或組合內容建立零件, 而在作業二的第一個部分, 則是假想一個零件因為設計的需要(<a href="https://www.aje.com/arc/editing-tip-using-eg-and-ie/">e.g.</a> 客戶的要求, 或者進行設計尺寸變更評估要求), 必須多次變更零件尺寸, 因此除了直接採手動變更零件尺寸, 且以人工作業方式建立零件下載與展示網頁外, 也可以採用程式方法(或稱為電腦輔助流程) 完成此一重複性的工作(<a href="https://www.aje.com/arc/editing-tip-using-eg-and-ie/">e.g.</a> 採 <a href="http://mde.tw/cad2020/content/HW1_SW.html">SolidWorks API Python 程式</a>或 <a href="http://mde.tw/cad2020/content/HW1_INV.html">Inventor API Python程式</a>).</p>
<p style="padding-left: 30px;">接下來, 我們將要練習透過圖形分析法, 計算能夠達成設計目的的平面機構連桿尺寸與組合方式, 然後再進行機構連桿的零組件繪圖, 並試著採用人工或程式方法建立所需的設計展示網頁.</p>
<p style="padding-left: 30px;">此一議題的最終目的是希望能夠利用電腦輔助設計與分析方法完成類似以下機構展示系統:</p>
<p><img caption="false" height="450" src="/images/deep_learning_mechanism_synthesis.gif" width="600"/></p>
<p style="padding-left: 30px;">請登入 @gm 帳號, <a href="https://drive.google.com/file/d/1tkRXvzm6BeJu75jmx1H_ZH106Hzx1CxG/view?usp=sharing">下載平面機構作圖合成參考資料.pdf</a>, 研讀完資料內容後將摘要整理在個人網頁後, 試著整理以下平面機構的設計繪圖, 並將結果以網頁展示.</p>
<p style="padding-left: 30px;">通過三個特定點四連桿合成設計與零組件繪圖:</p>
<p style="padding-left: 60px;"><a href="/downloads/Function Generation using Freudenstein’s Equation.pdf">Function Generation using Freudenstein’s Equation.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Graphical Design of Planar.pdf">Graphical Design of Planar.pdf</a> (<a href="https://onlinelibrary.wiley.com/doi/10.1002/9781119054344.ch3">source</a>)</p>
<p style="padding-left: 30px;">通過五個特定點的平面機構合成設計與零組件繪圖:</p>
<p style="padding-left: 60px;"><a href="/downloads/2009_Solvingaplanarfour-barlinkagesdesignproblem.pdf">2009_Solvingaplanarfour-barlinkagesdesignproblem.pdf</a></p>
<p style="padding-left: 60px;"><a href="/downloads/2005_Analytical synthesis of function generating spherical four-bar mechanism for the five precision points.pdf">2005_Analytical synthesis of function generating spherical four-bar mechanism for the five precision points.pdf</a></p>
<p style="padding-left: 30px;">以特定方位通過十個特定點的單自由度平面機構設計與零組件繪圖:</p>
<p style="padding-left: 60px;"><a href="https://drive.google.com/file/d/1e-h-RE-IDVwYWW5PI_j8B6t7GiBfhRdl/view?usp=sharing">2020_Exact synthesis and input-output analysis of 1-dof planar linkages for visiting 10 poses.pdf</a> (for @gm users only)</p>
<p style="padding-left: 30px;">(p.s. 為何上面兩個 pdf 檔案, 一個可以放在倉儲中直接提供下載, 但另外一個則要登入 @gm 帳號才能下載? 原因是: 若該 pdf 檔案可以公開合法取得, 則可以放入倉儲直接提供任何人下載, 但若是從校方付費訂閱的內容取得, 則只限修課學員登入 @gm 帳號後才能下載)</p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="/downloads/Linkage_design.pdf">Linkage Design.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2013_FOUR-BAR LINKAGE SYNTHESIS FOR A COMBINATION OF MOTION AND PATH-POINT GENERATION.pdf">2013_FOUR-BAR LINKAGE SYNTHESIS FOR A COMBINATION OF MOTION AND PATH-POINT GENERATION.pdf</a> (碩士論文)</p>
<p style="padding-left: 30px;"><a href="/downloads/2009_KINEMATIC SYNTHESIS AND ANALYSIS TECHNIQUES TO IMPROVE PLANAR RIGID-BODY GUIDANCE.pdf">2009_KINEMATIC SYNTHESIS AND ANALYSIS TECHNIQUES TO IMPROVE PLANAR RIGID-BODY GUIDANCE.pdf</a> (博士論文)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/10Nhw6sUXbtnB9K6nWHQmbCGNu98KHK-J/view?usp=sharing">2019_A Machine Learning Approach to Kinematic Synthesis of Defect-Free Planar Four-Bar Linkages.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2016_DYNAMIC ANALYSIS OF FLEXIBLE MECHANISMS WITH CLEARANCE.pdf">2016_DYNAMIC ANALYSIS OF FLEXIBLE MECHANISMS WITH CLEARANCE.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2015_Computer Aided Design of Eight-bar Linkages.pdf">2015_Computer Aided Design of Eight-bar Linkages.pdf</a> (博士論文)</p>
<p style="padding-left: 30px;"><a href="https://mechanicaldesign101.com/blog/">https://mechanicaldesign101.com/blog/</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/2012_NSF Workshop on 21st Century Kinematics.pdf">2012_NSF Workshop on 21st Century Kinematics.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2006_textbook_intro_applied_digital_control.pdf">2006_textbook_intro_applied_digital_control.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2006_WAM_UsersGuide_AE-00.pdf">2006_WAM_UsersGuide_AE-00.pdf</a> (<a href="https://medical.barrett.com/about-1">https://medical.barrett.com/about-1</a>)</p>
<p style="padding-left: 30px;"><a href="/downloads/matlab_tutorial.pdf">matlab_tutorial.pdf</a> (for the past) vs. <a href="/get_page/HW2/Julia_tutorialpdf">Julia_tutorialpdf</a>, <a href="/downloads/Julia-intro2.pdf">Julia-intro2.pdf</a>, <a href="/downloads/Julia_numerial_computing.pdf">Julia_numerial_computing.pdf</a> (for now and the future)</p><h3>W7</h3>
<p><span>準備進行電腦輔助設計分析主題練習.</span></p>
<h4>利用 SciTE 編輯器類解譯 ANSI C 程式</h4>
<p><a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a> 是一個小型的 ANSI C 解譯器, 可以與隨身系統中的 SciTE 結合, 讓工程師利用 ANSI C 程式語言進行電腦輔助設計分析.</p>
<p>進行步驟如下:</p>
<p>1. 從 Tiny C 官方網站中的 <a href="http://download.savannah.gnu.org/releases/tinycc/">Download</a> 連結, 可以下載 <a href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.27-win64-bin.zip">tcc-0.9.27-win64-bin.zip</a>, 解開壓縮檔案後的目錄為 tcc, 其中包含 tcc.exe, 可以用來編譯 ANSI C 程式, 這個目錄必須放在 y:\ 根目錄中.</p>
<p>2. 接著必須將 y:\tcc\ 放入隨身系統中的 path 命令搜尋路徑中, 一旦啟動後就可以直接執行 tcc.exe, 也就是 start.bat 必須修改如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set path_portablegit=%Disk%:\Portablegit\bin;
set path_julia=%Disk%:\julia-1.5.2\bin;
set path_tcc=%Disk%:\tcc\;

path=%Disk%:;%path_python%;%path_portablegit%;%path_julia%;%path_tcc%;%path%;</pre>
<p>在上面 start.bat 的設定中, 可以發現除了 portablegit 之外, 同時增加 path_julia 與 path_tcc 兩個批次檔變數的設定, 並且分別加到 path= 的設定中.</p>
<p>完成後, 可以利用 stop.bat 關閉隨身系統後, 再使用 start.bat 重新啟動, 並在命令列中輸入 tcc, 若出現</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Tiny C Compiler 0.9.27 - Copyright (C) 2001-2006 Fabrice Bellard
Usage: tcc [options...] [-o outfile] [-c] infile(s)...
       tcc [options...] -run infile [arguments...]
General options:
  -c          compile only - generate an object file
  -o outfile  set output filename
  -run        run compiled source
  -fflag      set or reset (with 'no-' prefix) 'flag' (see tcc -hh)
  -Wwarning   set or reset (with 'no-' prefix) 'warning' (see tcc -hh)
  -w          disable all warnings
  -v -vv      show version, show search paths or loaded files
  -h -hh      show this, show more help
  -bench      show compilation statistics
  -           use stdin pipe as infile
  @listfile   read arguments from listfile
Preprocessor options:
  -Idir       add include path 'dir'
  -Dsym[=val] define 'sym' with value 'val'
  -Usym       undefine 'sym'
  -E          preprocess only
Linker options:
  -Ldir       add library path 'dir'
  -llib       link with dynamic or static library 'lib'
  -r          generate (relocatable) object file
  -shared     generate a shared library/dll
  -rdynamic   export all global symbols to dynamic linker
  -soname     set name for shared library to be used at runtime
  -Wl,-opt[=val]  set linker option (see tcc -hh)
Debugger options:
  -g          generate runtime debug info
  -b          compile with built-in memory and bounds checker (implies -g)
  -bt N       show N callers in stack traces
Misc. options:
  -x[c|a|n]   specify type of the next infile
  -nostdinc   do not use standard system include paths
  -nostdlib   do not link with standard crt and libraries
  -Bdir       set tcc's private include/library dir
  -MD         generate dependency file for make
  -MF file    specify dependency file name
  -m32/64     defer to i386/x86_64 cross compiler
Tools:
  create library  : tcc -ar [rcsv] lib.a files
  create def file : tcc -impdef lib.dll [-v] [-o lib.def]</pre>
<p>表示啟動命令搜尋路徑已經包含 y:\tcc 目錄.</p>
<p>3. 接下來必須修改 SciTE 編輯器中的 cpp.properties, 讓 Tools -&gt; Go 可以呼叫 tcc.exe 類解譯編輯器中副檔名為 .c 的 ANSI C 程式.</p>
<p>作法為將滑鼠指向 SciTE 下拉式功能表 Options 往下點擊 Open cpp.properties 編輯設定檔案, 並且勾選 View -&gt; Line Number 在編輯器中顯示行號, 針對  476 行之後的設定修改如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ccopts=-pedantic -Os
#cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o
#ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o
cc=y:/tcc/tcc.exe -run
ccc=y:/tcc/tcc.exe -run

make.command=make
command.compile.*.c=$(ccc) -std=c99
command.build.*.c=$(make.command)
command.build.*.h=$(make.command)
command.clean.*.c=$(make.command) clean
command.clean.*.h=$(make.command) clean
command.go.*.c=$(cc) $(FileNameExt)
#command.go.*.c=./$(FileName)
# To make the Go command both compile (if needed) and execute, use this setting:</pre>
<p><span>意即, 將原先 cc=g++ 與 ccc=gcc 改為利用 y:\tcc\tcc.exe -run 進行類解譯, 而且將原先必須經過編譯後以檔名執行的 command.go.*.c 設為直接利用 tcc.exe -run ex.c 的方式執行, 而 FileNameExt 就是帶有副檔名的程式名稱.</span></p>
<p><span>4. 完成上述設定後, 可以在編輯器中納入 hello.c, 並且利用 Tools -&gt; Go 直接進行存檔並且執行.</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
 
int main() {
    printf("Hello, world!\n");
    return 0;
}</pre>
<p>5. 接下來可以設法利用 ANSI C 練習一下 <a href="http://mde.tw/lab/content/Dart.html">http://mde.tw/lab/content/Dart.html</a> 中的數值分析運算, 利用 Runge-Kutta 解微分方程式. 為了能讓 C 解出的數值資料可以轉為圖檔, 並且允許加入中英文標註資料, 還必須下載 <a href="https://drive.google.com/file/d/1aKqP5F94XIVadTN-dwSKbKgyBoMuxNFm/view?usp=sharing">gnuplot.7z</a> 與 <a href="https://drive.google.com/file/d/1ZovnX2JmgjOLz90TscKHgmDJRQjMJSLp/view?usp=sharing">wqy-microhei.ttc</a>, 其中的 gunplot 目錄與 .ttc 中文字型檔案可以放在 y:\, 並且在 start.bat 加入 y:\gnuplot\bin 命令搜尋路徑, 而最新的 gnuplot 也可以從 <a href="http://www.gnuplot.info/">http://www.gnuplot.info/</a> 下載.</p>
<p>6. 完成上述所有步驟設定後, 可以執行下列 ANSI C 程式:</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">/* Runge Kutta for a set of first order differential equations */
 
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
 
#define N 2 /* number of first order equations */
#define dist 0.1 /* stepsize in t*/
#define MAX 30.0 /* max for t */
 
FILE *output; /* internal filename */
FILE *output1; /* internal filename */
// 利用 pipe 呼叫 gnuplot 繪圖
FILE *pipe;
 
void runge4(double x, double y[], double step); /* Runge-Kutta function */
double f(double x, double y[], int i); /* function for derivatives */
 
void main(){
 
  double t, y[N];
  int j;
 
  output=fopen("osc.dat", "w"); /* external filename */
  output1=fopen("osc1.dat", "w"); /* external filename */
 
  y[0]=1.0; /* initial position */
  y[1]=0.0; /* initial velocity */
 
  //fprintf(output, "0\t%f\n", y[0]);
 
  for (j=1; j*dist&lt;=MAX ;j++) /* time loop */{
 
    t=j*dist;
    runge4(t, y, dist);
    fprintf(output, "%f\t%f\n", t, y[0]);
    fprintf(output1, "%f\t%f\n", t, y[1]);
  }
 
  fclose(output);
  fclose(output1);
 
  pipe = popen("gnuplot -persist","w");
  //fprintf(pipe,"set term png enhanced font \"v:/fireflysung.ttf\" 18 \n");
  fprintf(pipe,"set term png enhanced font \"y:/wqy-microhei.ttc\" 18 \n");
  //fprintf(pipe,"set yrange [68:70]\n");
  fprintf(pipe,"set output \"test.png\"\n");
  fprintf(pipe, "plot \"osc.dat\" title \"位移\" with lines, \"osc1.dat\" title \"速度\" with lines\n");
  fprintf(pipe,"quit\n");

  fprintf(pipe,"quit\n");
  pclose(pipe);
}
 
void runge4(double x, double y[], double step){
 
  double h=step/2.0, /* the midpoint */
  t1[N], t2[N], t3[N], /* temporary storage arrays */
  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */
  int i;
 
  for (i=0;i&lt;N;i++){
 
    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    k4[i]= step*f(x+step, t3, i);
  }
 
  for (i=0;i&lt;N;i++){
 
    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;
  }
}
 
double f(double x, double y[], int i){
 
  if (i==0)
    x=y[1]; /* derivative of first equation */
  if (i==1)
    x=-y[0]-0.5*y[1];
  return x;
}</pre>
<p>上述所解的狀態方程式:</p>
<p>質量為 1kg 物理, 以 k=1 彈簧與 b=0.5 阻尼器連接在固定牆壁, 起始拉開 1m, 速度為０ 時放開, 求放開質量後的運動模擬.</p>
<p>$x(t)$ 表示質量拉開水平方向設為正向 x, 且為時間 t 的函式.</p>
<p>$\ddot{x}+x+0.5*\dot{x}=0$</p>
<p>$x(0)=1.0$</p>
<p>$\dot{x}(0)=0$</p>
<p>以下利用程式定義解題:</p>
<p>$x=y[0]$</p>
<p>$\dot{x}=y[1]$</p>
<p>$\ddot{x}=-y[0]-0.5*y[1]$</p>
<p>起始條件:</p>
<p>$x(0)=1$</p>
<p>$\dot{x}=0$</p>
<p></p>
<p>並產生數值運算結果:</p>
<p><img alt="" class="add_border" height="450" src="/images/w7_tcc_gnuplot_rk4_ex.png" width="600"/></p>
<p>上述相同題目也可以 <a href="https://dartpad.github.io/?id=d5f46389a984bb511959c0f6b6d94d10">Dart 進行運算</a>.</p>
<p>其他與 mass-spring-damper 動態分析有關議題請參考: <a href="http://www.sharetechnote.com/html/DE_Modeling_Example_SpringMass.html">http://www.sharetechnote.com/html/DE_Modeling_Example_SpringMass.html</a> </p>
<p>上述各步驟完成後的所有新增設定與檔案:</p>
<p><a href="https://drive.google.com/file/d/1BdAeRF8RmekFqeYp_4gVHV6Bmcej7buR/view?usp=sharing">cad2020_w7_tcc_gnuplot.7z</a></p>
<p>接下來看看能否利用 Dart, Python 或 ANSI C 進行電腦輔助機構設計與分析.</p>
<p><a href="/get_page/W7/mechanical_advantage_analysis.pdf">mechanical_advantage_analysis.pdf</a></p>
<p><a href="/downloads/2016_High_mechanical_advantage_design_of_six-bar_Stephe.pdf">2016_High_mechanical_advantage_design_of_six-bar_Stephe.pdf</a></p>
<p><a href="/downloads/2018_design_simulation_mechanism.pdf">2018_design_simulation_mechanism.pdf</a></p>
<p>其他參考資料可以下載 <a href="https://drive.google.com/file/d/1uc8y1Kqb5NQ0kpJfoX6CcG1vEX9f18DE/view?usp=sharing">ANSI C, Python, V-rep, Robot and Mechanism.7z</a><span> </span>(for @gm users only) 後將 tcc 目錄放入 y:\tmp 中, 此檔案包含從 <a href="http://download.savannah.gnu.org/releases/tinycc/">http://download.savannah.gnu.org/releases/tinycc/</a> 下載的 Tiny C 程式原始碼, 可以利用下列 compile.bat 批次檔案, 利用舊版的 Tiny C 編譯出新版的 Tiny C 執行檔與程式庫.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">echo Use TCC to compile TCC

set /p VERSION= &lt; VERSION
echo &gt; config.h #define TCC_VERSION "%VERSION%"

 
echo Set CC=tcc
 
set CC=tcc
set target=-DTCC_TARGET_PE -DTCC_TARGET_X86_64
set P=64
 
echo tools: tiny_impdef.exe, tiny_libmaker.exe
 
%CC% %target% win32/tools/tiny_impdef.c -o tiny_impdef.exe
%CC% %target% win32/tools/tiny_libmaker.c -o tiny_libmaker.exe
 
echo Compile libtcc.dll
 
if not exist libtcc\nul mkdir libtcc
%CC% %target% -w -shared -DLIBTCC_AS_DLL -DONE_SOURCE libtcc.c -o libtcc.dll
tiny_impdef libtcc.dll -o libtcc/libtcc.def
 
echo Compile tcc.exe
 
%CC% %target% tcc.c -o tcc.exe -ltcc -Llibtcc
 
echo Compile libcc1.a
 
%CC% %target% -c lib/libtcc1.c
%CC% %target% -c win32/lib/crt1.c
%CC% %target% -c win32/lib/wincrt1.c
%CC% %target% -c win32/lib/dllcrt1.c
%CC% %target% -c win32/lib/dllmain.c
%CC% %target% -c win32/lib/chkstk.S
%CC% %target% -c lib/alloca86_64.S
tiny_libmaker lib/libtcc1.a libtcc1.o alloca86_64.o crt1.o wincrt1.o dllcrt1.o dllmain.o chkstk.o</pre>
<!-- 啟用 LaTeX equations 編輯 -->
<script>
  MathJax = {
    tex: {inlineMath: [['$', '$']]}
  };
</script>
<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script><h3>HW3</h3>
<p>請登入 @gm 帳號後下載 <a href="https://drive.google.com/file/d/1J-4l-NNlfPPZSuf2hBKadunYv36IkYQj/view?usp=sharing">cad2020_hw3.7z</a> (100MB)</p>
<p>其中包含已經完成零組件繪圖的 <a href="https://www.robots.com/robots/kuka-kr-16">KUKA KR-16 Robot</a>:</p>
<p><img caption="false" height="376" src="/images/sw_kuka_kr-16_robot.png" width="600"/></p>
<p>以及由 SolidWorks 2017 教育版所轉出的前三段 <a href="https://en.wikipedia.org/wiki/STL_(file_format)">ASCII STL </a>零件所組成的 <a href="https://www.parallemic.org/RoKiSim.html">RoKiSim</a> 機器模擬手臂:</p>
<p><img alt="" height="358" src="/images/RoKiSim_KUKA_KR16_two_link_assembled.png" width="600"/></p>
<p><a href="https://www.parallemic.org/RoKiSim.html">RoKiSim</a><span><span> 採用 <a href="https://wiki.qt.io/About_Qt">Qt C++</a> 結合 <a href="https://en.wikipedia.org/wiki/OpenGL">OpenGL</a> 程式庫製作, 只能讀取具 color 屬性的 <a href="https://en.wikipedia.org/wiki/STL_(file_format)">ASCII STL</a> 檔案, 且零件組合系統採 <a href="https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters">Denavit-Hartenberg</a> 表示法定義.</span></span></p>
<p><span><span>請根據 <a href="https://drive.google.com/file/d/1J-4l-NNlfPPZSuf2hBKadunYv36IkYQj/view?usp=sharing">cad2020_hw3.7z</a> 中所提供的其他 SolidWorks 零件, 完成此一六軸機械手臂的 STL 零件組合, 並說明如何進行後續的 <a href="https://en.wikipedia.org/wiki/Forward_kinematics">Forward</a> 與 <a href="https://en.wikipedia.org/wiki/Inverse_kinematics">Inverse Kinematic</a> 模擬.</span></span></p>
<p><span><img alt="" height="429" src="/images/hw3_animation.gif" width="600"/></span></p>
<p>Denavit-Hartenberg Parameters</p>
<p><img caption="false" class="add_border" height="383" src="/images/dh_params.png" width="600"/></p>
<p>A commonly used convention for selecting frames of reference in robotics applications is the Denavit and Hartenberg (D–H) convention which was introduced by <a href="https://www.llnl.gov/community/retiree-and-employee-resources/in-memoriam/jacques-denavit">Jacques Denavit</a> (1930-2013) and <a href="http://www-iri.upc.es/people/thomas/repository.html">Richard S. Hartenberg</a> (1907-1997). In this convention, coordinate frames are attached to the joints between two links such that one transformation is associated with the joint, [Z], and the second is associated with the link [X]. The coordinate transformations along a serial robot consisting of n links form the kinematics equations of the robot,</p>
<p></p>
<h4>References:</h4>
<p style="padding-left: 30px;"><a href="https://ecommons.cornell.edu/handle/1813/58640">Kinematic Synthesis of Linkage</a></p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters">https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters</a> </p>
<p style="padding-left: 30px;"><a href="http://www.roboanalyzer.com/">http://www.roboanalyzer.com/</a> </p>
<p style="padding-left: 30px;"><a href="https://www.parallemic.org/RoKiSim.html">https://www.parallemic.org/RoKiSim.html</a> </p>
<p style="padding-left: 30px;"><a href="http://www.diag.uniroma1.it/~deluca/rob1_en/material_rob1_en.html">http://www.diag.uniroma1.it/~deluca/rob1_en/material_rob1_en.html</a> </p>
<p style="padding-left: 30px;"><a href="https://www.iri.upc.edu/research/webprojects/cuikweb">https://www.iri.upc.edu/research/webprojects/cuikweb</a> </p>
<!-- 啟用 LaTeX equations 編輯 -->
<script>
MathJax = {
    tex: {inlineMath: [['$', '$']]}
  };
</script>
<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script><h2>W10-W14</h2>
<p><span>分組電腦輔助設計專案</span></p>
<p><a href="https://www.tutorialspoint.com/data_science_machine_learning_data_analysis_python_and_r/index.asp">Python Data Science 教學影片</a></p><h2>W15-W18</h2>
<p><span>分組總結報告</span></p>
<p></p><h1>CAD</h1>
<p>Computer Aided Design 電腦輔助設計牽涉如何利用<span class="tlid-translation translation" lang="zh-TW"><span class="" title="">計算機系統相關技術 (computer system related technology)，以協助產品設計的創建，修改，分析和最佳化.</span></span></p>
<p><span class="tlid-translation translation" lang="zh-TW"><span class="" title="">Product design creation 設計創建<br/></span></span></p>
<p><span class="tlid-translation translation" lang="zh-TW"><span class="" title="">Product design modification 設計修改</span></span></p>
<p><span class="tlid-translation translation" lang="zh-TW"><span class="" title="">Product design analysis 設計分析</span></span></p>
<p><span class="tlid-translation translation" lang="zh-TW"><span class="" title="">Product design optimization 設計最佳化</span></span></p>
<p><span class="tlid-translation translation" lang="zh-TW"><span class="" title=""><img alt="" height="355" src="/images/integration_cad_cam_cae_through_database.png" width="600"/></span></span></p>
<p style="text-align: center;"><span class="tlid-translation translation" lang="zh-TW"><span class="" title="">Integration of CAD, CAE and CAM through the database (1999, Principles of CAD/CAM/CAE Systems, KunWoo Lee</span></span></p>
<p style="text-align: left;"><a href="/downloads/2019_Auto-assessment tools for mechanical computer aided design education.pdf">2019_Auto-assessment tools for mechanical computer aided design education.pdf</a> </p>
<p style="text-align: left; padding-left: 30px;"><a href="https://github.com/mdecourse/trimesh">https://github.com/mdecourse/trimesh</a> </p><h2>設計創建</h2>
<p><a href="/downloads/2017_Computational Abstractions for interactive design of robotic devices.pdf">2017_Computational Abstractions for interactive design of robotic devices.pdf</a></p>
<p><a href="/downloads/2018_automatic design of task-specific robotic arms.pdf">2018_automatic design of task-specific robotic arms.pdf</a></p>
<h4>零件繪圖</h4>
<p style="padding-left: 30px;">Advanced CAD Modeling</p>
<p style="padding-left: 60px;"><a href="https://link.springer.com/book/10.1007/978-3-030-02399-7">https://link.springer.com/book/10.1007/978-3-030-02399-7</a></p>
<h4>機電傳動與避震機構設計</h4>
<p>設計創建流程中的 2D/3D 繪圖, 其建構目的為何? 只是為了溝通表達? 還是有其他目的?</p>
<p style="padding-left: 30px;">設計內容在溝通過程需不需要進行變更修改?設計內容如何修改?由誰修改?</p>
<p style="padding-left: 60px;">設計內容由設計者親自修改與採用計算機程式修改, 有何不同?</p>
<p style="padding-left: 60px;">設計內容一旦修改, 舊版本需要完整保存嗎?如何保存?</p>
<p style="padding-left: 60px;">機械產品一旦發現瑕疵, 需要進行設計變更嗎?有聽過零件 recall 嗎?</p>
<p style="padding-left: 60px;">現在的所謂產品, 只包含機械零件嗎?需要電子感測元件?需要電機驅動元件?</p>
<p style="padding-left: 60px;">為何會產生所謂的客戶關係管理?這跟機械設計工程師有關嗎?</p>
<p style="padding-left: 90px;">產品的規格與品質是原創件者說了算, 還是銷售櫃台的人員說了算?</p>
<p style="padding-left: 90px;">在甚麼情況下, 消費者得以直接面對產品的原始創建者?網路?</p>
<p><a href="https://github.com/cyberbotics/webots">https://github.com/cyberbotics/webots</a> 為何要 open source?</p>
<p>從 <a href="https://cyberbotics.com/doc/guide/">https://cyberbotics.com/doc/guide/</a> 的內容創建, 你看到甚麼?</p>
<p style="padding-left: 30px;">提示: <a href="https://github.com/cyberbotics/webots/tree/master/docs/guide">https://github.com/cyberbotics/webots/tree/master/docs/guide</a></p>
<p style="padding-left: 30px;">何謂 Markdown?</p>
<p style="padding-left: 30px;">為何 Webots 的技術手冊要採用 Markdown 格式編寫?</p>
<p style="padding-left: 30px;">為何 Webots 的技術手冊要部署到 Github Pages?</p>
<h4>參考</h4>
<p style="padding-left: 30px;"><a href="https://github.com/KmolYuan/Pyslvs-UI/issues/35">https://github.com/KmolYuan/Pyslvs-UI/issues/35</a></p>
<p style="padding-left: 30px;"><a href="https://design.engr.oregonstate.edu/matthew-campbell-phd-dissertation">The Design Invention Machine: A Means of Automating and Investigating Conceptual Design </a></p>
<p style="padding-left: 30px;"><a href="https://repositories.lib.utexas.edu/handle/2152/ETD-UT-2010-05-1393">A graph grammar scheme for representing and evaluating planar mechanisms</a></p>
<p style="padding-left: 30px;"><a href="https://repositories.lib.utexas.edu/handle/2152/24806">Automatic Design of Planar Mechanism</a></p>
<p style="padding-left: 30px;"><a href="https://www.jorislaarman.com/">https://www.jorislaarman.com/</a> </p><h3>Onshape</h3>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a></p>
<h4>Onshape 入門書</h4>
<p style="padding-left: 30px;"><a href="https://cad.onshape.com/help/Content/Primer/onshape_primer.htm">https://cad.onshape.com/help/Content/Primer/onshape_primer.htm</a></p>
<h4>Reference</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/V-Rep">https://github.com/mdecourse/V-Rep</a></p>
<p style="padding-left: 30px;"><a href="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g1/">https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g1/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/scrum_cadp_final/issues">https://github.com/scrum-1/scrum_cadp_final/issues</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/cadp2018/issues/17">https://github.com/mdecourse/cadp2018/issues/17</a></p>
<p><a href="https://405232491.gitbooks.io/gitbook_week3/content/week10.html">https://405232491.gitbooks.io/gitbook_week3/content/week10.html</a></p>
<p></p><h3>Solidworks</h3>
<p><a href="https://drive.google.com/file/d/1KPpXzumzBIvMCovZdBYh0s468uFO277k/view">下載 Solidworks 2017 安裝檔案</a> (只有修課人員可以下載)</p>
<p><a href="http://help.solidworks.com/2017/chinese/SolidWorks/sldworks/c_administration_toplevel_solidworks.htm">2017 Solidworks 中文繁體說明文件</a></p>
<p><a href="http://help.solidworks.com/2017/english/SolidWorks/sldworks/c_basic_concepts_solidworks_fundamentals.htm">2017 Solidworks 英文說明文件</a></p>
<p><a href="https://www.tutorialspoint.com/learn_solidworks_from_scratch_to_expert_level/1_1_1_1_part_sketch_2d_line.asp">Solidworks 教學影片</a></p>
<p><a href="https://drive.google.com/drive/folders/1Tlg9deuUsZI3Npi8pkvs3fIfUAK8nqtp?usp=sharing">Solidworks API 教學影片</a></p>
<p><a href="/downloads/sw_macro/Free_SolidWorks_OBJ_Exporter.swp">Free_SolidWorks_OBJ_Exporter.swp</a></p>
<p><a href="http://help.solidworks.com/2017/english/api/sldworksapiprogguide/Welcome.htm">http://help.solidworks.com/2017/english/api/sldworksapiprogguide/Welcome.htm</a> </p>
<p><a href="http://joshuaredstone.blogspot.com/2015/02/solidworks-macros-via-python.html">http://joshuaredstone.blogspot.com/2015/02/solidworks-macros-via-python.html</a> </p>
<p><a href="/downloads/Hack a simulation - using the solidworks api.pdf">Hack a simulation - using the solidworks api.pdf</a></p>
<p><a href="/downloads/Making Macros in Solidworks.pdf">Making Macros in Solidworks.pdf</a></p>
<p><a href="https://www.codestack.net/">https://www.codestack.net/</a> </p>
<p><a href="https://www.engineersrule.com/driveworksxpress-api-learn/">https://www.engineersrule.com/driveworksxpress-api-learn/</a> </p>
<p><a href="https://help.solidworks.com/2018/English/SolidWorks/sldworks/c_Using_Optimization_Module.htm">https://help.solidworks.com/2018/English/SolidWorks/sldworks/c_Using_Optimization_Module.htm</a> </p>
<p><a href="/downloads/Solidworks_global variables and equation deiven design.pdf">Solidworks_global variables and equation deiven design.pdf</a></p>
<p><a href="/downloads/2012_SolidWorks Secondary Development with Visual Basic 6 for an Automated Modular Fixture Assembly Approach.pdf">2012_SolidWorks Secondary Development with Visual Basic 6 for an Automated Modular Fixture Assembly Approach.pdf</a></p>
<p><a href="/downloads/2014_Design and Drawing Automation Using Solid Works Application Programming Interface.pdf">2014_Design and Drawing Automation Using Solid Works Application Programming Interface.pdf</a></p>
<p><a href="/downloads/2016_Assembly_Design_Semantic_Recognition_Using_SolidWorks.pdf">2016_Assembly_Design_Semantic_Recognition_Using_SolidWorks.pdf</a></p>
<p><a href="/downloads/2018_Automatic Generation of Disassembly Sequences and Exploded Views from SolidWorks Symbolic Geometric Relationships.pdf">2018_Automatic Generation of Disassembly Sequences and Exploded Views from SolidWorks Symbolic Geometric Relationships.pdf</a></p>
<p><a href="/downloads/2019_Parametric System Design of Belt Conveyor Legs Based on SolidWorks.pdf">2019_Parametric System Design of Belt Conveyor Legs Based on SolidWorks.pdf</a></p>
<p><img alt="" height="517" src="/images/Python_driven_Solidworks.gif" width="800"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/OCQlRw4Pcr4" width="560"></iframe></p>
<p><a href="https://www.solidsolutions.co.uk/solidworks/tutorial-videos/solidworks-patterns-equations-part-1.aspx">https://www.solidsolutions.co.uk/solidworks/tutorial-videos/solidworks-patterns-equations-part-1.aspx</a></p>
<p><a href="https://www.solidsolutions.co.uk/solidworks/tutorial-videos/solidworks-patterns-equations-part-2.aspx">https://www.solidsolutions.co.uk/solidworks/tutorial-videos/solidworks-patterns-equations-part-2.aspx</a> </p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/TovjGmh_tnI" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/DZIKTNeO35M" width="560"></iframe></p><h3>Inventor</h3>
<p><a href="/downloads/inventor/fourbar_linkage_design_and_analysis.pdf">fourbar_linkage_design_and_analysis.pdf</a></p>
<p><a href="https://software.nfu.edu.tw/files/AUTODESK%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8.pdf">AutoDesk Inventor 安裝教學</a></p>
<p>Learn Autodesk Inventor 2018 Basics</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-3225-5">https://link.springer.com/book/10.1007/978-1-4842-3225-5</a></p><h3>NX</h3>
<p>請直接使用電腦輔助設計室中的 NX12 套件.</p>
<p><a href="https://docs.plm.automation.siemens.com/docs/nx/12/en_US/release_notes.pdf">https://docs.plm.automation.siemens.com/docs/nx/12/en_US/release_notes.pdf</a> </p>
<p><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/index.html">https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/index.html</a> </p>
<p><br/>NX 12 for advanced users - in a nutshell (德文版)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-658-24773-7">https://link.springer.com/book/10.1007/978-3-658-24773-7</a></p>
<p><a href="https://drive.google.com/file/d/1r_CAvvMjmvprksCgglYU72SbD9MxMb3h/view?usp=sharing">NX 12 for Engineering Design.pdf</a> (@gm users only)</p>
<p><a href="/downloads/SNAP_Getting_Started_v12.pdf">SNAP_Getting_Started_v12.pdf</a></p>
<p><a href="https://www.nxjournaling.com/forum">https://www.nxjournaling.com/forum</a> </p>
<h4>NXOpen</h4>
<p></p>
<p style="padding-left: 30px;">NX12 支援 Python 3.6.1</p>
<p style="padding-left: 30px;">將 Journal 操作錄製由內建 vb 轉為 python:</p>
<p style="padding-left: 60px;">Menu -&gt; Preferences -&gt; User Interface -&gt; Tools -&gt; Journal </p>
<p style="padding-left: 60px;">Journal Language 選擇 Python</p>
<p style="padding-left: 30px;">Menu -&gt; Tools -&gt; Journal -&gt; Record</p>
<p style="padding-left: 30px;">Menu -&gt; Tools -&gt; Journal -&gt; Play</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># hello_nxopen.py
# 導入 NXOpen
import NXOpen

def main():
    # 取得目前開啟的工作階段
    theSession = NXOpen.Session.GetSession()
    # 建立 ListingWindow
    listWin= theSession.ListingWindow
    # 開啟所建立的 ListingWindow
    listWin.Open()
    # 在 ListingWindow 中寫入字串
    listWin.WriteLine("Hello, NXOpen")

if __name__ == "__main__":
    main()</pre>
<p style="padding-left: 30px;">Pass variable through run_journal.bat</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sys
import NXOpen
import NXOpen.UF


def main(arg):
    """Takes a string argument, and shows it in a message box."""
    uf_session = NXOpen.UF.UFSession.GetUFSession()
    message = "The following arguments were passed to my journal:" + arg
    uf_session.Ui.DisplayMessage(message, 1)
if __name__ == '__main__':

    main(sys.argv[1]) </pre>
<p style="padding-left: 30px;"><a href="/downloads/NXOpen_Getting_Started_2017.pdf">NXOpen_Getting_Started_2017.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/NXOpen_Getting_Started_2019.pdf">NXOpen_Getting_Started_2019.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Debug_NXOpen_Python_with_NX12_and_Eclipse_PyDev.pdf">Debug_NXOpen_Python_with_NX12_and_Eclipse_PyDev.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Web Based Customized Design.pdf">Web Based Customized Design.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Simcenter_NXOpen_python_ex.7z">Simcenter_NXOpen_python_ex.7z</a></p>
<p style="padding-left: 30px;"><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/index.html">https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/index.html</a></p>
<p style="padding-left: 30px;"><a href="http://nxjournaling.com/">http://nxjournaling.com/</a></p>
<p style="padding-left: 30px;"><a href="https://www.google.com/search?q=site%3Ahttps%3A%2F%2Fwww.eng-tips.com%2F+nxopen+python">eng-tips.com about NXOpen and Python</a></p>
<p style="padding-left: 30px;">run_journal 指令可以直接執行外部的 NXOpen Python Journal 程式</p>
<p style="padding-left: 60px;">NX Open for Python batch programs are standalone Python journals that you can run from the operating system, outside of NX. batch applications in NX Open Python are Python journal files.</p>
<p style="padding-left: 60px;"><br/>Running a batch application</p>
<p style="padding-left: 60px;">An NX Open journal file can be replayed directly from a command line using the run_journal application.</p>
<p style="padding-left: 60px;"><br/>run_journal application</p>
<p style="padding-left: 60px;">The run_journal application is a standalone executable that runs NX Open Python journals in the correct environment, which allows it to pick up Python extension modules from the NX installation when they are not in the same directory as the journal file itself.</p>
<p style="padding-left: 60px;">An example of the command:</p>
<p style="padding-left: 90px;">run_journal &lt;journal file&gt; &lt;arguments&gt;</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/UCf8RG-st34" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-5c1hRNXSco" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZMR8yDGrx_4" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/C1jQc4Pjb4c" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/jgewt4VixvA" width="560"></iframe></p>
<h4>環境變數</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
set USERPROFILE=%Disk%:\home

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\Python36\DLLs;%Disk%:\Python36\Lib;%Disk%:\Python36\Lib\site-packages;C:\nx12_portable\data\nx12\NXBIN\Python;
set PYTHONHOME=%Disk%:\Python36

REM for putty
set GIT_SSH=%Disk%:\putty\plink.exe

REM 設定跟 Python 有關的命令搜尋路徑
set path_python=%Disk%:\Python36;%Disk%:\Python36\Scripts;
REM for portable git
set path_git=%Disk%:\Portablegit\bin;

path=%Disk%:;%path_python%;%path_git%;

REM #####################################
REM for NX 12.0.2
REM #####################################

REM set UGII_BASE_DIR=C:\Siemens\NX12.0
set UGII_BASE_DIR=C:\nx12_portable\data\nx12
set TMP_DIR=%Disk%:\tmp
REM set NX_CUSTOM_USER_SETTINGS_LOCATION=2
REM set UGII_ROUTING_KIT_UNITS=metric
set UGII_USER_PROFILE_DIR=%Disk%:\home
set START_DIR=%TMP_DIR%
set UGII_TMP_DIR=%TMP_DIR%
REM set NX_CUSTOM_VERSION=NX120 Revision C
REM ugii_env.dat
REM set UGII_ENV_FILE=%NX_CUSTOM_LIB%\%NX_NUMBER%env.dat

set UGII_USER_DIR=%Disk%:\tmp
set UGII_GROUP_DIR=%Disk%:\tmp
set UGII_SITE_DIR=%Disk%:\tmp

set UGII_BASE_DIR_CUSTOM=%UGII_BASE_DIR%
set SPLM_LICENSE_SERVER=28000@192.168.56.2
set UGII_LANG=english
REM root directory is important for command startup
set UGII_ROOT_DIR=%UGII_BASE_DIR%\ugii

REM for NXOpen
set UGII_LIB_DIR=%UGII_BASE_DIR%\ugii
set UGII_PYTHON_HOME=%Disk%:\Python36;C:\nx12_portable\data\nx12\NXBIN\Python;
set UGII_PYTHON_DLL=python36.dll
set UGII_PYTHON_LIBRARY_DIR=%PYTHONHOME%
set UGII_PYTHONPATH=%UGII_PYTHON_HOME%;%Disk%:\Python36\DLLs;%Disk%:\Python36\Lib;%Disk%:\Python36\libs;%Disk%:\Python36\Lib\site-packages;%UGII_BASE_DIR%\NXBIN\python;
set TCL_LIBRARY=%UGII_PYTHON_HOME%\tcl\tcl8.6


set UGS_LICENSE_BUNDLE=ACD11,ACD10
REM set NX_BUNDLES=ACD11,ACD10
set UGII_TEMPLATE_DIR=%UGII_ROOT_DIR%\templates
set ugpath=%UGII_BASE_DIR%\nxbin;%UGII_BASE_DIR%\ugii
REM set UGII_JAVA_HOME=C:\Siemens\jre1.8.0_211
REM set UGII_JVM_LIBRARY_DIR=C:\Siemens\jre1.8.0_211\bin\server
REM set CLASSPATH=C:\Siemens\jre1.8.0_211\lib;C:\Siemens\NX12.0\NXBIN

REM add ugpath into path
path=%ugpath%;%path%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wScite\SciTE.exe
start /MIN %Disk%:\wScite\SciTE.exe

start %UGII_BASE_DIR%\ugii\ugraf.exe -nx

Exit</pre>
<h4>NXOpen Python Remote</h4>
<p style="padding-left: 30px;"><a href="https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/NXOpen.RemoteUtilities.html">https://docs.plm.automation.siemens.com/data_services/resources/nx/12/nx_api/custom/en_US/nxopen_python_ref/NXOpen.RemoteUtilities.html</a></p>
<p style="padding-left: 30px;">.Net 相關範例: Y:\NX12\UGOPEN\SampleNXOpenApplications\.NET\RemotingExample</p>
<p>File -&gt; Preferences -&gt; User Interface -&gt; Tools - &gt; Journal 可以將 Journal Language 設為 Python.</p>
<p>Menu -&gt; Tools -&gt; Journal 可以選擇錄製 Journal File.</p>
<p>利用 Menu -&gt; Tools -&gt; Journal 可以選擇 play 所錄製的 .py Journal File, 點選 Play 後, 選擇所要執行的 .py Journal 檔案後, 按下 Run 執行.</p>
<p>利用  NXOpen API Python 程式建立 Cube:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># NX 12.0.2.9

#
import math
import NXOpen
import NXOpen.Annotations
import NXOpen.Features
import NXOpen.GeometricUtilities
import NXOpen.Preferences

def main() : 

    theUI = NXOpen.UI.GetUI()
    theMsgBox = theUI.NXMessageBox
    theMsgBox.Show("簡要說明", NXOpen.NXMessageBox.DialogType.Information,"以下流程將建立一個簡單的長方體")

    theSession  = NXOpen.Session.GetSession()

    # 以下利用 ListingWindow 列出相關資訊, 可用於程式除錯
    theLw = theSession.ListingWindow
    # 開啟 console 將資料印出
    theLw.Open()
    theLw.WriteLine("theSession 變數目前為: "+str(theSession))

    workPart = theSession.Parts.Work
    # ----------------------------------------------
    #   Menu: Insert-&gt;Sketch...
    # ----------------------------------------------
    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    sketchInPlaceBuilder1 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)
    
    origin1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal1 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane1 = workPart.Planes.CreatePlane(origin1, normal1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    sketchInPlaceBuilder1.PlaneReference = plane1
    
    unit1 = workPart.UnitCollection.FindObject("MilliMeter")
    
    sketchAlongPathBuilder1 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)

    datumAxis1 = workPart.Datums.FindObject("DATUM_CSYS(0) X axis")
    direction1 = workPart.Directions.CreateDirection(datumAxis1, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    datumPlane1 = workPart.Datums.FindObject("DATUM_CSYS(0) XY plane")
    datumCsys1 = workPart.Features.FindObject("DATUM_CSYS(0)")
    point1 = datumCsys1.FindObject("POINT 1")
    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(datumPlane1, direction1, point1, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
    
    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    sketchInPlaceBuilder1.Csystem = cartesianCoordinateSystem1

    origin3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal3 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane3 = workPart.Planes.CreatePlane(origin3, normal3, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    plane3.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)
    
    geom2 = [NXOpen.NXObject.Null] * 1 
    geom2[0] = datumPlane1
    plane3.SetGeometry(geom2)
    
    plane3.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)
    
    plane3.Evaluate()

    # ----------------------------------------------
    #   Menu: Insert-&gt;Sketch Curve-&gt;Rectangle...
    # ----------------------------------------------

    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")

    nXObject1 = sketchInPlaceBuilder1.Commit()
    
    sketch1 = nXObject1
    feature1 = sketch1.Feature
    
    sketch1.Activate(NXOpen.Sketch.ViewReorient.TrueValue)
    
    theSession.DeleteUndoMark(markId3, None)
    
    theSession.SetUndoMarkName(markId1, "Create Sketch")
    
    sketchInPlaceBuilder1.Destroy()
    
    sketchAlongPathBuilder1.Destroy()
        
    plane3.DestroyPlane()
    
    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")
    
    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")
    
    theSession.SetUndoMarkVisibility(markId6, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)
    
    # ----------------------------------------------
    # Creating rectangle using By 2 Points method 
    # ----------------------------------------------
    startPoint1 = NXOpen.Point3d(-52.0, 42.0, 0.0)
    endPoint1 = NXOpen.Point3d(44.0, 42.0, 0.0)
    line1 = workPart.Curves.CreateLine(startPoint1, endPoint1)
    
    startPoint2 = NXOpen.Point3d(44.0, 42.0, 0.0)
    endPoint2 = NXOpen.Point3d(44.0, -42.0, 0.0)
    line2 = workPart.Curves.CreateLine(startPoint2, endPoint2)
    
    startPoint3 = NXOpen.Point3d(44.0, -42.0, 0.0)
    endPoint3 = NXOpen.Point3d(-52.0, -42.0, 0.0)
    line3 = workPart.Curves.CreateLine(startPoint3, endPoint3)
    
    startPoint4 = NXOpen.Point3d(-52.0, -42.0, 0.0)
    endPoint4 = NXOpen.Point3d(-52.0, 42.0, 0.0)
    line4 = workPart.Curves.CreateLine(startPoint4, endPoint4)
    
    theSession.ActiveSketch.AddGeometry(line1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
    
    theSession.ActiveSketch.AddGeometry(line2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
    
    theSession.ActiveSketch.AddGeometry(line3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
    
    theSession.ActiveSketch.AddGeometry(line4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)

    theSession.ActiveSketch.Update()
    
    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True
    
    geoms1 = [NXOpen.SmartObject.Null] * 4 
    geoms1[0] = line1
    geoms1[1] = line2
    geoms1[2] = line3
    geoms1[3] = line4
    theSession.ActiveSketch.UpdateConstraintDisplay(geoms1)
    # ----------------------------------------------
    #   Menu: File-&gt;Finish Sketch
    # ----------------------------------------------
    sketch2 = theSession.ActiveSketch
    # ----------------------------------------------
    #   Menu: Insert-&gt;Design Feature-&gt;Extrude...
    # ----------------------------------------------
    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    extrudeBuilder1 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)
    
    section1 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)
    
    extrudeBuilder1.Section = section1
    
    extrudeBuilder1.AllowSelfIntersectingSection(True)
    
    unit2 = extrudeBuilder1.Draft.FrontDraftAngle.Units
  
    features1 = [NXOpen.Features.Feature.Null] * 1 
    sketchFeature1 = feature1
    features1[0] = sketchFeature1
    curveFeatureRule1 = workPart.ScRuleFactory.CreateRuleCurveFeature(features1)
    
    section1.AllowSelfIntersection(True)
    
    rules1 = [None] * 1 
    rules1[0] = curveFeatureRule1
    helpPoint1 = NXOpen.Point3d(-52.0, 18.603986789941445, 3.5527136788005009e-15)
    section1.AddToSection(rules1, line4, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint1, NXOpen.Section.Mode.Create, False)

    direction2 = workPart.Directions.CreateDirection(sketch2, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    extrudeBuilder1.Direction = direction2
    
    extrudeBuilder1.Limits.EndExtend.Value.RightHandSide = "50"

    extrudeBuilder1.ParentFeatureInternal = False
    
    feature2 = extrudeBuilder1.CommitFeature()

    # ----------------------------------------------
    #   Menu: Tools-&gt;Journal-&gt;Stop Recording
    # ----------------------------------------------
    
if __name__ == '__main__':
    main()</pre>
<h4>bounding_box.py</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import NXOpen
import NXOpen.UF

theSession = NXOpen.Session.GetSession()
theLw = theSession.ListingWindow
theUI = NXOpen.UI.GetUI()
theUfSession = NXOpen.UF.UFSession.GetUFSession()

def main(*args): 

    workPart = theSession.Parts.BaseWork

    bodies = workPart.Bodies

    for body in bodies:

        (min_corner, directions, distances) = theUfSession.ModlGeneral.AskBoundingBoxExact(body.Tag, 0)

        theLw.Open()
        theLw.WriteLine("Bounding box for " + body.JournalIdentifier)

        theLw.WriteLine("  Min Corner: ")
        theLw.WriteLine("    X: " + str(min_corner[0]))
        theLw.WriteLine("    Y: " + str(min_corner[1]))
        theLw.WriteLine("    Z: " + str(min_corner[2]))

        theLw.WriteLine("  Direction Vectors: ")
        theLw.WriteLine("    X: (" + str(directions[0][0]) + ", " + str(directions[0][1]) + ", " + str(directions[0][2]) + ")")
        theLw.WriteLine("    Y: (" + str(directions[1][0]) + ", " + str(directions[1][1]) + ", " + str(directions[1][2]) + ")")
        theLw.WriteLine("    Z: (" + str(directions[2][0]) + ", " + str(directions[2][1]) + ", " + str(directions[2][2]) + ")")

        theLw.WriteLine("  Distances: ")
        theLw.WriteLine("    X: " + str(distances[0]))
        theLw.WriteLine("    Y: " + str(distances[1]))
        theLw.WriteLine("    Z: " + str(distances[2]))

        theLw.WriteLine("")

# Main program.

if __name__ == "__main__":
    main()
</pre>
<p>上述 NXOpen Python Journal 程式必須在 NX12 GUI 模式下執行, 若需要直接透過 Non-GUI 的模式執行 NXOpen Python Journal 程式, 則必須提供程式執行對應檔案, 並在執行完成後將結果存檔.</p>
<p>下列程式, 可以在隨身 NX12 程式可執行的環境中, 提供空白的 newPart.prt 檔案, 然後在命令列透過 run_journal create_cube.py, 建立所需的 cube.prt 立方體檔案.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># NX 12.0.2.9
# 提供空檔案 newPart.prt
# 利用 run_journal journal_newpart.py 以 Non-GUI 的模式執行 NX12, 將可直接建立 cube.prt

#
import math
import NXOpen
import NXOpen.Annotations
import NXOpen.Features
import NXOpen.GeometricUtilities
import NXOpen.Preferences
import NXOpen.UF

def main() : 
    
    theUI = NXOpen.UI.GetUI()
    theMsgBox = theUI.NXMessageBox
    theMsgBox.Show("簡要說明", NXOpen.NXMessageBox.DialogType.Information,"以下流程將建立一個簡單的長方體")
    
    theSession  = NXOpen.Session.GetSession()#try to open new part file to edit (different than assemblyFile)
    NXFile = 'C:/python_journal/newPart.prt'
    #use class method to open new session/workPart
    basepart1, partLoadStatus1 = theSession.Parts.OpenBaseDisplay(NXFile)
    partLoadStatus1.Dispose()
    workPart    = theSession.Parts.Work
    displayPart = theSession.Parts.Display

    # 以下利用 ListingWindow 列出相關資訊, 可用於程式除錯
    theLw = theSession.ListingWindow
    # 開啟 console 將資料印出
    theLw.Open()
    theLw.WriteLine("theSession 變數目前為: "+str(theSession))
    
    # 若直接在 NX12 中執行
    #workPart = theSession.Parts.Work
    # ----------------------------------------------
    #   Menu: Insert-&gt;Sketch...
    # ----------------------------------------------
    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    sketchInPlaceBuilder1 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)
    
    origin1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal1 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane1 = workPart.Planes.CreatePlane(origin1, normal1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    sketchInPlaceBuilder1.PlaneReference = plane1
    
    unit1 = workPart.UnitCollection.FindObject("MilliMeter")
    
    sketchAlongPathBuilder1 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)

    datumAxis1 = workPart.Datums.FindObject("DATUM_CSYS(0) X axis")
    direction1 = workPart.Directions.CreateDirection(datumAxis1, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    datumPlane1 = workPart.Datums.FindObject("DATUM_CSYS(0) XY plane")
    datumCsys1 = workPart.Features.FindObject("DATUM_CSYS(0)")
    point1 = datumCsys1.FindObject("POINT 1")
    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(datumPlane1, direction1, point1, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
    
    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    sketchInPlaceBuilder1.Csystem = cartesianCoordinateSystem1

    origin3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal3 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane3 = workPart.Planes.CreatePlane(origin3, normal3, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    plane3.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)
    
    geom2 = [NXOpen.NXObject.Null] * 1 
    geom2[0] = datumPlane1
    plane3.SetGeometry(geom2)
    
    plane3.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)
    
    plane3.Evaluate()

    # ----------------------------------------------
    #   Menu: Insert-&gt;Sketch Curve-&gt;Rectangle...
    # ----------------------------------------------

    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")

    nXObject1 = sketchInPlaceBuilder1.Commit()
    
    sketch1 = nXObject1
    feature1 = sketch1.Feature
    
    sketch1.Activate(NXOpen.Sketch.ViewReorient.TrueValue)
    
    theSession.DeleteUndoMark(markId3, None)
    
    theSession.SetUndoMarkName(markId1, "Create Sketch")
    
    sketchInPlaceBuilder1.Destroy()
    
    sketchAlongPathBuilder1.Destroy()
        
    plane3.DestroyPlane()
    
    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")
    
    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")
    
    theSession.SetUndoMarkVisibility(markId6, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)
    
    # ----------------------------------------------
    # Creating rectangle using By 2 Points method 
    # ----------------------------------------------
    startPoint1 = NXOpen.Point3d(-52.0, 42.0, 0.0)
    endPoint1 = NXOpen.Point3d(44.0, 42.0, 0.0)
    line1 = workPart.Curves.CreateLine(startPoint1, endPoint1)
    
    startPoint2 = NXOpen.Point3d(44.0, 42.0, 0.0)
    endPoint2 = NXOpen.Point3d(44.0, -42.0, 0.0)
    line2 = workPart.Curves.CreateLine(startPoint2, endPoint2)
    
    startPoint3 = NXOpen.Point3d(44.0, -42.0, 0.0)
    endPoint3 = NXOpen.Point3d(-52.0, -42.0, 0.0)
    line3 = workPart.Curves.CreateLine(startPoint3, endPoint3)
    
    startPoint4 = NXOpen.Point3d(-52.0, -42.0, 0.0)
    endPoint4 = NXOpen.Point3d(-52.0, 42.0, 0.0)
    line4 = workPart.Curves.CreateLine(startPoint4, endPoint4)
    
    theSession.ActiveSketch.AddGeometry(line1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
    
    theSession.ActiveSketch.AddGeometry(line2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
    
    theSession.ActiveSketch.AddGeometry(line3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
    
    theSession.ActiveSketch.AddGeometry(line4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)

    theSession.ActiveSketch.Update()
    
    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True
    
    geoms1 = [NXOpen.SmartObject.Null] * 4 
    geoms1[0] = line1
    geoms1[1] = line2
    geoms1[2] = line3
    geoms1[3] = line4
    theSession.ActiveSketch.UpdateConstraintDisplay(geoms1)
    # ----------------------------------------------
    #   Menu: File-&gt;Finish Sketch
    # ----------------------------------------------
    sketch2 = theSession.ActiveSketch
    # ----------------------------------------------
    #   Menu: Insert-&gt;Design Feature-&gt;Extrude...
    # ----------------------------------------------
    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    extrudeBuilder1 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)
    
    section1 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)
    
    extrudeBuilder1.Section = section1
    
    extrudeBuilder1.AllowSelfIntersectingSection(True)
    
    unit2 = extrudeBuilder1.Draft.FrontDraftAngle.Units
  
    features1 = [NXOpen.Features.Feature.Null] * 1 
    sketchFeature1 = feature1
    features1[0] = sketchFeature1
    curveFeatureRule1 = workPart.ScRuleFactory.CreateRuleCurveFeature(features1)
    
    section1.AllowSelfIntersection(True)
    
    rules1 = [None] * 1 
    rules1[0] = curveFeatureRule1
    helpPoint1 = NXOpen.Point3d(-52.0, 18.603986789941445, 3.5527136788005009e-15)
    section1.AddToSection(rules1, line4, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint1, NXOpen.Section.Mode.Create, False)

    direction2 = workPart.Directions.CreateDirection(sketch2, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    extrudeBuilder1.Direction = direction2
    
    extrudeBuilder1.Limits.EndExtend.Value.RightHandSide = "50"

    extrudeBuilder1.ParentFeatureInternal = False
    
    feature2 = extrudeBuilder1.CommitFeature()
    # 將 basepart1 存檔
    newNXFile = 'C:/python_journal/cube.prt'
    basepart1.SaveAs(newNXFile)

    # ----------------------------------------------
    #   Menu: Tools-&gt;Journal-&gt;Stop Recording
    # ----------------------------------------------
    
if __name__ == '__main__':
    main()
</pre>
<p>假如希望利用 <a href="https://mde.tw/cp2019">https://mde.tw/cp2019</a> 中的 Dart 網際或 Flutter 手機程式與伺服器中的 NXOpen Python API 程式互動, 可以利用 Flask 網際程式結合下列 Python API 程式碼, 透過手機介面輸入零組件設計參數, 所完成的零組件則以 STL 或 WRL 格式輸出, 進一步轉入 Webots 執行動態模擬.</p>
<p><a href="http://cd03.kmol.info/NXOpen.UI.html#NXOpen.UI">NXOpen.UI</a></p>
<p><a href="http://cd03.kmol.info/NXOpen.NXMessageBox.html?highlight=messagebox#NXOpen.NXMessageBox">NXMessageBox</a></p>
<p><a href="http://cd03.kmol.info/NXOpen.Session.html?highlight=session#NXOpen.Session">NXOpen.Session</a></p>
<p><a href="http://cd03.kmol.info/NXOpen.Point3d.html?highlight=point3d#NXOpen.Point3d">NXOpen.Point3d</a></p>
<p><a href="http://cd03.kmol.info/NXOpen.Features.FeatureCollection.html?highlight=createextrudebuilder#nxopen-features-featurecollection-createextrudebuilder">CreateExtrudeBuilder</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># NX 12.0.2.9
# 提供空檔案 newPart.prt
# 利用 run_journal journal_newpart.py 以 Non-GUI 的模式執行 NX12, 將可直接建立 cube.prt
 
#
import math
import NXOpen
import NXOpen.Annotations
import NXOpen.Features
import NXOpen.GeometricUtilities
import NXOpen.Preferences
import NXOpen.UF
 
def main() : 
     
    theUI = NXOpen.UI.GetUI()
    theMsgBox = theUI.NXMessageBox
    theMsgBox.Show("簡要說明", NXOpen.NXMessageBox.DialogType.Information,"以下流程將建立一個簡單的長方體")
     
    theSession  = NXOpen.Session.GetSession()#try to open new part file to edit (different than assemblyFile)
    NXFile = 'y:/newPart.prt'
    #use class method to open new session/workPart
    basepart1, partLoadStatus1 = theSession.Parts.OpenBaseDisplay(NXFile)
    partLoadStatus1.Dispose()
    workPart    = theSession.Parts.Work
    displayPart = theSession.Parts.Display
 
    # 以下利用 ListingWindow 列出相關資訊, 可用於程式除錯
    theLw = theSession.ListingWindow
    # 開啟 console 將資料印出
    theLw.Open()
    theLw.WriteLine("theSession 變數目前為: "+str(theSession))
     
    # 若直接在 NX12 中執行
    #workPart = theSession.Parts.Work
    # ----------------------------------------------
    #   Menu: Insert-&gt;Sketch...
    # ----------------------------------------------
    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
     
    sketchInPlaceBuilder1 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)
     
    origin1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal1 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane1 = workPart.Planes.CreatePlane(origin1, normal1, NXOpen.SmartObject.UpdateOption.WithinModeling)
     
    sketchInPlaceBuilder1.PlaneReference = plane1
     
    unit1 = workPart.UnitCollection.FindObject("MilliMeter")
     
    sketchAlongPathBuilder1 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)
 
    datumAxis1 = workPart.Datums.FindObject("DATUM_CSYS(0) X axis")
    direction1 = workPart.Directions.CreateDirection(datumAxis1, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)
     
    datumPlane1 = workPart.Datums.FindObject("DATUM_CSYS(0) XY plane")
    datumCsys1 = workPart.Features.FindObject("DATUM_CSYS(0)")
    point1 = datumCsys1.FindObject("POINT 1")
    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(datumPlane1, direction1, point1, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
     
    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)
     
    sketchInPlaceBuilder1.Csystem = cartesianCoordinateSystem1
 
    origin3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal3 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane3 = workPart.Planes.CreatePlane(origin3, normal3, NXOpen.SmartObject.UpdateOption.WithinModeling)
     
    plane3.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)
     
    geom2 = [NXOpen.NXObject.Null] * 1
    geom2[0] = datumPlane1
    plane3.SetGeometry(geom2)
     
    plane3.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)
     
    plane3.Evaluate()
 
    # ----------------------------------------------
    #   Menu: Insert-&gt;Sketch Curve-&gt;Rectangle...
    # ----------------------------------------------
 
    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")
 
    nXObject1 = sketchInPlaceBuilder1.Commit()
     
    sketch1 = nXObject1
    feature1 = sketch1.Feature
     
    sketch1.Activate(NXOpen.Sketch.ViewReorient.TrueValue)
     
    theSession.DeleteUndoMark(markId3, None)
     
    theSession.SetUndoMarkName(markId1, "Create Sketch")
     
    sketchInPlaceBuilder1.Destroy()
     
    sketchAlongPathBuilder1.Destroy()
         
    plane3.DestroyPlane()
     
    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")
     
    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")
     
    theSession.SetUndoMarkVisibility(markId6, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)
     
    # ----------------------------------------------
    # Creating rectangle using By 2 Points method 
    # ----------------------------------------------
    startPoint1 = NXOpen.Point3d(-52.0, 42.0, 0.0)
    endPoint1 = NXOpen.Point3d(44.0, 42.0, 0.0)
    line1 = workPart.Curves.CreateLine(startPoint1, endPoint1)
     
    startPoint2 = NXOpen.Point3d(44.0, 42.0, 0.0)
    endPoint2 = NXOpen.Point3d(44.0, -42.0, 0.0)
    line2 = workPart.Curves.CreateLine(startPoint2, endPoint2)
     
    startPoint3 = NXOpen.Point3d(44.0, -42.0, 0.0)
    endPoint3 = NXOpen.Point3d(-52.0, -42.0, 0.0)
    line3 = workPart.Curves.CreateLine(startPoint3, endPoint3)
     
    startPoint4 = NXOpen.Point3d(-52.0, -42.0, 0.0)
    endPoint4 = NXOpen.Point3d(-52.0, 42.0, 0.0)
    line4 = workPart.Curves.CreateLine(startPoint4, endPoint4)
     
    theSession.ActiveSketch.AddGeometry(line1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
     
    theSession.ActiveSketch.AddGeometry(line2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
     
    theSession.ActiveSketch.AddGeometry(line3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
     
    theSession.ActiveSketch.AddGeometry(line4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)
 
    theSession.ActiveSketch.Update()
     
    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True
     
    geoms1 = [NXOpen.SmartObject.Null] * 4
    geoms1[0] = line1
    geoms1[1] = line2
    geoms1[2] = line3
    geoms1[3] = line4
    theSession.ActiveSketch.UpdateConstraintDisplay(geoms1)
    # ----------------------------------------------
    #   Menu: File-&gt;Finish Sketch
    # ----------------------------------------------
    sketch2 = theSession.ActiveSketch
    # ----------------------------------------------
    #   Menu: Insert-&gt;Design Feature-&gt;Extrude...
    # ----------------------------------------------
    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
     
    extrudeBuilder1 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)
     
    section1 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)
     
    extrudeBuilder1.Section = section1
     
    extrudeBuilder1.AllowSelfIntersectingSection(True)
     
    unit2 = extrudeBuilder1.Draft.FrontDraftAngle.Units
   
    features1 = [NXOpen.Features.Feature.Null] * 1
    sketchFeature1 = feature1
    features1[0] = sketchFeature1
    curveFeatureRule1 = workPart.ScRuleFactory.CreateRuleCurveFeature(features1)
     
    section1.AllowSelfIntersection(True)
     
    rules1 = [None] * 1
    rules1[0] = curveFeatureRule1
    helpPoint1 = NXOpen.Point3d(-52.0, 18.603986789941445, 3.5527136788005009e-15)
    section1.AddToSection(rules1, line4, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint1, NXOpen.Section.Mode.Create, False)
 
    direction2 = workPart.Directions.CreateDirection(sketch2, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)
     
    extrudeBuilder1.Direction = direction2
     
    extrudeBuilder1.Limits.EndExtend.Value.RightHandSide = "50"
 
    extrudeBuilder1.ParentFeatureInternal = False
     
    feature2 = extrudeBuilder1.CommitFeature()
    # 將 basepart1 存檔
    #newNXFile = 'y:/cube.prt'
    #basepart1.SaveAs(newNXFile)
    # 將零件檔案存為 wrl 格式
    theUFSession = NXOpen.UF.UFSession.GetUFSession()
    UF_STD_OUTPUT_VRML_2 = 8
    theUFSession.Std.CreateVrmlFile("y:/cube.wrl", 1.0, UF_STD_OUTPUT_VRML_2)
    print("已經將零件轉為 wrl 檔案")
    # ----------------------------------------------
    #   Menu: Tools-&gt;Journal-&gt;Stop Recording
    # ----------------------------------------------
     
if __name__ == '__main__':
    main()</pre>
<h4>參考資料</h4>
<p>NXOpen VB 轉為 Python:</p>
<p style="padding-left: 30px;"><a href="https://community.sw.siemens.com/s/question/0D54O000061xRnYSAU/convert-vb-to-python">https://community.sw.siemens.com/s/question/0D54O000061xRnYSAU/convert-vb-to-python</a></p>
<p>NX 與 <a href="https://ultimaker.com/software/ultimaker-cura">Cura</a>: <a href="https://github.com/Ultimaker/cura-siemensnx-plugin">https://github.com/Ultimaker/cura-siemensnx-plugin</a> </p><h2>設計修改</h2>
<p>產品設計在何種情況下需要修改?</p>
<p>由誰修改?</p>
<p>如何修改?</p>
<p>修改後的新舊版本內容如何保存?</p>
<p>如何完整擷取各階段修改前後的版本資料?</p>
<p>存在個人筆記本或電腦上的資料能夠永續保存嗎?</p>
<p style="padding-left: 30px;">寫入藍光碟?</p>
<p style="padding-left: 30px;">每一個版本修改細節如何進行註記?</p>
<p style="padding-left: 30px;">假如涉及修改設計內容的人員多達數十人?數百人?甚至更多?</p>
<p style="padding-left: 30px;"> 某一產品推出後已經銷售一定數量, 若部分零件因瑕疵修改, 需要全數 recall 還是等故障才回廠維修?假如設計變更零件屬於功能提升, 是否新舊零件都需維護一定數量的備品?</p>
<p style="padding-left: 30px;">Onshape 與 SolidWorks 就本質上有何不同?</p>
<p style="padding-left: 60px;">有聽過產品生命週期管理嗎?為何產品需要設定生命週期?</p>
<p style="padding-left: 90px;">某一型的電腦訂出保固五年的意思是什麼?</p>
<p style="padding-left: 120px;">五年內產品一定不會故障?</p>
<p style="padding-left: 120px;">五年內若產品故障, 可以保證修好?一定負責提供所需備料?</p>
<p style="padding-left: 120px;">一台汽柴油車若其生命週期為 20 年, 原廠如何預估各種維修備品的數量?如何定價?</p>
<p style="padding-left: 120px;">聽過 aftermarket spare parts 嗎? <a href="https://www.swag.de/">https://www.swag.de/</a></p>
<p style="padding-left: 120px;"></p>
<p></p><h2>設計分析</h2>
<p><a href="/downloads/2014_Integration_of_Modeling_in_Solidworks_and_MatlabSi.pdf">2014_Integration_of_Modeling_in_Solidworks_and_MatlabSi.pdf</a></p>
<p><a href="/downloads/2014_Virtual plants in machine automation research and development.pdf">2014_Virtual plants in machine automation research and development.pdf</a></p>
<p><a href="https://github.com/mdecourse/half-car">https://github.com/mdecourse/half-car</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/half-car_dynamic-analysis.pdf">half-car_dynamic-analysis.pdf</a></p>
<p><a href="http://sites.science.oregonstate.edu/~landaur/Books/CPbook/">http://sites.science.oregonstate.edu/~landaur/Books/CPbook/</a> </p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1k8Sjp7bDbIDujvtSGP94qorAL2zPPKSQ/view?usp=sharing">Computational Physics with Python.pdf</a> (for @gm users only)</p>
<h4>Issues:</h4>
<p style="padding-left: 30px;">為何需要進行 dynamic analysis?</p>
<p style="padding-left: 30px;">如何進行 dynamic analysis?</p>
<p style="padding-left: 30px;">如何整理 dynamic analysis 結果?</p>
<p style="padding-left: 30px;">如何呈現 dynamic analysis 結果?</p>
<p>電腦輔助設計</p>
<p style="padding-left: 30px;">產品設計只需要奮力畫出最終產品的 3D 零組件即可?各零件的尺寸由誰決定?</p>
<p style="padding-left: 60px;">何謂電腦輔助參數設計?Parametric design?設計為何需要用參數表示零件尺寸?</p>
<p style="padding-left: 60px;">參數設計流程中的參數若其數量高達數百個, 且在設計製造或與客戶溝通過程需要滿足特定約束條件而不斷修改, 此一流程採人工修改好?或者能夠利用計算機程式流程修改?</p>
<p style="padding-left: 30px;">電腦輔助工程分析</p>
<p style="padding-left: 60px;">Apple 設計手機過程需要進行工程分析嗎?</p>
<p style="padding-left: 30px;">電腦輔助製造</p>
<p style="padding-left: 60px;">Apple 為何不自己製造手機?</p><h3>設計模擬</h3>
<p><a href="https://drive.google.com/file/d/1x476TUUI3iUZBD4FE6DSyVXITK1KhtPm/view?usp=sharing">6-axis Robot Simulator download</a> (for @gm user only)</p><h3>Sigmoid</h3>
<p>A sigmoid function is a mathematical function having a characteristic "S"-shaped curve or sigmoid curve. A common example of a sigmoid function is the logistic function defined by the formula:</p>
<p><a href="https://en.wikipedia.org/wiki/Logistic_function">Logistic Function</a>(邏輯函式):</p>
<p>${ \large S(x) = \LARGE \frac{\mathrm{1}} {\mathrm{1} + e^{-x}}} $</p>
<p>${\large \begin{align} \dfrac{d}{dx} S(x) &amp;= \dfrac{d}{dx} \left[ \dfrac{1}{1 + e^{-x}} \right] \\ &amp;= \dfrac{d}{dx} \left( 1 + \mathrm{e}^{-x} \right)^{-1} \\ &amp;= -(1 + e^{-x})^{-2}(-e^{-x}) \\ &amp;= \dfrac{e^{-x}}{\left(1 + e^{-x}\right)^2} \\ &amp;= \dfrac{1}{1 + e^{-x}\ } \cdot \dfrac{e^{-x}}{1 + e^{-x}} \\ &amp;= \dfrac{1}{1 + e^{-x}\ } \cdot \dfrac{(1 + e^{-x}) - 1}{1 + e^{-x}} \\ &amp;= \dfrac{1}{1 + e^{-x}\ } \cdot \left( \dfrac{1 + e^{-x}}{1 + e^{-x}} - \dfrac{1}{1 + e^{-x}} \right) \\ &amp;= \dfrac{1}{1 + e^{-x}\ } \cdot \left( 1 - \dfrac{1}{1 + e^{-x}} \right) \\ &amp;= S(x) \cdot (1 - S(x)) \end{align}}$</p>
<p>另外一種對 Logistic function 微分的推導法:<br/> 因為 ${\Large f(x)=\dfrac{1}{S(x)} = 1+e^{-x} }$ <br/> 先對左邊的表示式微分可以得到:<br/> ${\Large f'(x) = \frac{d}{dx} \biggl( \frac{1}{S(x)} \biggr) = -\frac{S'(x)}{S(x)^2} }$ <br/> 接著再對右邊的表示式微分可以得到: <br/> ${\Large f'(x) = \frac{d}{dx} \bigl( 1+e^{-x} \bigr) = -e^{-x} = 1-f(x) = 1 - \frac{1}{S(x)} = \frac{S(x)-1}{S(x)} }$<br/>最後再將兩個式子合併整理一下, 就可以得到:</p>
<p>${\large S'(x) = \dfrac{d}{dx} S(x) = S(x) \cdot (1 - S(x))}$</p>
<p>假如使用 sympy 以符號式運算求 Logistic function 的微分式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sympy

x = sympy.Symbol('x')

def f(x):
    return 1/(1+sympy.exp(-x))

def d(x):
    return sympy.diff(f(x), x)

print(d(x))

# d(x) = exp(-x)/(1 + exp(-x))**2</pre>
<p>已知從<a href="https://gist.github.com/Will-777/ad278c345639d24efb9d4cd275addbd2">這裡</a>可以利用 Python 加上 Matplotlib 畫出 Logistic function, 程式如下:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#import section
from matplotlib import pylab
import pylab as plt
import numpy as np

#sigmoid = lambda x: 1 / (1 + np.exp(-x))
def sigmoid(x):
    return (1 / (1 + np.exp(-x)))

# generate an Array with value ???
# linespace generate an array from start and stop value
# with requested number of elements. Example 10 elements or 100 elements.
# 
x = plt.linspace(-10,10,10)
y = plt.linspace(-10,10,100)

# prepare the plot, associate the color r(ed) or b(lue) and the label 
plt.plot(x, sigmoid(x), 'r', label='linspace(-10,10,10)')
plt.plot(y, sigmoid(y), 'b', label='linspace(-10,10,100)')

# Draw the grid line in background.
plt.grid()

# Title &amp; Subtitle
plt.title('Sigmoid Function')
plt.suptitle('Sigmoid')

# place the legen boc in bottom right of the graph
plt.legend(loc='lower right')

# write the Sigmoid formula
plt.text(4, 0.8, r'$\sigma(x)=\frac{1}{1+e^{-x}}$', fontsize=15)

#resize the X and Y axes
plt.gca().xaxis.set_major_locator(plt.MultipleLocator(1))
plt.gca().yaxis.set_major_locator(plt.MultipleLocator(0.1))
 

# plt.plot(x)
plt.xlabel('X Axis')
plt.ylabel('Y Axis')

# create the graph
plt.show()</pre>
<p><img alt="" height="340" src="/images/sigmoid_logical_function_plot.png" width="400"/></p>
<p>利用 matplotlib 畫出上述手動推導與 Sympy 推導的 Logistic 函式與微分式圖:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import matplotlib.pyplot as plt
import numpy as np

def sigmoid(x):
    s=1/(1+np.exp(-x))
    #ds=s*(1-s)  
    ds = np.exp(-x)/(1 + np.exp(-x))**2
    return s,ds

x=np.arange(-6,6,0.01)

plt.plot(x,sigmoid(x)[0], color="#307EC7", linewidth=3, label="sigmoid")
plt.plot(x,sigmoid(x)[1], color="#9621E2", linewidth=3, label="derivative")
plt.legend(loc="center right", frameon=False)
plt.show()</pre>
<p><img alt="" height="340" src="/images/logical_function_and_derivative.png" width="400"/></p>
<p>以下可以直接利用 Javascript 或 <a href="https://brython.info/">Brython</a> 以 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">Html5 Canvas</a> 直接在網頁中繪出 Logistic 函式圖?</p>
<p><!-- 啟用 LaTeX equations 編輯 -->
<script>
MathJax = {
    tex: {inlineMath: [['$', '$']]}
  };
</script>
<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>
</p>
<p><a href="https://math.stackexchange.com/questions/78575/derivative-of-sigmoid-function-sigma-x-frac11e-x">參考資料</a></p>
<p style="padding-left: 30px;"><a href="http://matt.might.net/articles/rendering-mathematical-functions-in-javascript-with-canvas-html/">http://matt.might.net/articles/rendering-mathematical-functions-in-javascript-with-canvas-html/</a> </p>
<p style="padding-left: 30px;"><a href="https://eloquentjavascript.net/17_canvas.html">https://eloquentjavascript.net/17_canvas.html</a> </p>
<p style="padding-left: 30px;"><a href="https://www.datasciencearth.com/en/symbolic-mathematics-operations-with-sympy/">https://www.datasciencearth.com/en/symbolic-mathematics-operations-with-sympy/</a> </p><h2>設計最佳化</h2>
<p><a href="/downloads/2016_Bayesian Optimization with a Neural Network Kernel.pdf">2016_Bayesian Optimization with a Neural Network Kernel.pdf</a></p>
<p><a href="https://help.solidworks.com/2018/English/SolidWorks/sldworks/c_Using_Optimization_Module.htm">https://help.solidworks.com/2018/English/SolidWorks/sldworks/c_Using_Optimization_Module.htm</a> </p>
<p>1 Stochastic Algorithms</p>
<p>1.1 Overview<br/>1.2 Random Search<br/>1.3 Adaptive Random Search<br/>1.4 Stochastic Hill Climbing<br/>1.5 Iterated Local Search<br/>1.6 Guided Local Search<br/>1.7 Variable Neighborhood Search<br/>1.8 Greedy Randomized Adaptive Search<br/>1.9 Scatter Search<br/>1.10 Tabu Search<br/>1.11 Reactive Tabu Search</p>
<p>2 Evolutionary Algorithms</p>
<p>2.1 Overview<br/>2.2 Genetic Algorithm<br/>2.3 Genetic Programming<br/>2.4 Evolution Strategies<br/>2.5 Diﬀerential Evolution<br/>2.6 Evolutionary Programming<br/>2.7 Grammatical Evolution<br/>2.8 Gene Expression Programming<br/>2.9 Learning Classiﬁer System<br/>2.10 Non-dominated Sorting Genetic Algorithm<br/>2.11 Strength Pareto Evolutionary Algorithm</p>
<p>3 Physical Algorithms</p>
<p>3.1 Overview<br/>3.2 Simulated Annealing<br/>3.3 Extremal Optimization<br/>3.4 Harmony Search<br/>3.5 Cultural Algorithm<br/>3.6 Memetic Algorithm</p>
<p>4 Probabilistic Algorithms</p>
<p>4.1 Overview<br/>4.2 Population-Based Incremental Learning<br/>4.3 Univariate Marginal Distribution Algorithm<br/>4.4 Compact Genetic Algorithm<br/>4.5 Bayesian Optimization Algorithm<br/>4.6 Cross-Entropy Method</p>
<p>5 Swarm Algorithms</p>
<p>5.1 Overview<br/>5.2 Particle Swarm Optimization<br/>5.3 Ant System<br/>5.4 Ant Colony System<br/>5.5 Bees Algorithm<br/>5.6 Bacterial Foraging Optimization Algorithm</p>
<p>6 Immune Algorithms</p>
<p>6.1 Overview<br/>6.2 Clonal Selection Algorithm<br/>6.3 Negative Selection Algorithm <br/>6.4 Artiﬁcial Immune Recognition System<br/>6.5 Immune Network Algorithm<br/>6.6 Dendritic Cell Algorithm</p>
<p>7 Neural Algorithms</p>
<p>7.1 Overview<br/>7.2 Perceptron<br/>7.3 Back-propagation<br/>7.4 Hopﬁeld Network<br/>7.5 Learning Vector Quantization<br/>7.6 Self-Organizing Map</p>
<p><a href="http://lancet.mit.edu/mbwall/presentations/IntroToGAs/index.html">Introduction to Genetic Algorithms</a></p>
<p>This is an introduction to genetic algorithm methods for optimization. Genetic algorithms were formally introduced in the United States in the 1970s by John Holland at University of Michigan. The continuing price/performance improvements of computational systems has made them attractive for some types of optimization. In particular, genetic algorithms work very well on mixed (continuous and discrete), combinatorial problems. They are less susceptible to getting 'stuck' at local optima than gradient search methods. But they tend to be computationally expensive.<br/>To use a genetic algorithm, you must represent a solution to your problem as a genome (or chromosome). The genetic algorithm then creates a population of solutions and applies genetic operators such as mutation and crossover to evolve the solutions in order to find the best one(s).</p>
<p>This presentation outlines some of the basics of genetic algorithms. The three most important aspects of using genetic algorithms are: (1) definition of the objective function, (2) definition and implementation of the genetic representation, and (3) definition and implementation of the genetic operators. Once these three have been defined, the generic genetic algorithm should work fairly well. Beyond that you can try many different variations to improve performance, find multiple optima (species - if they exist), or parallelize the algorithms.</p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S001.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S002.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S003.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S004.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S005.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S006.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S007.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S008.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S009.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S010.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S011.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S012.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S013.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S014.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S015.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S016.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S017.gif" width="500"/></p>
<p><img 375="" alt=" height=" class="add_border" src="/images/S018.gif" width="500"/></p>
<p>Examples:</p>
<p style="padding-left: 30px;"><a href="https://www.linkedin.com/pulse/genetic-algorithm-implementation-python-ahmed-gad">https://www.linkedin.com/pulse/genetic-algorithm-implementation-python-ahmed-gad</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/ahmedfgad/GeneticAlgorithmPython">https://github.com/ahmedfgad/GeneticAlgorithmPython</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/framp/timetabling-solver">https://github.com/framp/timetabling-solver</a> </p>
<p>ga.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import numpy

def cal_pop_fitness(equation_inputs, pop):
    # Calculating the fitness value of each solution in the current population.
    # The fitness function calulates the sum of products between each input and its corresponding weight.
    fitness = numpy.sum(pop*equation_inputs, axis=1)
    return fitness

def select_mating_pool(pop, fitness, num_parents):
    # Selecting the best individuals in the current generation as parents for producing the offspring of the next generation.
    parents = numpy.empty((num_parents, pop.shape[1]))
    for parent_num in range(num_parents):
        max_fitness_idx = numpy.where(fitness == numpy.max(fitness))
        max_fitness_idx = max_fitness_idx[0][0]
        parents[parent_num, :] = pop[max_fitness_idx, :]
        fitness[max_fitness_idx] = -99999999999
    return parents

def crossover(parents, offspring_size):
    offspring = numpy.empty(offspring_size)
    # The point at which crossover takes place between two parents. Usually, it is at the center.
    crossover_point = numpy.uint8(offspring_size[1]/2)

    for k in range(offspring_size[0]):
        # Index of the first parent to mate.
        parent1_idx = k%parents.shape[0]
        # Index of the second parent to mate.
        parent2_idx = (k+1)%parents.shape[0]
        # The new offspring will have its first half of its genes taken from the first parent.
        offspring[k, 0:crossover_point] = parents[parent1_idx, 0:crossover_point]
        # The new offspring will have its second half of its genes taken from the second parent.
        offspring[k, crossover_point:] = parents[parent2_idx, crossover_point:]
    return offspring

def mutation(offspring_crossover, num_mutations=1):
    mutations_counter = numpy.uint8(offspring_crossover.shape[1] / num_mutations)
    # Mutation changes a number of genes as defined by the num_mutations argument. The changes are random.
    for idx in range(offspring_crossover.shape[0]):
        gene_idx = mutations_counter - 1
        for mutation_num in range(num_mutations):
            # The random value to be added to the gene.
            random_value = numpy.random.uniform(-1.0, 1.0, 1)
            offspring_crossover[idx, gene_idx] = offspring_crossover[idx, gene_idx] + random_value
            gene_idx = gene_idx + mutations_counter
    return offspring_crossover</pre>
<p>ga_ex1.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import numpy
import ga

"""
The y=target is to maximize this equation ASAP:
    y = w1x1+w2x2+w3x3+w4x4+w5x5+6wx6
    where (x1,x2,x3,x4,x5,x6)=(4,-2,3.5,5,-11,-4.7)
    What are the best values for the 6 weights w1 to w6?
    We are going to use the genetic algorithm for the best possible values after a number of generations.
"""

# Inputs of the equation.
equation_inputs = [4,-2,3.5,5,-11,-4.7]

# Number of the weights we are looking to optimize.
num_weights = len(equation_inputs)

"""
Genetic algorithm parameters:
    Mating pool size
    Population size
"""
sol_per_pop = 8
num_parents_mating = 4

# Defining the population size.
pop_size = (sol_per_pop,num_weights) # The population will have sol_per_pop chromosome where each chromosome has num_weights genes.
#Creating the initial population.
new_population = numpy.random.uniform(low=-4.0, high=4.0, size=pop_size)
print(new_population)

"""
new_population[0, :] = [2.4,  0.7, 8, -2,   5,   1.1]
new_population[1, :] = [-0.4, 2.7, 5, -1,   7,   0.1]
new_population[2, :] = [-1,   2,   2, -3,   2,   0.9]
new_population[3, :] = [4,    7,   12, 6.1, 1.4, -4]
new_population[4, :] = [3.1,  4,   0,  2.4, 4.8,  0]
new_population[5, :] = [-2,   3,   -7, 6,   3,    3]
"""

best_outputs = []
num_generations = 1000
for generation in range(num_generations):
    print("Generation : ", generation)
    # Measuring the fitness of each chromosome in the population.
    fitness = ga.cal_pop_fitness(equation_inputs, new_population)
    print("Fitness")
    print(fitness)

    best_outputs.append(numpy.max(numpy.sum(new_population*equation_inputs, axis=1)))
    # The best result in the current iteration.
    print("Best result : ", numpy.max(numpy.sum(new_population*equation_inputs, axis=1)))
    
    # Selecting the best parents in the population for mating.
    parents = ga.select_mating_pool(new_population, fitness, 
                                      num_parents_mating)
    print("Parents")
    print(parents)

    # Generating next generation using crossover.
    offspring_crossover = ga.crossover(parents,
                                       offspring_size=(pop_size[0]-parents.shape[0], num_weights))
    print("Crossover")
    print(offspring_crossover)

    # Adding some variations to the offspring using mutation.
    offspring_mutation = ga.mutation(offspring_crossover, num_mutations=2)
    print("Mutation")
    print(offspring_mutation)

    # Creating the new population based on the parents and offspring.
    new_population[0:parents.shape[0], :] = parents
    new_population[parents.shape[0]:, :] = offspring_mutation
    
# Getting the best solution after iterating finishing all generations.
#At first, the fitness is calculated for each solution in the final generation.
fitness = ga.cal_pop_fitness(equation_inputs, new_population)
# Then return the index of that solution corresponding to the best fitness.
best_match_idx = numpy.where(fitness == numpy.max(fitness))

print("Best solution : ", new_population[best_match_idx, :])
print("Best solution fitness : ", fitness[best_match_idx])


import matplotlib.pyplot
matplotlib.pyplot.plot(best_outputs)
matplotlib.pyplot.xlabel("Iteration")
matplotlib.pyplot.ylabel("Fitness")
matplotlib.pyplot.show()</pre>
<p>ga_max_ex1.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#! /usr/bin/env python

from pylab import *

#Functions
# Define the x function
def x_function(x):
	#_function = (sin(300)**2)/(1+(x-500)**2)*50
	#_function = sin(x)*5+sin(x/10)*5+sin(x/100)*10
	_function = 8000*x - 0.25*x**2
	return _function


# Convert decimal to a binary string
def den2bin(f):
	bStr = ''
	n = int(f)
	if n &lt; 0: raise
	if n == 0: return '0'
	while n &gt; 0:
		bStr = str(n % 2) + bStr
		n = n &gt;&gt; 1
	return bStr

#Convert decimal to a binary string of desired size of bits 
def d2b(f, b):
	n = int(f)
	base = int(b)
	ret = ""
	for y in range(base-1, -1, -1):
		ret += str((n &gt;&gt; y) &amp; 1)
	return ret


#Invert Chromosome
def invchr(string, position):
	if int(string[position]) == 1:
		
		string = string[:position] + '0' + string[position+1:]
	else:
		string = string[:position] + '1' + string[position+1:]
	return string


#Roulette Wheel
def roulette(values, fitness):
	n_rand = random()*fitness
	sum_fit = 0
	for i in range(len(values)):
		sum_fit += values[i]
		if sum_fit &gt;= n_rand:
			break
	return i	




# Genetic Algorithm Code to find the Maximum of F(X)


#Range of Values
x_max = 32000
x_min = 0

#GA Parameters
# Due my laziness to do the code, the population size must be a even number and the values for x are always integers.
# Feel free to correct it :) 
pop_size = 100
mutation_probability = 0.20
number_of_generations = 10


#Variables &amp; Lists to be used during the code
gen_1_xvalues = []
gen_1_fvalues = []
generations_x = []
generations_f = []
fitness = 0


#Size of the string in bit
x_size = int(len(den2bin(x_max)))


print("Maximum chromosome size of x is", x_size,  "bits, i.e.,", pow(2,x_size), "variables.")


#first population - random values
for i in range(pop_size):
	x_tmp = int(round(randint(x_max-x_min)+x_min))
	gen_1_xvalues.append(x_tmp)

	f_tmp = x_function(x_tmp)
	gen_1_fvalues.append(f_tmp)

	#Create total fitness
	fitness += f_tmp
#print 'gen 1', gen_1_xvalues

#Getting maximum value for initial population
max_f_gen1 = 0
for i in range(pop_size):
		if gen_1_fvalues[i] &gt;= max_f_gen1:
			max_f_gen1 = gen_1_fvalues[i]
			max_x_gen1 = gen_1_xvalues[i]





#Starting GA loop

for i in range(number_of_generations):
	#Reseting list for 2nd generation
	gen_2_xvalues = []
	gen_2_fvalues = []
	selected = []

	#Selecting individuals to reproduce
	for j in range(pop_size):
		ind_sel = roulette(gen_1_fvalues,fitness)
		selected.append(gen_1_xvalues[ind_sel])

	#Crossing the selected members
	for j in range(0, pop_size, 2):
		sel_ind_A = d2b(selected[j],x_size)
		sel_ind_B = d2b(selected[j+1],x_size)
	
	#select point to cross over
		cut_point = randint(1,x_size)
	
	#new individual AB
		ind_AB = sel_ind_A[:cut_point] + sel_ind_B[cut_point:]

	#mutation AB
		ran_mut = random()
		if ran_mut &lt; mutation_probability:
			gene_position = randint(0,x_size)
			ind_mut = invchr(ind_AB, gene_position)
			ind_AB = ind_mut
	
	#new individual BA
		ind_BA = sel_ind_B[:cut_point] + sel_ind_A[cut_point:]		


	#mutation BA
		ran_mut = random()
		if ran_mut &lt; mutation_probability:
			gene_position = randint(0,x_size)
			ind_mut = invchr(ind_BA, gene_position)
			ind_BA = ind_mut

	#Creating Generation 2
		new_AB = int(ind_AB,2)
		gen_2_xvalues.append(new_AB)

		new_f_AB = x_function(new_AB)
		gen_2_fvalues.append(new_f_AB)

		new_BA = int(ind_BA,2)
		gen_2_xvalues.append(new_BA)

		new_f_BA = x_function(new_BA)
		gen_2_fvalues.append(new_f_BA)
	#print 'gen',i+2, gen_2_xvalues


	#Getting maximum value
	max_f_gen2 = 0
	for j in range(pop_size):
		if gen_2_fvalues[j] &gt;= max_f_gen2:
			max_f_gen2 = gen_2_fvalues[j]
			max_x_gen2 = gen_2_xvalues[j]

	#Elitism one individual
	if max_f_gen1 &gt; max_f_gen2:
		max_f_gen2 = max_f_gen1
		max_x_gen2 = max_x_gen1
		gen_2_fvalues[0] = max_f_gen1
		gen_2_xvalues[0] = max_x_gen1
	
	#Transform gen2 into gen1
	gen_1_xvalues = gen_2_xvalues
	gen_1_fvalues = gen_2_fvalues
	max_x_gen1 = max_x_gen2
	max_f_gen1 = max_f_gen2
	generations_x.append(max_x_gen2)
	generations_f.append(max_f_gen2)

	#Creating new fitness
	fitness = 0
	for j in range(pop_size):
		f_tmp = x_function(gen_1_xvalues[j])
		fitness += f_tmp


#Ploting

#Ploting  Function
x = arange(x_min,x_max,0.01)
y = x_function(x)

#figure(1)
plot(x,y)
xlabel('x')
ylabel('F(x)')
title(r'$F(x)$')

#Ploting data for last generation
figure(2)
plot(gen_2_xvalues,gen_2_fvalues, 'bo')
xlabel('x')
ylabel('F(x)')
title(r'Data for last generation')

#Ploting data for maximum values for each generation
figure(3)
plot(range(number_of_generations),generations_f, 'ro')
xlabel('Generations')
ylabel('F(x) Maximum')
title(r'$F(x)$')
show()

	


</pre>
<p><br/>real-coded genetic algorithm solve max volume problem:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import time
import math
  
  
class Chromosome(object):
  
    def __init__(self, n=None):
        self.np = n if n &gt; 0 else 2
        self.f = 0.0
        self.v = [0.0] * n
  
    def cp(self, obj):
        """
        copy all atribute from another chromsome object
        """
        self.np = obj.np
        self.f = obj.f
        self.v = obj.v[:]
  
    def get_v(self, i):
        return self.v[i]
  
    def is_self(self, obj):
        """
        check the object is self?
        """
        return obj is self
  
    def assign(self, obj):
        if not self.is_self(obj):
            self.cp(obj)
  
  
class Genetic(object):
  
    def __init__(self, func, pType, nParm, nPop, pCross, pMute, pWin, bDelta, upper, lower):
        """
        init(function func)
        """
        self.func=func
        self.pType = pType
        self.nParm=nParm
        self.nPop=nPop
        self.pCross=pCross
        self.pMute=pMute
        self.pWin=pWin
        self.bDelta=bDelta
  
        self.chrom = [Chromosome(nParm) for i in range(nPop)]
        self.newChrom = [Chromosome(nParm) for i in range(nPop)]
        self.babyChrom = [Chromosome(nParm) for i in range(3)]
        self.chromElite = [Chromosome(nParm)]
        self.chromBest = [Chromosome(nParm)]
        self.maxLimit = upper[:]
        self.minLimit = lower[:]
  
        self.maxGen = None
        self.gen = None
  
        self.seed = 0.0
        self.iseed = 470211272.0
        self.mask = 2147483647
  
    def check(self, i, v):
        """
        If a variable is out of bound,
        replace it with a random value
        """
        if (v &gt; self.maxLimit[i]) or (v &lt; self.minLimit[i]):
            return self.randVal(self.minLimit[i], self.maxLimit[i])
        return v
  
    def crossOver(self):
        for i in range(0, self.nPop-1, 2):
            # crossover
            if(self.rnd() &lt; self.pCross):
                for s in range(self.nParm):
                    # first baby, half father half mother
                    self.babyChrom[0].v[s] = 0.5 * self.chrom[i].v[s] + 0.5*self.chrom[i+1].v[s];
                    # second baby, three quaters of fater and quater of mother
                    self.babyChrom[1].v[s] = self.check(s, 1.5 * self.chrom[i].v[s] - 0.5*self.chrom[i+1].v[s])
                    # third baby, quater of fater and three quaters of mother
                    self.babyChrom[2].v[s] = self.check(s,-0.5 * self.chrom[i].v[s] + 1.5*self.chrom[i+1].v[s]);
  
                for j in range(3):
                    self.babyChrom[j].f = self.func(self.babyChrom[j].v)
                # maximization
                if self.pType == 1:
                      
                    if self.babyChrom[1].f &gt; self.babyChrom[0].f:
                        self.babyChrom[0], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[0]
  
                    if self.babyChrom[2].f &gt; self.babyChrom[0].f:
                        self.babyChrom[2], self.babyChrom[0] = self.babyChrom[0], self.babyChrom[2]
  
                    if self.babyChrom[2].f &gt; self.babyChrom[1].f:
                        self.babyChrom[2], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[2]
  
                else:
                      
                    if self.babyChrom[1].f &lt; self.babyChrom[0].f:
                        self.babyChrom[0], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[0]
  
                    if self.babyChrom[2].f &lt; self.babyChrom[0].f:
                        self.babyChrom[2], self.babyChrom[0] = self.babyChrom[0], self.babyChrom[2]
  
                    if self.babyChrom[2].f &lt; self.babyChrom[1].f:
                        self.babyChrom[2], self.babyChrom[1] = self.babyChrom[1], self.babyChrom[2]
  
                # replace first two baby to parent, another one will be
                self.chrom[i].assign(self.babyChrom[0])
                self.chrom[i+1].assign(self.babyChrom[1])
  
    def delta(self, y):
        r = float(self.gen) / self.maxGen;
        return y*self.rnd()*math.pow(1.0-r, self.bDelta)
  
    def fitness(self):
        for j in range(self.nPop):
            self.chrom[j].f = self.func(self.chrom[j].v)
  
        self.chromBest[0].assign(self.chrom[0])
  
        for j in range(self.nPop):
            if self.pType == 1:
                if(self.chrom[j].f &gt; self.chromBest[0].f):
                    self.chromBest[0].assign(self.chrom[j])
            else:
                if(self.chrom[j].f &lt; self.chromBest[0].f):
                    self.chromBest[0].assign(self.chrom[j])
        if self.pType == 1:
            if(self.chromBest[0].f &gt; self.chromElite[0].f):
                self.chromElite[0].assign(self.chromBest[0])
        else:
            if(self.chromBest[0].f &lt; self.chromElite[0].f):
                self.chromElite[0].assign(self.chromBest[0])
  
    def initialPop(self):
        for j in range(self.nPop):
            for i in range(self.nParm):
                self.chrom[j].v[i] = self.randVal(self.minLimit[i], self.maxLimit[i])
  
    def mutate(self):
        for i in range(self.nPop):
            if self.rnd() &lt; self.pMute:
                s = self.random(self.nParm)
                if (self.random(2) == 0):
                    self.chrom[i].v[s] += self.delta(self.maxLimit[s]-self.chrom[i].v[s])
                else:
                    self.chrom[i].v[s] -= self.delta(self.chrom[i].v[s]-self.minLimit[s])
  
    def report(self):
        if self.gen == 0:
            print("Genetik results - Initial population")
        elif self.gen == self.maxGen:
            print("Final Genetik results at", self.gen, "generations")
        else:
            print("Genetik results after", self.gen, "generations")
  
        print("Function : %.6f" % (self.chromElite[0].f))
        for i, p in enumerate(self.chromElite[0].v):
            print("Var", i+1, ":", p)
  
    def select(self):
        """
        roulette wheel selection
        """
        for i in range(self.nPop):
            j = self.random(self.nPop)
            k = self.random(self.nPop)
            self.newChrom[i].assign(self.chrom[j])
            if self.pType == 1:
                if(self.chrom[k].f &gt; self.chrom[j].f) and (self.rnd() &gt; self.pWin):
                    self.newChrom[i].assign(self.chrom[k])
            else:
                if(self.chrom[k].f &lt; self.chrom[j].f) and (self.rnd() &lt; self.pWin):
                    self.newChrom[i].assign(self.chrom[k])
        # in this stage, newChrom is select finish
        # now replace origin chrom
        for i in range(self.nPop):
            self.chrom[i].assign(self.newChrom[i])
  
        # select random one chrom to be best chrom, make best chrom still exist
        j = self.random(self.nPop);
        self.chrom[j].assign(self.chromElite[0])
  
    def run(self, mxg, rp):
        """
        // **** Init and run GA for maxGen times
        // **** mxg : maximum generation
        // **** rp  : report cycle, 0 for final report or
        // ****       report each mxg modulo rp
        """
        self.maxGen = mxg
        self.rpt = rp
  
        self.randomize()
        self.initialPop()
        self.chrom[0].f = self.func(self.chrom[0].v)
        self.chromElite[0].assign(self.chrom[0])
  
        self.gen = 0
        self.fitness()
        self.report()
  
        for self.gen in range(1, self.maxGen + 1):
            self.select()
            self.crossOver()
            self.mutate()
            self.fitness()
            if rp != 0:
                if self.gen % self.rpt == 0:
                    self.report()
        self.report()
  
    def newSeed(self):
        if(self.seed == 0.0):
            self.seed=self.iseed
        else:
            self.seed *= 16807.0
            self.seed = math.fmod(self.seed, self.mask)
  
    def rnd(self):
        self.newSeed()
        return self.seed/self.mask
  
    def randomize(self):
        self.seed = time.time()
  
    def random(self, k):
        return int(self.rnd()*k)
  
    def randVal(self, low, high):
        number_types = (int, float)
        if isinstance(low, number_types) and isinstance(high, number_types):
            return self.rnd()*(high-low)+low
        raise ValueError
          
#fittness function (cost function)
def evaluate(designVariablel):
    surface = 80.0
    # if pType is 1, the penality is negative (maximization problem)
    # if pType is 0, the penality is positive (minimization problem)
    penality = -1000
  
    z = (surface-designVariablel[0]*designVariablel[1])/(2.0*(designVariablel[0]\
         +designVariablel[1]))
    volume = designVariablel[0]*designVariablel[1]*z
    
    if(volume &lt;= 0):
        return penality
  
    # box length and width need to be larger than 0
    if(designVariablel[0] &lt;= 0):
        return penality
  
    if(designVariablel[1] &lt;= 0):
        return penality
    #return 1+1/(volume*volume)
    return volume
  
#volume = Genetic(self, func, pType, nParm, nPop, pCross, pMute, pWin, bDelta, upper, lower):
volume = Genetic(evaluate, 1, 2, 1000, 0.95, 0.05, 0.95, 5, [0, 0], [50, 50])
volume.run(1000, 50)</pre>
<p>利用 <a href="https://github.com/rmsolgi/geneticalgorithm">https://github.com/rmsolgi/geneticalgorithm</a> 解相同 max volume 問題:</p>
<p><a href="/downloads/genecit_algorithm_max_volume_ex.7z">genecit_algorithm_max_volume_ex.7z</a><br/><br/><br/> </p><h1>Solvespace</h1>
<p>假如機電產品的零組件能夠直接在網際架構中, 採參數化設計, 並直接將零組件轉為 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 模型, 並且直接在網際環境中進行控制系統設計分析與模擬, 將可提升電腦輔助產品設計效能.</p>
<p style="padding-left: 30px;">網際 Solvespace Demo: <a href="https://files.whitequark.org/SolveSpace/solvespace.html">https://files.whitequark.org/SolveSpace/solvespace.html</a></p>
<p style="padding-left: 30px;">網際 Webots: <a href="https://robotbenchmark.net/">https://robotbenchmark.net/</a></p>
<p style="padding-left: 30px;">目前還沒有網際 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a>, 也無法直接從任何參數式 3D 設計繪圖套件轉存為 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 或 <a href="https://www.cyberbotics.com/">Webots</a> 模擬組件.</p>
<p style="padding-left: 30px;">可不可能直接將 Solvespace 中的零組件轉成 CoppeliaSim 或 Webots 系統中的模型? 需要那些技術?</p>
<p>我們為何需要自行設法建構這些系統或系統中的關鍵工具?</p>
<p>我們為何需要利用雲端系統長期保存自己的學習與設計歷程?</p>
<p>我們為何要用程式方法與最佳化設計提升產品開發流程的效能?</p>
<p>我們為何需要能在任何一台電腦上完成電腦輔助設計工作項目?</p>
<p>我們為何需要使用 SSL 提交推送近端的設計改版內容?</p>
<h4>Geometric Constraint Solver:</h4>
<p style="padding-left: 30px;"><a href="http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/">http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/</a></p>
<p style="padding-left: 30px;"><a href="http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/">http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/protractr">https://github.com/mdecourse/protractr</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/rgov/shape_solver">https://github.com/rgov/shape_solver</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/rgov/shape_solver">https://github.com/rgov/shape_solver</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sketchflat-internals.pdf">sketchflat-internals.pdf</a></p>
<p>Parametric Dimension:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/solvespace-w-var-dimension">https://github.com/mdecourse/solvespace-w-var-dimension</a> </p>
<h4>Reference</h4>
<p style="padding-left: 30px;"><a href="https://github.com/KmolYuan/Pyslvs-UI">https://github.com/KmolYuan/Pyslvs-UI</a></p><h1>Projects</h1>
<p>各班分為四組, 每一組所完成的<a href="https://github.com/CoppeliaRobotics/models">虛擬機電資系統</a>所屬零組件, 必須分別利用 <a href="https://www.onshape.com/">Onshape</a>, <a href="https://blogs.sw.siemens.com/nx-design/">NX</a>12 與 <a href="https://www.solidworks.com/">Solidworks</a> 2017 建立後, 轉檔進入 <a href="https://www.coppeliarobotics.com/">CoppeliaSim </a>虛擬環境中, 並以部署在 <a href="https://www.heroku.com/">Heroku </a>中的網際 <a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">Python Remote API</a> 程式與 <a href="https://flutter.dev/">Flutter </a>手機程式進行控制.</p>
<p>各分組的 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 系統模擬可在電腦輔助設計室中執行.</p>
<h4>技術分組</h4>
<ol>
<li>建立<a href="https://github.com/CoppeliaRobotics/models">機電資系統零組件</a>, 轉為 <a href="https://en.wikipedia.org/wiki/STL_(file_format)">STL</a> 格式後進入 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 虛擬環境</li>
<li>在 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 環境中按照系統運動與動力特性進行組立並模擬</li>
<li> 建立 <a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">Python Remote API </a>近端程式, 用於控制 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 機電零組件</li>
<li>將 <a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">Python Remote API</a> 轉為 <a href="https://flask.palletsprojects.com">Flask</a> 網際程式, 並部署於 <a href="https://www.heroku.com/">Heroku</a></li>
<li>利用 <a href="https://flutter.dev/">Flutter</a> 建立手機 APP, 送出網際訊號與 <a href="https://www.heroku.com/">Heroku</a> 上的 Remote API 互動</li>
<li>各組員利用 <a href="https://www.authorea.com/">Authorea</a> 編寫個人與分組的 pdf 格式期末報告</li>
</ol>
<h4>Reference</h4>
<p style="padding-left: 30px;"><a href="https://github.com/AtsushiSakai/PythonRobotics">https://github.com/AtsushiSakai/PythonRobotics</a></p>
<p style="padding-left: 30px;"><a href="https://mdecp2018.github.io/finalproject-bgx/content/%E9%9B%BB%E8%85%A6%E8%BC%94%E5%8A%A9%E8%A8%AD%E8%A8%88%E8%AD%B0%E9%A1%8C.html">2018 電腦輔助設計實習期末網站</a></p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cadp2018/content/V-rep.html">http://mde.tw/cadp2018/content/V-rep.html</a> </p>
<p style="padding-left: 30px;">鋼球運動系統: <a href="http://lab.kmol.info/2017fall/blog/kmol-2017-fall-cadp-fourbar-three-position-synthesis.html">http://lab.kmol.info/2017fall/blog/kmol-2017-fall-cadp-fourbar-three-position-synthesis.html</a></p>
<p style="padding-left: 30px;"><a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-oaut/3fe7db9f-5803-4dc4-9d14-5425d3f5461f?redirectedfrom=MSDN">Variant Type Constants</a></p><h2>Robot</h2>
<p>Robotic Systems: <a href="http://motion.cs.illinois.edu/RoboticSystems/">http://motion.cs.illinois.edu/RoboticSystems/</a> </p>
<p>Introduction to Robotics: <a href="https://see.stanford.edu/Course/CS223A">https://see.stanford.edu/Course/CS223A</a> </p>
<p>Modern Robotics: <a href="/downloads/Modern_Robotics-v2.pdf">Modern_Robotics-v2.pdf</a></p>
<p style="padding-left: 30px;"><a href="http://hades.mech.northwestern.edu/index.php/Modern_Robotics">http://hades.mech.northwestern.edu/index.php/Modern_Robotics</a> </p>
<p>ABR control library: <a href="https://github.com/mdecourse/abr_control">https://github.com/mdecourse/abr_control</a> </p>
<p style="padding-left: 30px;"><a href="https://studywolf.wordpress.com/2017/07/01/abr-control-0-1-repo-public-release/">https://studywolf.wordpress.com/2017/07/01/abr-control-0-1-repo-public-release/</a></p>
<p style="padding-left: 30px;">ABR: <a href="https://appliedbrainresearch.com/">https://appliedbrainresearch.com/</a>  </p>
<h4>Inverse Kinematics</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/V-REP-Inverse-Kinematics">https://github.com/mdecourse/V-REP-Inverse-Kinematics</a> </p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/JUiSZinyH1c" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Sf8E16EK6BQ" width="560"></iframe></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/hw01_UR5_coppeliaSim">https://github.com/mdecourse/hw01_UR5_coppeliaSim</a> </p>
<p style="padding-left: 30px;"><a href="https://www.haidynmcleod.com/robot-arm-kinematics">https://www.haidynmcleod.com/robot-arm-kinematics</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/inverse_kinematics_solution_of_a_robotic_manipulator_using_python_(two_link).pdf">inverse_kinematics_solution_of_a_robotic_manipulator_using_python_(two_link).pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/inverse_kinematic_analysis_of_robot_manipulators(dissertation_2015).pdf">inverse_kinematic_analysis_of_robot_manipulators(dissertation_2015).pdf</a></p>
<p style="padding-left: 30px;"><a href="https://www.haidynmcleod.com/robot-arm-kinematics">https://www.haidynmcleod.com/robot-arm-kinematics</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/udacity-RoboND-Kinematics">https://github.com/mdecourse/udacity-RoboND-Kinematics</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/mithi/arm-ik">https://github.com/mithi/arm-ik</a> </p>
<p style="padding-left: 30px;"><a href="https://nitishpuri.github.io/posts/robotics/inverse-kinematics-on-kuka-arm-using-ros-and-python/">https://nitishpuri.github.io/posts/robotics/inverse-kinematics-on-kuka-arm-using-ros-and-python/</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/RoboND-Kinematics-Project">https://github.com/mdecourse/RoboND-Kinematics-Project</a> </p>
<h4>Design of Electromechanical Robotic System</h4>
<p style="padding-left: 30px;"><a href="https://ocw.mit.edu/courses/mechanical-engineering/2-017j-design-of-electromechanical-robotic-systems-fall-2009/course-text/">https://ocw.mit.edu/courses/mechanical-engineering/2-017j-design-of-electromechanical-robotic-systems-fall-2009/course-text/</a> </p>
<h4>Robot Simulation</h4>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-030-38897-3">Robot Adventures in Python and C.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/jslee02/awesome-robotics-libraries">https://github.com/jslee02/awesome-robotics-libraries</a> </p>
<h4>Web-based Robot Simulation</h4>
<p style="padding-left: 30px;"><a href="https://robotbenchmark.net/">https://robotbenchmark.net/</a></p>
<h4 style="padding-left: 30px;">Heroku and Web-based CoppeliaSim</h4>
<p style="padding-left: 60px;">Flask program on Heroku as Web-based CoppeliaSim</p>
<p style="padding-left: 60px;">Heroku server use input form to specify local server ip</p>
<p style="padding-left: 60px;">Local Flask use ajax exchanging data with Heroku server</p>
<p style="padding-left: 60px;">Local Flask use localhost to communicate with CoppeliaSim</p>
<h4>Machine Learning</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/good_robot">https://github.com/mdecourse/good_robot</a> </p><h3>Simulator</h3>
<p><a href="https://www.parallemic.org/RoKiSim.html">https://www.parallemic.org/RoKiSim.html</a></p>
<p><a href="https://core.ac.uk/download/pdf/33802005.pdf">https://core.ac.uk/download/pdf/33802005.pdf</a> </p>
<p><a href="https://github.com/mdecourse/scarysim">https://github.com/mdecourse/scarysim</a> </p>
<p><a href="http://www.ijmo.org/vol10/748-MA03.pdf">http://www.ijmo.org/vol10/748-MA03.pdf</a> </p>
<p><a href="https://github.com/mdecourse/qt-stl">https://github.com/mdecourse/qt-stl</a> </p>
<p><a href="https://github.com/mdecourse/ADMeshGUI">https://github.com/mdecourse/ADMeshGUI</a> </p><h3>PyRep</h3>
<p><a href="/downloads/PyRep_bring_V-rep_to_Deep_Robot_Learning.pdf">PyRep_bring_V-rep_to_Deep_Robot_Learning.pdf</a></p>
<p><a href="https://github.com/mdecourse/site-40623128">https://github.com/mdecourse/site-40623128</a></p>
<p><a href="https://github.com/mdecourse/site-40623130">https://github.com/mdecourse/site-40623130</a></p>
<p><a href="https://github.com/mdecourse/site-40623224">https://github.com/mdecourse/site-40623224</a></p>
<p><a href="https://github.com/mdecourse/vrep-volleyball">https://github.com/mdecourse/vrep-volleyball</a></p>
<p><a href="https://github.com/mdecourse/V-REP-YouBot-Demo">https://github.com/mdecourse/V-REP-YouBot-Demo</a></p>
<p><a href="https://github.com/mdecourse/PyRep">https://github.com/mdecourse/PyRep</a></p>
<p><a href="https://github.com/mdecourse/vrep-api-python">https://github.com/mdecourse/vrep-api-python</a></p>
<p><a href="https://github.com/doctorsrn/gym_vrep">https://github.com/doctorsrn/gym_vrep</a></p>
<p><a href="https://github.com/mdecourse/gym-vrep">https://github.com/mdecourse/gym-vrep</a></p>
<p><a href="https://github.com/mdecourse/VREPQuadcopter">https://github.com/mdecourse/VREPQuadcopter</a></p><h2>Web</h2>
<h3>Flutter-Flask</h3>
<p><a href="https://github.com/mdecourse/Flutter-Flask-Login">https://github.com/mdecourse/Flutter-Flask-Login</a></p>
<p>目前的電腦輔助設計流程應該是一個雲端系統, 能夠讓使用者透過多元帳號登入, 並能直接利用瀏覽器, 手機或平板執行產品的協同設計.</p>
<p><a href="https://wcm.kmol.info:8443/">https://wcm.kmol.info:8443/</a> (只允許特定用戶登入) </p>
<p><a href="https://mde.tw/cad2020/downloads/msketch">https://mde.tw/cad2020/downloads/msketch</a> </p>
<p><a href="https://mde.tw/cad2020/downloads/jstlviewer">https://mde.tw/cad2020/downloads/jstlviewer</a> </p>
<p><a href="https://mde.tw/cad2020/downloads/robot-designer">https://mde.tw/cad2020/downloads/robot-designer</a> </p>
<p>以及 <a href="https://onshape.com">https://onshape.com</a> 都是典型的網際機械設計流程範例.</p>
<p>為了培養未來有能力與全球網際協同產品開發整合之人才, 至少必須具備</p>
<ol>
<li>碰到問題能夠自行以英文尋找答案的能力</li>
<li>了解 <a href="https://link.springer.com/book/10.1007/978-3-030-43131-0">Fundamentals of Geometry Construction</a> 背後的數學基本原理</li>
<li>有能力運用網際分散式版次系統管理所開發的純文字檔案 (Github 與 Fossil SCM)</li>
<li>有能力運用計算機程式與網路架構搭建機械設計流程中的工程服務系統 (Python, C/C++, Javascript 與 Flutter)</li>
<li>除了利用 MCAD (Mechanical Computer Aided Design) 建構產品零組件外, 還需要設法透過參數設計與網際應用程式介面修改零組件尺寸與組合方式 (在開源的 <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a> 中搭建 API 程式套件)</li>
<li>具備機電資整合系統的設計概念, 能夠在 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 或 <a href="https://www.cyberbotics.com/">Webots</a> 等模擬系統中進行控制系統設計 (機電資整合系統最佳化工程設計分析)</li>
</ol>
<p></p><h2>Glowscript</h2>
<p><a href="https://www.glowscript.org/">https://www.glowscript.org/</a> </p>
<p><a href="https://github.com/vpython/glowscript">https://github.com/vpython/glowscript</a> </p>
<p><a href="https://github.com/atsepkov/RapydScript">https://github.com/atsepkov/RapydScript</a> </p>
<p><a href="https://bphilhour.trinket.io/physics-through-glowscript-an-introductory-course#/1-introduction-objects-parameters-and-the-3d-environment/welcome-and-introduction">Examples</a></p>
<div class="glowscript" id="glowscript">
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery-ui.custom.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/package/glow.3.0.min.js" type="text/javascript"></script>
<script type="text/javascript">
window.__context = { glowscript_container: $("#glowscript").removeAttr("id") }
async function __main__() { // async wrapper permits use of await outside your own functions

var vector = vec // optional: makes vector a synonym of the fundamental vec
let scene = canvas()
let b = box({color:color.cyan})
async function f(obj) { // needs async because f() contains an await
    let t = clock()
    while (true) {
        await rate(100)
        obj.rotate({angle:0.01, axis:vec(0,1,0)})
         // rotate forever
        //if (clock()-t > 3) break
    }
    return 25
}
let x = await f(b) // needs await (inside async __main__) because f() contains an await
//print(x)
} // end of __main__ wrapper
__main__()
</script>
</div>
<h3>Rapydscript</h3>
<h4>Test embedded RapydScript</h4>
<script src="https://sw.kovidgoyal.net/rapydscript/repl/rapydscript.js"></script>
<script>
var compiler = RapydScript.create_embedded_compiler();
var js = compiler.compile(`
def hello_world():
    sum=0
    for i in range(11):
        sum=sum+i
    print(sum)
    alert("from 1 add to 10 is :" + str(sum))`);
function mySum() {
    document.body.textContent = js;
    eval(js);
    eval('hello_world()');
};
</script>
<p><button onclick="mySum()">Add from 1 to 10</button></p>
<p>Source Codes:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h4&gt;Test embedded RapydScript&lt;/h4&gt;
&lt;script src="https://sw.kovidgoyal.net/rapydscript/repl/rapydscript.js"&gt;&lt;/script&gt;
&lt;script&gt;// &lt;![CDATA[
var compiler = RapydScript.create_embedded_compiler();
var js = compiler.compile(`
def hello_world():
    sum=0
    for i in range(11):
        sum=sum+i
    print(sum)
    alert("from 1 add to 10 is :" + str(sum))`);
function mySum() {
    document.body.textContent = js;
    eval(js);
    eval('hello_world()');
};
// ]]&gt;&lt;/script&gt;
&lt;p&gt;&lt;button onclick="mySum()"&gt;Add from 1 to 10&lt;/button&gt;&lt;/p&gt;</pre>
<p></p>
<h3>Atoms</h3>
<div class="glowscript" id="glowscript">
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery-ui.custom.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/package/glow.3.0.min.js" type="text/javascript"></script>
<script type="text/javascript">
//--><![CDATA[//><!--

// START JAVASCRIPT
;(function() {;
async function __main__() {
"use strict";

var version = ["3.0", "glowscript"];
Array.prototype.toString = function() { return __parsearray(this) };
var scene = canvas();
var vector = vec;
var axes = [vec(1,0,0), vec(0,1,0), vec(0,0,1)]

var k = 1
var m = 1
var spacing = 1.0
var atom_radius = 0.3["*"](spacing)
var L0 = spacing["-"](1.8["*"](atom_radius))
var V0 = pi["*"](pow(0.5["*"](atom_radius),2))["*"](L0) // initial volume of spring
var N = 3
var crystal = makeCrystal(N, atom_radius, spacing, 0.1["*"](spacing)["*"](sqrt(k["/"](m))))
scene.center = 0.5["*"](N["-"](1))["*"](vec(1,1,1))
scene.autoscale = false
var dt = 0.04["*"](2["*"](pi)["*"](sqrt(m["/"](k))))

// Display text below the 3D graphics:
scene.title = "A model of a solid represented as atoms connected by interatomic bonds"

function makeCrystal( N, atom_radius, spacing, momentumRange ) {
    var crystal = { atoms:[], springs:[] }
    var atom
    var x,y,z

    function atomAt(np) {
        if (np.x[">="](0) && np.y[">="](0) && np.z[">="](0) && np.x["<"](N) && np.y["<"](N) && np.z["<"](N))
            return crystal.atoms[np.x["+"](np.y["*"](N))["+"](np.z["*"](N)["*"](N))]
        // Otherwise create an invisible wall and return it
        var w = box()
        w.visible = false  // comment out to see the true model
        w.size = atom_radius["*"](vec(1,1,1))
        w.pos = np["*"](spacing)
        w.momentum = vec(0,0,0)
        return w
    }

    // Create N^3 atoms in a grid
    for(z=0; z["<"](N); z++)
        for(y=0; y["<"](N); y++)
            for(x=0; x["<"](N); x++) {
                atom = sphere()
                atom.pos = vec(x,y,z)["*"](spacing)
                atom.size = 2["*"](atom_radius)["*"](vec(1,1,1))
                atom.color = vec(0,0.58,0.69)
                atom.momentum = momentumRange["*"](vec.random())
                crystal.atoms.push( atom )
            }
    
    // Create a grid of springs linking each atom to the adjacent atoms
    // in each dimension, or to invisible walls where no atom is adjacent
    for(var d=0; d["<"](3); d++)
        for(z=1["-u"](); z["<"](N); z++)
            for(y=1["-u"](); y["<"](N); y++)
                for(x=1["-u"](); x["<"](N); x++) {
                    atom = atomAt(vec(x,y,z))
                    var neighbor = atomAt(vec(x,y,z)["+"](axes[d]))

                    if (atom.visible || neighbor.visible) {
                        var spring = helix()
                        spring.visible = atom.visible && neighbor.visible
                        spring.thickness = 0.05
                        spring.size = vec(spacing,atom_radius,atom_radius)
                        spring.atoms = [ atom, neighbor ]
                        spring.color = vec(1,0.5,0)
                        crystal.springs.push(spring)
                    }
                }
    return crystal
}

while (true) {
    await rate(60)
    for(var a=0; a["<"](crystal.atoms.length); a++) {
        var atom = crystal.atoms[a]
        atom.pos = atom.pos["+"](atom.momentum["/"](m)["*"](dt))
    }
    for(var s=0; s["<"](crystal.springs.length); s++) {
        var spring = crystal.springs[s]
        spring.axis = spring.atoms[1].pos["-"](spring.atoms[0].pos)
        var L = mag(spring.axis)
        spring.axis = spring.axis.norm()
        spring.pos = spring.atoms[0].pos["+"](0.5["*"](atom_radius)["*"](spring.axis))
        var Ls = L["-"](1["*"](atom_radius))
        spring.size.x = Ls
        var Fdt = spring.axis["*"](k["*"](dt)["*"](1["-"](spacing["/"](L))))
        spring.atoms[0].momentum = spring.atoms[0].momentum["+"](Fdt)
        spring.atoms[1].momentum = spring.atoms[1].momentum["-"](Fdt)
    }
}

}
;$(function(){ window.__context = { glowscript_container: $("#glowscript").removeAttr("id") }; __main__() })})()
// END JAVASCRIPT

//--><!
</script>
</div>
<p>Source Codes:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;div class="glowscript" id="glowscript"&gt;
&lt;script type="text/javascript" src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery-ui.custom.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="https://s3.amazonaws.com/glowscript/package/glow.3.0.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;// &lt;![CDATA[
//--&gt;&lt;![CDATA[//&gt;&lt;!--

// START JAVASCRIPT
;(function() {;
async function __main__() {
"use strict";

var version = ["3.0", "glowscript"];
Array.prototype.toString = function() { return __parsearray(this) };
var scene = canvas();
var vector = vec;
var axes = [vec(1,0,0), vec(0,1,0), vec(0,0,1)]

var k = 1
var m = 1
var spacing = 1.0
var atom_radius = 0.3["*"](spacing)
var L0 = spacing["-"](1.8["*"](atom_radius))
var V0 = pi["*"](pow(0.5["*"](atom_radius),2))["*"](L0) // initial volume of spring
var N = 3
var crystal = makeCrystal(N, atom_radius, spacing, 0.1["*"](spacing)["*"](sqrt(k["/"](m))))
scene.center = 0.5["*"](N["-"](1))["*"](vec(1,1,1))
scene.autoscale = false
var dt = 0.04["*"](2["*"](pi)["*"](sqrt(m["/"](k))))

// Display text below the 3D graphics:
scene.title = "A model of a solid represented as atoms connected by interatomic bonds"

function makeCrystal( N, atom_radius, spacing, momentumRange ) {
    var crystal = { atoms:[], springs:[] }
    var atom
    var x,y,z

    function atomAt(np) {
        if (np.x["&gt;="](0) &amp;&amp; np.y["&gt;="](0) &amp;&amp; np.z["&gt;="](0) &amp;&amp; np.x["&lt;"](N) &amp;&amp; np.y["&lt;"](N) &amp;&amp; np.z["&lt;"](N))
            return crystal.atoms[np.x["+"](np.y["*"](N))["+"](np.z["*"](N)["*"](N))]
        // Otherwise create an invisible wall and return it
        var w = box()
        w.visible = false  // comment out to see the true model
        w.size = atom_radius["*"](vec(1,1,1))
        w.pos = np["*"](spacing)
        w.momentum = vec(0,0,0)
        return w
    }

    // Create N^3 atoms in a grid
    for(z=0; z["&lt;"](N); z++)
        for(y=0; y["&lt;"](N); y++)
            for(x=0; x["&lt;"](N); x++) {
                atom = sphere()
                atom.pos = vec(x,y,z)["*"](spacing)
                atom.size = 2["*"](atom_radius)["*"](vec(1,1,1))
                atom.color = vec(0,0.58,0.69)
                atom.momentum = momentumRange["*"](vec.random())
                crystal.atoms.push( atom )
            }
    
    // Create a grid of springs linking each atom to the adjacent atoms
    // in each dimension, or to invisible walls where no atom is adjacent
    for(var d=0; d["&lt;"](3); d++)
        for(z=1["-u"](); z["&lt;"](N); z++)
            for(y=1["-u"](); y["&lt;"](N); y++)
                for(x=1["-u"](); x["&lt;"](N); x++) {
                    atom = atomAt(vec(x,y,z))
                    var neighbor = atomAt(vec(x,y,z)["+"](axes[d]))

                    if (atom.visible || neighbor.visible) {
                        var spring = helix()
                        spring.visible = atom.visible &amp;&amp; neighbor.visible
                        spring.thickness = 0.05
                        spring.size = vec(spacing,atom_radius,atom_radius)
                        spring.atoms = [ atom, neighbor ]
                        spring.color = vec(1,0.5,0)
                        crystal.springs.push(spring)
                    }
                }
    return crystal
}

while (true) {
    await rate(60)
    for(var a=0; a["&lt;"](crystal.atoms.length); a++) {
        var atom = crystal.atoms[a]
        atom.pos = atom.pos["+"](atom.momentum["/"](m)["*"](dt))
    }
    for(var s=0; s["&lt;"](crystal.springs.length); s++) {
        var spring = crystal.springs[s]
        spring.axis = spring.atoms[1].pos["-"](spring.atoms[0].pos)
        var L = mag(spring.axis)
        spring.axis = spring.axis.norm()
        spring.pos = spring.atoms[0].pos["+"](0.5["*"](atom_radius)["*"](spring.axis))
        var Ls = L["-"](1["*"](atom_radius))
        spring.size.x = Ls
        var Fdt = spring.axis["*"](k["*"](dt)["*"](1["-"](spacing["/"](L))))
        spring.atoms[0].momentum = spring.atoms[0].momentum["+"](Fdt)
        spring.atoms[1].momentum = spring.atoms[1].momentum["-"](Fdt)
    }
}

}
;$(function(){ window.__context = { glowscript_container: $("#glowscript").removeAttr("id") }; __main__() })})()
// END JAVASCRIPT

//--&gt;&lt;!
// ]]&gt;&lt;/script&gt;
&lt;/div&gt;</pre>
<p></p>
<h3>Samples</h3>
<div class="glowscript" id="glowscript">
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery-ui.custom.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/package/glow.3.0.min.js" type="text/javascript"></script>
<script type="text/javascript">
//--><![CDATA[//><!--

// START JAVASCRIPT
;(function() {;
async function __main__() {
"use strict";

var version = ["3.0", "glowscript"];
Array.prototype.toString = function() { return __parsearray(this) };
var scene = canvas();
var vector = vec;

scene.title = "A ball bounces in a box"
/*
var s = 'To rotate "camera", drag with right button or Ctrl-drag.<br>'
s=s["+"]("To zoom, drag with middle button or Alt/Option depressed, or use scroll wheel.<br>")
s=s["+"]("  On a two-button mouse, middle is left + right.<br>")
s=s["+"]("To pan left/right and up/down, Shift-drag.<br>")
s=s["+"]("Touch screen: pinch/extend to zoom, swipe or two-finger rotate.<br>")
scene.caption = s
*/
var side = 4.0
var thk = 0.3
var s2 = 2["*"](side)["-"](thk)
var s3 = 2["*"](side)["+"](thk)
var wallR = box ( {pos:vec( side, 0, 0), size:vec(thk,s2,s3),  color : color.red} )
var wallL = box ( {pos:vec(side["-u"](), 0, 0), size:vec(thk,s2,s3),  color : color.red} )
var wallB = box ( {pos:vec(0, side["-u"](), 0), size:vec(s3,thk,s3),  color : color.blue} )
var wallT = box ( {pos:vec(0,  side, 0), size:vec(s3,thk,s3),  color : color.blue} )
var wallBK = box( {pos:vec(0, 0, side["-u"]()), size:vec(s2,s2,thk), color : color.gray(0.7)} )

var ball = sphere ( {color : color.green, size : 0.8["*"](vec(1,1,1))} )
ball.mass = 1.0
ball.p = vec (0.15["-u"](), 0.23["-u"](), 0.27)
attach_trail(ball, {pps:200, retain:100, color:ball.color})

side = side["-"](thk["*"](0.5))["-"](ball.size.x["/"](2))
var dt = 0.3

while ( true) { 
  // The rate statement tells GlowScript to execute the while statements
  // about 200 times per second. The "wait" keyword is necessary to permit
  // periodic updates to the window.
  await rate(200)
  ball.pos = ball.pos["+"](ball.p["/"](ball.mass)["*"](dt))
  if (! (side["-u"]()["<"](ball.pos.x) && ball.pos.x["<"](side))) { 
    ball.p.x = ball.p.x["-u"]()
  }
  if (! (side["-u"]()["<"](ball.pos.y) && ball.pos.y["<"](side))) { 
    ball.p.y = ball.p.y["-u"]()
  }
  if (! (side["-u"]()["<"](ball.pos.z) && ball.pos.z["<"](side))) { 
    ball.p.z = ball.p.z["-u"]()
  }
}

}
;$(function(){ window.__context = { glowscript_container: $("#glowscript").removeAttr("id") }; __main__() })})()
// END JAVASCRIPT
//--><!
</script>
</div>
<p>Source Codes:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;div class="glowscript" id="glowscript"&gt;
&lt;script type="text/javascript" src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery-ui.custom.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="https://s3.amazonaws.com/glowscript/package/glow.3.0.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;

// START JAVASCRIPT
;(function() {;
async function __main__() {
"use strict";

var version = ["3.0", "glowscript"];
Array.prototype.toString = function() { return __parsearray(this) };
var scene = canvas();
var vector = vec;

scene.title = "A ball bounces in a box"

var side = 4.0
var thk = 0.3
var s2 = 2["*"](side)["-"](thk)
var s3 = 2["*"](side)["+"](thk)
var wallR = box ( {pos:vec( side, 0, 0), size:vec(thk,s2,s3),  color : color.red} )
var wallL = box ( {pos:vec(side["-u"](), 0, 0), size:vec(thk,s2,s3),  color : color.red} )
var wallB = box ( {pos:vec(0, side["-u"](), 0), size:vec(s3,thk,s3),  color : color.blue} )
var wallT = box ( {pos:vec(0,  side, 0), size:vec(s3,thk,s3),  color : color.blue} )
var wallBK = box( {pos:vec(0, 0, side["-u"]()), size:vec(s2,s2,thk), color : color.gray(0.7)} )

var ball = sphere ( {color : color.green, size : 0.8["*"](vec(1,1,1))} )
ball.mass = 1.0
ball.p = vec (0.15["-u"](), 0.23["-u"](), 0.27)
attach_trail(ball, {pps:200, retain:100, color:ball.color})

side = side["-"](thk["*"](0.5))["-"](ball.size.x["/"](2))
var dt = 0.3

while ( true) { 
  // The rate statement tells GlowScript to execute the while statements
  // about 200 times per second. The "wait" keyword is necessary to permit
  // periodic updates to the window.
  await rate(200)
  ball.pos = ball.pos["+"](ball.p["/"](ball.mass)["*"](dt))
  if (! (side["-u"]()["&lt;"](ball.pos.x) &amp;&amp; ball.pos.x["&lt;"](side))) { 
    ball.p.x = ball.p.x["-u"]()
  }
  if (! (side["-u"]()["&lt;"](ball.pos.y) &amp;&amp; ball.pos.y["&lt;"](side))) { 
    ball.p.y = ball.p.y["-u"]()
  }
  if (! (side["-u"]()["&lt;"](ball.pos.z) &amp;&amp; ball.pos.z["&lt;"](side))) { 
    ball.p.z = ball.p.z["-u"]()
  }
}

}
;$(function(){ window.__context = { glowscript_container: $("#glowscript").removeAttr("id") }; __main__() })})()
// END JAVASCRIPT
&lt;/script&gt;
&lt;/div&gt;</pre>
<p></p>
<h3>RLearning</h3>
<p>Train a model to balance a pole on a cart using reinforcement learning.</p>
<p>Description</p>
<p>This example illustrates how to use TensorFlow.js to perform simple <a href="https://en.wikipedia.org/wiki/Reinforcement_learning">reinforcement learning</a> (RL). Specifically, it showcases an implementation of the policy-gradient method in TensorFlow.js. This implementation is used to solve the classic <a href="https://en.wikipedia.org/wiki/Inverted_pendulum">cart-pole control problem.</a></p>
<p>Through <span>self play</span> the agent will learn to balance the pole for as many <span>steps</span> as it can.</p>
<p>Instructions</p>
<p></p>
<ul>
<li>Choose a hidden layer size and click "Create Model".</li>
<li>Select training parameters and then click "Train".</li>
<li>Note that while the model is training it periodically saves a copy of itself to local browser storage, this mean you can refresh the page and continue training from the last save point. If at any point you want to start training from scratch, click "Delete stored Model".</li>
<li>Once the model has finished training you can click "Test" to see how many 'steps' the agent can balance the pole for. You can also click 'Stop' to pause the training after the current iteration ends if you want to test the model sooner.</li>
<li>During training and testing a small simulation of the agent behaviour will be rendered.</li>
</ul>
<p>Status</p>
<div><span id="app-status">Standing by.</span></div>
<div>
<p>Initialize Model</p>
<div>
<div>
<div><label>Hidden layer size(s) (e.g.: "256", "32,64"):</label> <input id="hidden-layer-sizes" type="text" value="128"/></div>
<button disabled="disabled" id="create-model">Create model</button></div>
<div>
<div><label>Locally-stored model</label> <input disabled="disabled" id="stored-model-status" readonly="readonly" type="text" value="N/A"/></div>
<button disabled="disabled" id="delete-stored-model">Delete stored model</button></div>
</div>
<p>Training Parameters</p>
<div>
<div><label>Number of iterations:</label> <input id="num-iterations" type="text" value="20"/></div>
<div><label>Games per iteration:</label> <input id="games-per-iteration" type="text" value="20"/></div>
<div><label>Max. steps per game:</label> <input id="max-steps-per-game" type="text" value="500"/></div>
<div><label>Reward discount rate:</label> <input id="discount-rate" type="text" value="0.95"/></div>
<div><label>Learning rate:</label> <input id="learning-rate" type="text" value="0.05"/></div>
<div><label>Render during training:</label> <input id="render-during-training" type="checkbox"/> <span>Uncheck me to speed up training.</span></div>
<div><button disabled="disabled" id="train">Train</button> <button disabled="disabled" id="test">Test</button></div>
</div>
</div>
<p>Training Progress</p>
<div>
<div><label id="train-status">Iteration #:</label> <progress id="train-progress" max="100" value="0"></progress></div>
<div><label id="iteration-status">Game #:</label> <progress id="iteration-progress" max="100" value="0"></progress></div>
<div><label>Training speed:</label> <span id="train-speed"></span></div>
<div id="steps-container"></div>
</div>
<p>Simulation</p>
<div><canvas height="150px" id="cart-pole-canvas" width="500px"></canvas></div>
<script type="text/javascript">
//--><![CDATA[//><!--

tf.setBackend('cpu');
console.log(tf.getBackend());
var b,c

class CartPole {
  constructor() {
    // Constants that characterize the system.
    this.gravity = 9.8;
    this.massCart = 1.0;
    this.massPole = 0.1;
    this.totalMass = this.massCart + this.massPole;
    this.cartWidth = 0.2;
    this.cartHeight = 0.1;
    this.length = 0.5;
    this.poleMoment = this.massPole * this.length;
    this.forceMag = 10.0;
    this.tau = 0.02;  // Seconds between state updates.

    // Threshold values, beyond which a simulation will be marked as failed.
    this.xThreshold = 2.4;
    this.thetaThreshold = 12 / 360 * 2 * Math.PI;

    this.setRandomState();
  }

  setRandomState() {
    // The control-theory state variables of the cart-pole system.
    // Cart position, meters.
    this.x = Math.random() - 0.5;
    // Cart velocity.
    this.xDot = (Math.random() - 0.5) * 1;
    // Pole angle, radians.
    this.theta = (Math.random() - 0.5) * 2 * (6 / 360 * 2 * Math.PI);
    // Pole angle velocity.
    this.thetaDot =  (Math.random() - 0.5) * 0.5;
  }

  getStateTensor() {
    return tf.tensor2d([[this.x, this.xDot, this.theta, this.thetaDot]]);
  }

  update(action) {
    const force = action > 0 ? this.forceMag : -this.forceMag;

    const cosTheta = Math.cos(this.theta);
    const sinTheta = Math.sin(this.theta);

    const temp =
        (force + this.poleMoment * this.thetaDot * this.thetaDot * sinTheta) /
        this.totalMass;
    const thetaAcc = (this.gravity * sinTheta - cosTheta * temp) /
        (this.length *
         (4 / 3 - this.massPole * cosTheta * cosTheta / this.totalMass));
    const xAcc = temp - this.poleMoment * thetaAcc * cosTheta / this.totalMass;

    // Update the four state variables, using Euler's metohd.
    this.x += this.tau * this.xDot;
    this.xDot += this.tau * xAcc;
    this.theta += this.tau * this.thetaDot;
    this.thetaDot += this.tau * thetaAcc;

    return this.isDone();
  }


  isDone() {
    return this.x < -this.xThreshold || this.x > this.xThreshold ||
        this.theta < -this.thetaThreshold || this.theta > this.thetaThreshold;
  }
}


//--><!
</script>
<script type="text/javascript">
//--><![CDATA[//><!--

/**
 * Calculate the mean of an Array of numbers.
 *
 * @param {number[]} xs
 * @returns {number} The arithmetic mean of `xs`
 */
function mean(xs) {
  return sum(xs) / xs.length;
}

/**
 * Calculate the sum of an Array of numbers.
 *
 * @param {number[]} xs
 * @returns {number} The sum of `xs`.
 * @throws Error if `xs` is empty.
 */
function sum(xs) {
  if (xs.length === 0) {
    throw new Error('Expected xs to be a non-empty Array.');
  } else {
    return xs.reduce((x, prev) => prev + x);
  }
}
//--><!
</script>
<script type="text/javascript">
//--><![CDATA[//><!--

const appStatus = document.getElementById('app-status');
const storedModelStatusInput = document.getElementById('stored-model-status');
const hiddenLayerSizesInput = document.getElementById('hidden-layer-sizes');
const createModelButton = document.getElementById('create-model');
const deleteStoredModelButton = document.getElementById('delete-stored-model');
const cartPoleCanvas = document.getElementById('cart-pole-canvas');

const numIterationsInput = document.getElementById('num-iterations');
const gamesPerIterationInput = document.getElementById('games-per-iteration');
const discountRateInput = document.getElementById('discount-rate');
const maxStepsPerGameInput = document.getElementById('max-steps-per-game');
const learningRateInput = document.getElementById('learning-rate');
const renderDuringTrainingCheckbox =
    document.getElementById('render-during-training');

const trainButton = document.getElementById('train');
const testButton = document.getElementById('test');
const iterationStatus = document.getElementById('iteration-status');
const iterationProgress = document.getElementById('iteration-progress');
const trainStatus = document.getElementById('train-status');
const trainSpeed = document.getElementById('train-speed');
const trainProgress = document.getElementById('train-progress');

const stepsContainer = document.getElementById('steps-container');

// Module-global instance of policy network.
let policyNet;
let stopRequested = false;

/**
 * Display a message to the info div.
 *
 * @param {string} message The message to be displayed.
 */
function logStatus(message) {
  appStatus.textContent = message;
}

// Objects and functions to support display of cart pole status during training.
let renderDuringTraining = true;
async function maybeRenderDuringTraining(cartPole) {
  if (renderDuringTraining) {
    renderCartPole(cartPole, cartPoleCanvas);
    await tf.nextFrame();  // Unblock UI thread.
  }
}

/**
 * A function invoked at the end of every game during training.
 *
 * @param {number} gameCount A count of how many games has completed so far in
 *   the current iteration of training.
 * @param {number} totalGames Total number of games to complete in the current
 *   iteration of training.
 */
function onGameEnd(gameCount, totalGames) {
  iterationStatus.textContent = `Game ${gameCount} of ${totalGames}`;
  iterationProgress.value = gameCount / totalGames * 100;
  if (gameCount === totalGames) {
    iterationStatus.textContent = 'Updating weights...';
  }
}

/**
 * A function invokved at the end of a training iteration.
 *
 * @param {number} iterationCount A count of how many iterations has completed
 *   so far in the current round of training.
 * @param {*} totalIterations Total number of iterations to complete in the
 *   current round of training.
 */
function onIterationEnd(iterationCount, totalIterations) {
  trainStatus.textContent = `Iteration ${iterationCount} of ${totalIterations}`;
  trainProgress.value = iterationCount / totalIterations * 100;
}

// Objects and function to support the plotting of game steps during training.
let meanStepValues = [];
function plotSteps() {
  tfvis.render.linechart(stepsContainer, {values: meanStepValues}, {
    xLabel: 'Training Iteration',
    yLabel: 'Mean Steps Per Game',
    width: 400,
    height: 300,
  });
}

function disableModelControls() {
  trainButton.textContent = 'Stop';
  testButton.disabled = true;
  deleteStoredModelButton.disabled = true;
}

function enableModelControls() {
  trainButton.textContent = 'Train';
  testButton.disabled = false;
  deleteStoredModelButton.disabled = false;
}

/**
 * Render the current state of the system on an HTML canvas.
 *
 * @param {CartPole} cartPole The instance of cart-pole system to render.
 * @param {HTMLCanvasElement} canvas The instance of HTMLCanvasElement on which
 *   the rendering will happen.
 */
function renderCartPole(cartPole, canvas) {
  if (!canvas.style.display) {
    canvas.style.display = 'block';
  }
  const X_MIN = -cartPole.xThreshold;
  const X_MAX = cartPole.xThreshold;
  const xRange = X_MAX - X_MIN;
  const scale = canvas.width / xRange;

  const context = canvas.getContext('2d');
  context.clearRect(0, 0, canvas.width, canvas.height);
  const halfW = canvas.width / 2;

  // Draw the cart.
  const railY = canvas.height * 0.8;
  const cartW = cartPole.cartWidth * scale;
  const cartH = cartPole.cartHeight * scale;

  const cartX = cartPole.x * scale + halfW;

  context.beginPath();
  context.strokeStyle = '#000000';
  context.lineWidth = 2;
  context.rect(cartX - cartW / 2, railY - cartH / 2, cartW, cartH);
  context.stroke();

  // Draw the wheels under the cart.
  const wheelRadius = cartH / 4;
  for (const offsetX of [-1, 1]) {
    context.beginPath();
    context.lineWidth = 2;
    context.arc(
        cartX - cartW / 4 * offsetX, railY + cartH / 2 + wheelRadius,
        wheelRadius, 0, 2 * Math.PI);
    context.stroke();
  }

  // Draw the pole.
  const angle = cartPole.theta + Math.PI / 2;
  const poleTopX =
      halfW + scale * (cartPole.x + Math.cos(angle) * cartPole.length);
  const poleTopY = railY -
      scale * (cartPole.cartHeight / 2 + Math.sin(angle) * cartPole.length);
  context.beginPath();
  context.strokeStyle = '#ffa500';
  context.lineWidth = 6;
  context.moveTo(cartX, railY - cartH / 2);
  context.lineTo(poleTopX, poleTopY);
  context.stroke();

  // Draw the ground.
  const groundY = railY + cartH / 2 + wheelRadius * 2;
  context.beginPath();
  context.strokeStyle = '#000000';
  context.lineWidth = 1;
  context.moveTo(0, groundY);
  context.lineTo(canvas.width, groundY);
  context.stroke();

  const nDivisions = 40;
  for (let i = 0; i < nDivisions; ++i) {
    const x0 = canvas.width / nDivisions * i;
    const x1 = x0 + canvas.width / nDivisions / 2;
    const y0 = groundY + canvas.width / nDivisions / 2;
    const y1 = groundY;
    context.beginPath();
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.stroke();
  }

  // Draw the left and right limits.
  const limitTopY = groundY - canvas.height / 2;
  context.beginPath();
  context.strokeStyle = '#ff0000';
  context.lineWidth = 2;
  context.moveTo(1, groundY);
  context.lineTo(1, limitTopY);
  context.stroke();
  context.beginPath();
  context.moveTo(canvas.width - 1, groundY);
  context.lineTo(canvas.width - 1, limitTopY);
  context.stroke();
}

async function updateUIControlState() {
  const modelInfo = await SaveablePolicyNetwork.checkStoredModelStatus();
  if (modelInfo == null) {
    storedModelStatusInput.value = 'No stored model.';
    deleteStoredModelButton.disabled = true;

  } else {
    storedModelStatusInput.value = `Saved@${modelInfo.dateSaved.toISOString()}`;
    deleteStoredModelButton.disabled = false;
    createModelButton.disabled = true;
  }
  createModelButton.disabled = policyNet != null;
  hiddenLayerSizesInput.disabled = policyNet != null;
  trainButton.disabled = policyNet == null;
  testButton.disabled = policyNet == null;
  renderDuringTrainingCheckbox.checked = renderDuringTraining;
}

async function setUpUI() {
  const cartPole = new CartPole(true);

  if (await SaveablePolicyNetwork.checkStoredModelStatus() != null) {
    policyNet = await SaveablePolicyNetwork.loadModel();
    logStatus('Loaded policy network from IndexedDB.');
    hiddenLayerSizesInput.value = policyNet.hiddenLayerSizes();
  }
  await updateUIControlState();

  renderDuringTrainingCheckbox.addEventListener('change', () => {
    renderDuringTraining = renderDuringTrainingCheckbox.checked;
  });

  createModelButton.addEventListener('click', async () => {
    try {
      const hiddenLayerSizes =
          hiddenLayerSizesInput.value.trim().split(',').map(v => {
            const num = Number.parseInt(v.trim());
            if (!(num > 0)) {
              throw new Error(
                  `Invalid hidden layer sizes string: ` +
                  `${hiddenLayerSizesInput.value}`);
            }
            return num;
          });
      policyNet = new SaveablePolicyNetwork(hiddenLayerSizes);
      console.log('DONE constructing new instance of SaveablePolicyNetwork');
      await updateUIControlState();
    } catch (err) {
      logStatus(`ERROR: ${err.message}`);
    }
  });

  deleteStoredModelButton.addEventListener('click', async () => {
    if (confirm(`Are you sure you want to delete the locally-stored model?`)) {
      await policyNet.removeModel();
      policyNet = null;
      await updateUIControlState();
    }
  });

  trainButton.addEventListener('click', async () => {
    if (trainButton.textContent === 'Stop') {
      stopRequested = true;
    } else {
      disableModelControls();

      try {
        const trainIterations = Number.parseInt(numIterationsInput.value);
        if (!(trainIterations > 0)) {
          throw new Error(`Invalid number of iterations: ${trainIterations}`);
        }
        const gamesPerIteration = Number.parseInt(gamesPerIterationInput.value);
        if (!(gamesPerIteration > 0)) {
          throw new Error(
              `Invalid # of games per iterations: ${gamesPerIteration}`);
        }
        const maxStepsPerGame = Number.parseInt(maxStepsPerGameInput.value);
        if (!(maxStepsPerGame > 1)) {
          throw new Error(`Invalid max. steps per game: ${maxStepsPerGame}`);
        }
        const discountRate = Number.parseFloat(discountRateInput.value);
        if (!(discountRate > 0 && discountRate < 1)) {
          throw new Error(`Invalid discount rate: ${discountRate}`);
        }
        const learningRate = Number.parseFloat(learningRateInput.value);

        logStatus(
            'Training policy network... Please wait. ' +
            'Network is saved to IndexedDB at the end of each iteration.');
        const optimizer = tf.train.adam(learningRate);

        meanStepValues = [];
        onIterationEnd(0, trainIterations);
        let t0 = new Date().getTime();
        stopRequested = false;
        for (let i = 0; i < trainIterations; ++i) {
          const gameSteps = await policyNet.train(
              cartPole, optimizer, discountRate, gamesPerIteration,
              maxStepsPerGame);
          const t1 = new Date().getTime();
          const stepsPerSecond = sum(gameSteps) / ((t1 - t0) / 1e3);
          t0 = t1;
          trainSpeed.textContent = `${stepsPerSecond.toFixed(1)} steps/s`
          meanStepValues.push({x: i + 1, y: mean(gameSteps)});
          console.log(`# of tensors: ${tf.memory().numTensors}`);
          plotSteps();
          onIterationEnd(i + 1, trainIterations);
          await tf.nextFrame();  // Unblock UI thread.
          await policyNet.saveModel();
          await updateUIControlState();

          if (stopRequested) {
            logStatus('Training stopped by user.');
            break;
          }
        }
        if (!stopRequested) {
          logStatus('Training completed.');
        }
      } catch (err) {
        logStatus(`ERROR: ${err.message}`);
      }
      enableModelControls();
    }
  });

  testButton.addEventListener('click', async () => {
    disableModelControls();
    let isDone = false;
    const cartPole = new CartPole(true);
    cartPole.setRandomState();
    let steps = 0;
    stopRequested = false;
    let a = 0;
    while (!isDone) {
      steps++;
      tf.tidy(() => {
        const action = policyNet.getActions(cartPole.getStateTensor())[0];
        logStatus(
            `Test in progress. ` +
            `Action: ${action === 1 ? '<--' : ' -->'} (Step ${steps})`);
        isDone = cartPole.update(action);
        if (typeof c !== "undefined"){
          c.pos.x = b.pos.x = cartPole.x
          c.rotate({angle:-a, axis:vec(0,0,1)})
          a = cartPole.theta
          c.rotate({angle:a, axis:vec(0,0,1)})
        }
        renderCartPole(cartPole, cartPoleCanvas);
      });
      await tf.nextFrame();  // Unblock UI thread.
      if (stopRequested) {
        break;
      }
    }
    if (stopRequested) {
      logStatus(`Test stopped by user after ${steps} step(s).`);
    } else {
      logStatus(`Test finished. Survived ${steps} step(s).`);
    }
    console.log(`# of tensors: ${tf.memory().numTensors}`);
    enableModelControls();
  });
}
//--><!
</script>
<script type="text/javascript">
//--><![CDATA[//><!--

/**
 * Policy network for controlling the cart-pole system.
 *
 * The role of the policy network is to select an action based on the observed
 * state of the system. In this case, the action is the leftward or rightward
 * force and the observed system state is a four-dimensional vector, consisting
 * of cart position, cart velocity, pole angle and pole angular velocity.
 *
 */
class PolicyNetwork {
  /**
   * Constructor of PolicyNetwork.
   *
   * @param {number | number[] | tf.LayersModel} hiddenLayerSizes
   *   Can be any of the following
   *   - Size of the hidden layer, as a single number (for a single hidden
   *     layer)
   *   - An Array of numbers (for any number of hidden layers).
   *   - An instance of tf.LayersModel.
   */
  constructor(hiddenLayerSizesOrModel) {
    if (hiddenLayerSizesOrModel instanceof tf.LayersModel) {
      this.policyNet = hiddenLayerSizesOrModel;
    } else {
      this.createPolicyNetwork(hiddenLayerSizesOrModel);
    }
  }

  /**
   * Create the underlying model of this policy network.
   *
   * @param {number | number[]} hiddenLayerSizes Size of the hidden layer, as
   *   a single number (for a single hidden layer) or an Array of numbers (for
   *   any number of hidden layers).
   */
  createPolicyNetwork(hiddenLayerSizes) {
    if (!Array.isArray(hiddenLayerSizes)) {
      hiddenLayerSizes = [hiddenLayerSizes];
    }
    this.policyNet = tf.sequential();
    hiddenLayerSizes.forEach((hiddenLayerSize, i) => {
      this.policyNet.add(tf.layers.dense({
        units: hiddenLayerSize,
        activation: 'elu',
        // `inputShape` is required only for the first layer.
        inputShape: i === 0 ? [4] : undefined
      }));
    });
    // The last layer has only one unit. The single output number will be
    // converted to a probability of selecting the leftward-force action.
    this.policyNet.add(tf.layers.dense({units: 1}));
  }

  /**
   * Train the policy network's model.
   *
   * @param {CartPole} cartPoleSystem The cart-pole system object to use during
   *   training.
   * @param {tf.train.Optimizer} optimizer An instance of TensorFlow.js
   *   Optimizer to use for training.
   * @param {number} discountRate Reward discounting rate: a number between 0
   *   and 1.
   * @param {number} numGames Number of game to play for each model parameter
   *   update.
   * @param {number} maxStepsPerGame Maximum number of steps to perform during
   *   a game. If this number is reached, the game will end immediately.
   * @returns {number[]} The number of steps completed in the `numGames` games
   *   in this round of training.
   */
  async train(
      cartPoleSystem, optimizer, discountRate, numGames, maxStepsPerGame) {
    const allGradients = [];
    const allRewards = [];
    const gameSteps = [];
    let a = 0;
    onGameEnd(0, numGames);
    for (let i = 0; i < numGames; ++i) {
      // Randomly initialize the state of the cart-pole system at the beginning
      // of every game.
      cartPoleSystem.setRandomState();
      c.visible = false;
      c = cylinder({pos:vec( 0, 0, 0), axis:vec(0,0.8,0),  radius: 0.03, color : color.cyan})
      a = 0
      const gameRewards = [];
      const gameGradients = [];
      for (let j = 0; j < maxStepsPerGame; ++j) {
        // For every step of the game, remember gradients of the policy
        // network's weights with respect to the probability of the action
        // choice that lead to the reward.
        const gradients = tf.tidy(() => {
          const inputTensor = cartPoleSystem.getStateTensor();
          return this.getGradientsAndSaveActions(inputTensor).grads;
        });

        this.pushGradients(gameGradients, gradients);
        const action = this.currentActions_[0];
        const isDone = cartPoleSystem.update(action)
        if (typeof c !== "undefined"){
          c.pos.x = b.pos.x = cartPoleSystem.x
          c.rotate({angle:-a, axis:vec(0,0,1)})
          a = cartPoleSystem.theta
          c.rotate({angle:a, axis:vec(0,0,1)})
        }

        await maybeRenderDuringTraining(cartPoleSystem);

        if (isDone) {
          // When the game ends before max step count is reached, a reward of
          // 0 is given.
          gameRewards.push(0);
          break;
        } else {
          // As long as the game doesn't end, each step leads to a reward of 1.
          // These reward values will later be "discounted", leading to
          // higher reward values for longer-lasting games.
          gameRewards.push(1);
        }
      }
      onGameEnd(i + 1, numGames);
      gameSteps.push(gameRewards.length);
      this.pushGradients(allGradients, gameGradients);
      allRewards.push(gameRewards);
      await tf.nextFrame();
    }

    tf.tidy(() => {
      // The following line does three things:
      // 1. Performs reward discounting, i.e., make recent rewards count more
      //    than rewards from the further past. The effect is that the reward
      //    values from a game with many steps become larger than the values
      //    from a game with fewer steps.
      // 2. Normalize the rewards, i.e., subtract the global mean value of the
      //    rewards and divide the result by the global standard deviation of
      //    the rewards. Together with step 1, this makes the rewards from
      //    long-lasting games positive and rewards from short-lasting
      //    negative.
      // 3. Scale the gradients with the normalized reward values.
      const normalizedRewards =
          discountAndNormalizeRewards(allRewards, discountRate);
      // Add the scaled gradients to the weights of the policy network. This
      // step makes the policy network more likely to make choices that lead
      // to long-lasting games in the future (i.e., the crux of this RL
      // algorithm.)
      optimizer.applyGradients(
          scaleAndAverageGradients(allGradients, normalizedRewards));
    });
    tf.dispose(allGradients);
    return gameSteps;
  }

  getGradientsAndSaveActions(inputTensor) {
    const f = () => tf.tidy(() => {
      const [logits, actions] = this.getLogitsAndActions(inputTensor);
      this.currentActions_ = actions.dataSync();
      const labels =
          tf.sub(1, tf.tensor2d(this.currentActions_, actions.shape));
      return tf.losses.sigmoidCrossEntropy(labels, logits).asScalar();
    });
    return tf.variableGrads(f);
  }

  getCurrentActions() {
    return this.currentActions_;
  }

  /**
   * Get policy-network logits and the action based on state-tensor inputs.
   *
   * @param {tf.Tensor} inputs A tf.Tensor instance of shape `[batchSize, 4]`.
   * @returns {[tf.Tensor, tf.Tensor]}
   *   1. The logits tensor, of shape `[batchSize, 1]`.
   *   2. The actions tensor, of shape `[batchSize, 1]`.
   */
  getLogitsAndActions(inputs) {
    return tf.tidy(() => {
      const logits = this.policyNet.predict(inputs);

      // Get the probability of the leftward action.
      const leftProb = tf.sigmoid(logits);
      // Probabilites of the left and right actions.
      const leftRightProbs = tf.concat([leftProb, tf.sub(1, leftProb)], 1);
      const actions = tf.multinomial(leftRightProbs, 1, null, true);
      return [logits, actions];
    });
  }

  /**
   * Get actions based on a state-tensor input.
   *
   * @param {tf.Tensor} inputs A tf.Tensor instance of shape `[batchSize, 4]`.
   * @param {Float32Array} inputs The actions for the inputs, with length
   *   `batchSize`.
   */
  getActions(inputs) {
    return this.getLogitsAndActions(inputs)[1].dataSync();
  }

  /**
   * Push a new dictionary of gradients into records.
   *
   * @param {{[varName: string]: tf.Tensor[]}} record The record of variable
   *   gradient: a map from variable name to the Array of gradient values for
   *   the variable.
   * @param {{[varName: string]: tf.Tensor}} gradients The new gradients to push
   *   into `record`: a map from variable name to the gradient Tensor.
   */
  pushGradients(record, gradients) {
    for (const key in gradients) {
      if (key in record) {
        record[key].push(gradients[key]);
      } else {
        record[key] = [gradients[key]];
      }
    }
  }
}

// The IndexedDB path where the model of the policy network will be saved.
const MODEL_SAVE_PATH_ = 'indexeddb://cart-pole-v1';

/**
 * A subclass of PolicyNetwork that supports saving and loading.
 */
class SaveablePolicyNetwork extends PolicyNetwork {
  /**
   * Constructor of SaveablePolicyNetwork
   *
   * @param {number | number[]} hiddenLayerSizesOrModel
   */
  constructor(hiddenLayerSizesOrModel) {
    super(hiddenLayerSizesOrModel);
  }

  /**
   * Save the model to IndexedDB.
   */
  async saveModel() {
    return await this.policyNet.save(MODEL_SAVE_PATH_);
  }

  /**
   * Load the model fom IndexedDB.
   *
   * @returns {SaveablePolicyNetwork} The instance of loaded
   *   `SaveablePolicyNetwork`.
   * @throws {Error} If no model can be found in IndexedDB.
   */
  static async loadModel() {
    const modelsInfo = await tf.io.listModels();
    if (MODEL_SAVE_PATH_ in modelsInfo) {
      console.log(`Loading existing model...`);
      const model = await tf.loadLayersModel(MODEL_SAVE_PATH_);
      console.log(`Loaded model from ${MODEL_SAVE_PATH_}`);
      return new SaveablePolicyNetwork(model);
    } else {
      throw new Error(`Cannot find model at ${MODEL_SAVE_PATH_}.`);
    }
  }

  /**
   * Check the status of locally saved model.
   *
   * @returns If the locally saved model exists, the model info as a JSON
   *   object. Else, `undefined`.
   */
  static async checkStoredModelStatus() {
    const modelsInfo = await tf.io.listModels();
    return modelsInfo[MODEL_SAVE_PATH_];
  }

  /**
   * Remove the locally saved model from IndexedDB.
   */
  async removeModel() {
    return await tf.io.removeModel(MODEL_SAVE_PATH_);
  }

  /**
   * Get the sizes of the hidden layers.
   *
   * @returns {number | number[]} If the model has only one hidden layer,
   *   return the size of the layer as a single number. If the model has
   *   multiple hidden layers, return the sizes as an Array of numbers.
   */
  hiddenLayerSizes() {
    const sizes = [];
    for (let i = 0; i < this.policyNet.layers.length - 1; ++i) {
      sizes.push(this.policyNet.layers[i].units);
    }
    return sizes.length === 1 ? sizes[0] : sizes;
  }
}

/**
 * Discount the reward values.
 *
 * @param {number[]} rewards The reward values to be discounted.
 * @param {number} discountRate Discount rate: a number between 0 and 1, e.g.,
 *   0.95.
 * @returns {tf.Tensor} The discounted reward values as a 1D tf.Tensor.
 */
function discountRewards(rewards, discountRate) {
  const discountedBuffer = tf.buffer([rewards.length]);
  let prev = 0;
  for (let i = rewards.length - 1; i >= 0; --i) {
    const current = discountRate * prev + rewards[i];
    discountedBuffer.set(current, i);
    prev = current;
  }
  return discountedBuffer.toTensor();
}

/**
 * Discount and normalize reward values.
 *
 * This function performs two steps:
 *
 * 1. Discounts the reward values using `discountRate`.
 * 2. Normalize the reward values with the global reward mean and standard
 *    deviation.
 *
 * @param {number[][]} rewardSequences Sequences of reward values.
 * @param {number} discountRate Discount rate: a number between 0 and 1, e.g.,
 *   0.95.
 * @returns {tf.Tensor[]} The discounted and normalize reward values as an
 *   Array of tf.Tensor.
 */
function discountAndNormalizeRewards(rewardSequences, discountRate) {
  return tf.tidy(() => {
    const discounted = [];
    for (const sequence of rewardSequences) {
      discounted.push(discountRewards(sequence, discountRate))
    }
    // Compute the overall mean and stddev.
    const concatenated = tf.concat(discounted);
    const mean = tf.mean(concatenated);
    const std = tf.sqrt(tf.mean(tf.square(concatenated.sub(mean))));
    // Normalize the reward sequences using the mean and std.
    const normalized = discounted.map(rs => rs.sub(mean).div(std));
    return normalized;
  });
}

/**
 * Scale the gradient values using normalized reward values and compute average.
 *
 * The gradient values are scaled by the normalized reward values. Then they
 * are averaged across all games and all steps.
 *
 * @param {{[varName: string]: tf.Tensor[][]}} allGradients A map from variable
 *   name to all the gradient values for the variable across all games and all
 *   steps.
 * @param {tf.Tensor[]} normalizedRewards An Array of normalized reward values
 *   for all the games. Each element of the Array is a 1D tf.Tensor of which
 *   the length equals the number of steps in the game.
 * @returns {{[varName: string]: tf.Tensor}} Scaled and averaged gradients
 *   for the variables.
 */
function scaleAndAverageGradients(allGradients, normalizedRewards) {
  return tf.tidy(() => {
    const gradients = {};
    for (const varName in allGradients) {
      gradients[varName] = tf.tidy(() => {
        // Stack gradients together.
        const varGradients = allGradients[varName].map(
            varGameGradients => tf.stack(varGameGradients));
        // Expand dimensions of reward tensors to prepare for multiplication
        // with broadcasting.
        const expandedDims = [];
        for (let i = 0; i < varGradients[0].rank - 1; ++i) {
          expandedDims.push(1);
        }
        const reshapedNormalizedRewards = normalizedRewards.map(
            rs => rs.reshape(rs.shape.concat(expandedDims)));
        for (let g = 0; g < varGradients.length; ++g) {
          // This mul() call uses broadcasting.
          varGradients[g] = varGradients[g].mul(reshapedNormalizedRewards[g]);
        }
        // Concatenate the scaled gradients together, then average them across
        // all the steps of all the games.
        return tf.mean(tf.concat(varGradients, 0), 0);
      });
    }
    return gradients;
  });
}

setUpUI();
</script>
<div class="glowscript" id="glowscript">
<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js"></script>
<!-- Import tfjs-vis -->
<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-vis@1.4.0/dist/tfjs-vis.umd.min.js"></script>
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/lib/jquery/2.1/jquery-ui.custom.min.js" type="text/javascript"></script>
<script src="https://s3.amazonaws.com/glowscript/package/glow.3.0.min.js" type="text/javascript"></script>
<script type="text/javascript">
//--><![CDATA[//><!--

// START JAVASCRIPT
var b, c
;(function() {;
async function __main__() {
"use strict";

var version = ["3.0", "glowscript"];
Array.prototype.toString = function() { return __parsearray(this) };
var scene = canvas();
var vector = vec;

scene = canvas({range: 1.5})
b = box({pos:vec( 0, 0.0["-u"](), 0),  color : color.green, size:vec(0.25,0.1,0.2)})
c = cylinder({pos:vec( 0, 0, 0), axis:vec(0,0.8,0),  radius: 0.03, color : color.cyan})
var wire = cylinder({pos:vec( 10["-u"](), 0.0["-u"](), 0), axis:vec(20,0,0),  radius: 0.01, color : color.white})

}
;$(function(){ window.__context = { glowscript_container: $("#glowscript").removeAttr("id") }; __main__() })})()

// END JAVASCRIPT

//--><!
</script>
</div>
<h2>Featurescript</h2>
<p><a href="https://www.onshape.com/features/custom-features">https://www.onshape.com/features/custom-features</a></p>
<p>Documentation: <a href="https://cad.onshape.com/FsDoc/">https://cad.onshape.com/FsDoc/</a></p>
<p>Tutorial: <a href="https://github.com/mbartlett21/featurescript-tutorials/tree/master/slot-tutorials/tutorial-1">https://github.com/mbartlett21/featurescript-tutorials/tree/master/slot-tutorials/tutorial-1</a></p>
<p>Featurescript 論壇: <a href="https://forum.onshape.com/categories/featurescript">https://forum.onshape.com/categories/featurescript</a></p>
<p>Examples: <a href="https://github.com/dcowden/featurescript">https://github.com/dcowden/featurescript</a></p>
<p>Beginner's Guide: <a href="https://www.onshape.com/videos/the-beginners-guide-to-building-custom-cad-features-in-featurescript-010819">https://www.onshape.com/videos/the-beginners-guide-to-building-custom-cad-features-in-featurescript-010819</a></p>
<h4>參考</h4>
<p style="padding-left: 30px;"><a href="http://cadlab.mde.tw/post/onshape-featurescript-cheng-shi-yu-yan.html">http://cadlab.mde.tw/post/onshape-featurescript-cheng-shi-yu-yan.html</a></p>
<p style="padding-left: 30px;"><a href="https://cadlab.mde.tw/post/onshape-featurescript-tutorial-dao-yin.html">https://cadlab.mde.tw/post/onshape-featurescript-tutorial-dao-yin.html</a></p>
<p style="padding-left: 30px;"><a href="http://cadlab.mde.tw/post/search.html?q=featurescript">http://cadlab.mde.tw/post/search.html?q=featurescript</a></p><h2>Machine Learning</h2>
<p><a href="https://github.com/mdecourse/pyrobolearn">https://github.com/mdecourse/pyrobolearn</a></p>
<p><a href="https://github.com/mdecourse/visual-pushing-grasping">https://github.com/mdecourse/visual-pushing-grasping</a></p>
<p><a href="https://github.com/jhu-lcsr/good_robot">https://github.com/jhu-lcsr/good_robot</a></p><h3>Pytorch</h3>
<p><a href="https://www.kaggle.com/krishanudb/pytorch-tutorial-for-beginners">https://www.kaggle.com/krishanudb/pytorch-tutorial-for-beginners</a></p>
<p><a href="https://www.kaggle.com/crilancelo/pytorch-in-kaggle">https://www.kaggle.com/crilancelo/pytorch-in-kaggle</a></p>
<p><a href="https://www.kaggle.com/frtgnn/introduction-to-pytorch-a-very-gentle-start">https://www.kaggle.com/frtgnn/introduction-to-pytorch-a-very-gentle-start</a></p>
<h3>Keras</h3>
<p>Deep Learning Projects Using TensorFlow 2</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5802-6">https://link.springer.com/book/10.1007/978-1-4842-5802-6</a> </p>
<p></p>
<p></p>